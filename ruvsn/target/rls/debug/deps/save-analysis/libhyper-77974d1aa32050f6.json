{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17","program":"/home/shorida/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","hyper","--edition=2018","/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","--json=diagnostic-rendered-ansi,future-incompat","--crate-type","lib","--crate-type","staticlib","--crate-type","cdylib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"client\"","--cfg","feature=\"h2\"","--cfg","feature=\"http1\"","--cfg","feature=\"http2\"","--cfg","feature=\"runtime\"","--cfg","feature=\"socket2\"","--cfg","feature=\"tcp\"","-C","metadata=77974d1aa32050f6","-C","extra-filename=-77974d1aa32050f6","--out-dir","/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps","-L","dependency=/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps","--extern","bytes=/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps/libbytes-1cc7c62e6b906e91.rmeta","--extern","futures_channel=/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps/libfutures_channel-3babe33b10e88cf5.rmeta","--extern","futures_core=/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps/libfutures_core-ca7084b85b3c71ac.rmeta","--extern","futures_util=/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps/libfutures_util-269028fbf40d153f.rmeta","--extern","h2=/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps/libh2-e626ee41a1aa4e3a.rmeta","--extern","http=/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps/libhttp-b084bfa8338d41ba.rmeta","--extern","http_body=/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps/libhttp_body-2004b3ce324c6594.rmeta","--extern","httparse=/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps/libhttparse-e0673c72ee3a6554.rmeta","--extern","httpdate=/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps/libhttpdate-2a1215086f7a9156.rmeta","--extern","itoa=/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps/libitoa-7d53874c7ef85679.rmeta","--extern","pin_project_lite=/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps/libpin_project_lite-a998cf3a0c0f2ffc.rmeta","--extern","socket2=/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps/libsocket2-c92bb753eb03e6ea.rmeta","--extern","tokio=/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps/libtokio-ece40d630573241d.rmeta","--extern","tower_service=/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps/libtower_service-ac968396b52632eb.rmeta","--extern","tracing=/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps/libtracing-7dcc120667884fce.rmeta","--extern","want=/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps/libwant-798bfdbfde2c2c55.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/shorida/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps/libhyper-77974d1aa32050f6.rmeta"},"prelude":{"crate_id":{"name":"hyper","disambiguator":[5524582466481696352,0]},"crate_root":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src","external_crates":[{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14026078687029744792,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5443730852259234579,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4162025702538114948,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17612152343462746361,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5560808256873132085,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[135160560163186024,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5800521777261530329,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7095478770525139037,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17225897750877482818,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15613653607383163471,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[12428323400248712701,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[11893279639181573711,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[13583305032161054644,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16609837797022023111,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[18098459435141129808,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[15244551393771456017,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[6576340271055396708,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[15284510821186066958,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12982807908830018159,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","num":20,"id":{"name":"http","disambiguator":[6283784705270819427,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/mod.rs","num":21,"id":{"name":"fnv","disambiguator":[8330082054751851692,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/common/buf.rs","num":22,"id":{"name":"bytes","disambiguator":[7314794341678089032,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/mod.rs","num":23,"id":{"name":"itoa","disambiguator":[5510977470187001259,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/common/io/rewind.rs","num":24,"id":{"name":"tokio","disambiguator":[2083491362801612674,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/common/io/rewind.rs","num":25,"id":{"name":"mio","disambiguator":[5244721319522553482,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/common/io/rewind.rs","num":26,"id":{"name":"log","disambiguator":[776761502000636621,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/common/io/rewind.rs","num":27,"id":{"name":"cfg_if","disambiguator":[1004283514336169005,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/common/io/rewind.rs","num":28,"id":{"name":"libc","disambiguator":[15967550852856567583,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/common/lazy.rs","num":29,"id":{"name":"pin_project_lite","disambiguator":[10864849255587560100,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/common/io/rewind.rs","num":30,"id":{"name":"memchr","disambiguator":[7480610296841804772,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","num":31,"id":{"name":"socket2","disambiguator":[7287264656507871292,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/common/watch.rs","num":32,"id":{"name":"futures_util","disambiguator":[11696672590482649169,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","num":33,"id":{"name":"futures_core","disambiguator":[1591406731620905623,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/common/watch.rs","num":34,"id":{"name":"pin_utils","disambiguator":[12498854107001860550,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/common/watch.rs","num":35,"id":{"name":"futures_task","disambiguator":[5312922015445378390,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/mod.rs","num":36,"id":{"name":"http_body","disambiguator":[10345245459362249452,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","num":37,"id":{"name":"futures_channel","disambiguator":[6883385506186365939,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/length.rs","num":38,"id":{"name":"tracing","disambiguator":[10611824624856974296,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/length.rs","num":39,"id":{"name":"tracing_core","disambiguator":[18153404294366702238,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/length.rs","num":40,"id":{"name":"lazy_static","disambiguator":[9708727071027780738,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/mod.rs","num":41,"id":{"name":"tower_service","disambiguator":[9303431542951732763,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/mod.rs","num":42,"id":{"name":"h2","disambiguator":[8296353990973465085,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/mod.rs","num":43,"id":{"name":"tokio_util","disambiguator":[5196393153687813591,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/mod.rs","num":44,"id":{"name":"futures_sink","disambiguator":[11806979643220771367,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/mod.rs","num":45,"id":{"name":"slab","disambiguator":[13380692357016131026,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/mod.rs","num":46,"id":{"name":"indexmap","disambiguator":[5854379845269088973,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/mod.rs","num":47,"id":{"name":"hashbrown","disambiguator":[7515097708316050833,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/mod.rs","num":48,"id":{"name":"httparse","disambiguator":[7749972693634645296,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/dispatch.rs","num":49,"id":{"name":"want","disambiguator":[11386109480153803130,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/dispatch.rs","num":50,"id":{"name":"try_lock","disambiguator":[5048979015683420269,0]}}],"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":0,"byte_end":3103,"line_start":1,"line_end":109,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":20,"index":0},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":2295,"byte_end":2299,"line_start":60,"line_end":60,"column_start":9,"column_end":13},"alias_span":null,"name":"http","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":5},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":2383,"byte_end":2389,"line_start":65,"line_end":65,"column_start":23,"column_end":29},"alias_span":null,"name":"header","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":3000},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":2391,"byte_end":2397,"line_start":65,"line_end":65,"column_start":31,"column_end":37},"alias_span":null,"name":"Method","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":1358},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":2399,"byte_end":2406,"line_start":65,"line_end":65,"column_start":39,"column_end":46},"alias_span":null,"name":"Request","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":1491},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":2408,"byte_end":2416,"line_start":65,"line_end":65,"column_start":48,"column_end":56},"alias_span":null,"name":"Response","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":3093},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":2418,"byte_end":2428,"line_start":65,"line_end":65,"column_start":58,"column_end":68},"alias_span":null,"name":"StatusCode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":3218},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":2430,"byte_end":2433,"line_start":65,"line_end":65,"column_start":70,"column_end":73},"alias_span":null,"name":"Uri","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":3274},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":2435,"byte_end":2442,"line_start":65,"line_end":65,"column_start":75,"column_end":82},"alias_span":null,"name":"Version","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":2384},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":2485,"byte_end":2494,"line_start":68,"line_end":68,"column_start":22,"column_end":31},"alias_span":null,"name":"HeaderMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":383},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":2518,"byte_end":2522,"line_start":70,"line_end":70,"column_start":22,"column_end":26},"alias_span":null,"name":"Body","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":543},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":2547,"byte_end":2552,"line_start":71,"line_end":71,"column_start":24,"column_end":29},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":540},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":2554,"byte_end":2560,"line_start":71,"line_end":71,"column_start":31,"column_end":37},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":42},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/mod.rs","byte_start":26969,"byte_end":26972,"line_start":18,"line_end":18,"column_start":17,"column_end":20},"alias_span":null,"name":"Buf","value":"","parent":{"krate":0,"index":282}},{"kind":"Use","ref_id":{"krate":22,"index":526},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/mod.rs","byte_start":26974,"byte_end":26979,"line_start":18,"line_end":18,"column_start":22,"column_end":27},"alias_span":null,"name":"Bytes","value":"","parent":{"krate":0,"index":282}},{"kind":"Use","ref_id":{"krate":36,"index":406},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/mod.rs","byte_start":27001,"byte_end":27005,"line_start":19,"line_end":19,"column_start":20,"column_end":24},"alias_span":null,"name":"HttpBody","value":"","parent":{"krate":0,"index":282}},{"kind":"Use","ref_id":{"krate":36,"index":522},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/mod.rs","byte_start":27038,"byte_end":27046,"line_start":20,"line_end":20,"column_start":20,"column_end":28},"alias_span":null,"name":"SizeHint","value":"","parent":{"krate":0,"index":282}},{"kind":"Use","ref_id":{"krate":0,"index":322},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/mod.rs","byte_start":27074,"byte_end":27083,"line_start":22,"line_end":22,"column_start":26,"column_end":35},"alias_span":null,"name":"aggregate","value":"","parent":{"krate":0,"index":282}},{"kind":"Use","ref_id":{"krate":0,"index":383},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/mod.rs","byte_start":27106,"byte_end":27110,"line_start":23,"line_end":23,"column_start":22,"column_end":26},"alias_span":null,"name":"Body","value":"","parent":{"krate":0,"index":282}},{"kind":"Use","ref_id":{"krate":0,"index":409},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/mod.rs","byte_start":27112,"byte_end":27118,"line_start":23,"line_end":23,"column_start":28,"column_end":34},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":282}},{"kind":"Use","ref_id":{"krate":0,"index":515},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/mod.rs","byte_start":27189,"byte_end":27197,"line_start":25,"line_end":25,"column_start":25,"column_end":33},"alias_span":null,"name":"to_bytes","value":"","parent":{"krate":0,"index":282}},{"kind":"Use","ref_id":{"krate":41,"index":13},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/mod.rs","byte_start":86030,"byte_end":86037,"line_start":38,"line_end":38,"column_start":24,"column_end":31},"alias_span":null,"name":"Service","value":"","parent":{"krate":0,"index":669}},{"kind":"Use","ref_id":{"krate":0,"index":808},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/mod.rs","byte_start":86581,"byte_end":86596,"line_start":54,"line_end":54,"column_start":21,"column_end":36},"alias_span":null,"name":"make_service_fn","value":"","parent":{"krate":0,"index":669}},{"kind":"Use","ref_id":{"krate":0,"index":891},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/mod.rs","byte_start":86618,"byte_end":86628,"line_start":55,"line_end":55,"column_start":21,"column_end":31},"alias_span":null,"name":"service_fn","value":"","parent":{"krate":0,"index":669}},{"kind":"Use","ref_id":{"krate":0,"index":3772},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16773746,"byte_end":16773759,"line_start":52,"line_end":52,"column_start":24,"column_end":37},"alias_span":null,"name":"HttpConnector","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":3772},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16776589,"byte_end":16776602,"line_start":89,"line_end":89,"column_start":26,"column_end":39},"alias_span":null,"name":"HttpConnector","value":"","parent":{"krate":0,"index":3264}},{"kind":"Use","ref_id":{"krate":0,"index":3779},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16776604,"byte_end":16776612,"line_start":89,"line_end":89,"column_start":41,"column_end":49},"alias_span":null,"name":"HttpInfo","value":"","parent":{"krate":0,"index":3264}},{"kind":"Use","ref_id":{"krate":0,"index":3335},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16776742,"byte_end":16776749,"line_start":98,"line_end":98,"column_start":27,"column_end":34},"alias_span":null,"name":"Connect","value":"","parent":{"krate":0,"index":3264}},{"kind":"Use","ref_id":{"krate":0,"index":4833},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16773923,"byte_end":16773930,"line_start":61,"line_end":61,"column_start":28,"column_end":35},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":3985},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16773932,"byte_end":16773938,"line_start":61,"line_end":61,"column_start":37,"column_end":43},"alias_span":null,"name":"Client","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":3992},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16773940,"byte_end":16773954,"line_start":61,"line_end":61,"column_start":45,"column_end":59},"alias_span":null,"name":"ResponseFuture","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":3985},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":2971,"byte_end":2977,"line_start":100,"line_end":100,"column_start":28,"column_end":34},"alias_span":null,"name":"Client","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":0,"byte_end":3103,"line_start":1,"line_end":109,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":282},{"krate":0,"index":533},{"krate":0,"index":623},{"krate":0,"index":665},{"krate":0,"index":669},{"krate":0,"index":941},{"krate":0,"index":1486},{"krate":0,"index":1521},{"krate":0,"index":3260},{"krate":0,"index":3361}],"decl_id":null,"docs":" # hyper","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":23,"byte_end":62,"line_start":2,"line_end":2,"column_start":1,"column_end":40}},{"value":"/ # hyper","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":306,"byte_end":317,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":318,"byte_end":321,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ hyper is a **fast** and **correct** HTTP implementation written in and for Rust.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":322,"byte_end":406,"line_start":11,"line_end":11,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":407,"byte_end":410,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ## Features","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":411,"byte_end":426,"line_start":13,"line_end":13,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":427,"byte_end":430,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ - HTTP/1 and HTTP/2","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":431,"byte_end":454,"line_start":15,"line_end":15,"column_start":1,"column_end":24}},{"value":"/ - Asynchronous design","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":455,"byte_end":480,"line_start":16,"line_end":16,"column_start":1,"column_end":26}},{"value":"/ - Leading in performance","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":481,"byte_end":509,"line_start":17,"line_end":17,"column_start":1,"column_end":29}},{"value":"/ - Tested and **correct**","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":510,"byte_end":538,"line_start":18,"line_end":18,"column_start":1,"column_end":29}},{"value":"/ - Extensive production use","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":539,"byte_end":569,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/ - [Client](client/index.html) and [Server](server/index.html) APIs","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":570,"byte_end":640,"line_start":20,"line_end":20,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":641,"byte_end":644,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ If just starting out, **check out the [Guides](https://hyper.rs/guides)","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":645,"byte_end":720,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ first.**","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":721,"byte_end":733,"line_start":23,"line_end":23,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":734,"byte_end":737,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ## \"Low-level\"","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":738,"byte_end":756,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":757,"byte_end":760,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ hyper is a lower-level HTTP library, meant to be a building block","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":761,"byte_end":830,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/ for libraries and applications.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":831,"byte_end":866,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":867,"byte_end":870,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ If looking for just a convenient HTTP client, consider the","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":871,"byte_end":933,"line_start":30,"line_end":30,"column_start":1,"column_end":63}},{"value":"/ [reqwest](https://crates.io/crates/reqwest) crate.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":934,"byte_end":988,"line_start":31,"line_end":31,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":989,"byte_end":992,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Optional Features","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":993,"byte_end":1016,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":1017,"byte_end":1020,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ hyper uses a set of [feature flags] to reduce the amount of compiled code.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":1021,"byte_end":1099,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ It is possible to just enable certain features over others. By default,","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":1100,"byte_end":1175,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/ hyper does not enable any features but allows one to enable a subset for","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":1176,"byte_end":1252,"line_start":37,"line_end":37,"column_start":1,"column_end":77}},{"value":"/ their use case. Below is a list of the available feature flags. You may","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":1253,"byte_end":1328,"line_start":38,"line_end":38,"column_start":1,"column_end":76}},{"value":"/ also notice above each function, struct and trait there is listed one or","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":1329,"byte_end":1405,"line_start":39,"line_end":39,"column_start":1,"column_end":77}},{"value":"/ more feature flags that are required for that item to be used.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":1406,"byte_end":1472,"line_start":40,"line_end":40,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":1473,"byte_end":1476,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ If you are new to hyper it is possible to enable the `full` feature flag","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":1477,"byte_end":1553,"line_start":42,"line_end":42,"column_start":1,"column_end":77}},{"value":"/ which will enable all public APIs. Beware though that this will pull in","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":1554,"byte_end":1629,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/ many extra dependencies that you may not need.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":1630,"byte_end":1680,"line_start":44,"line_end":44,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":1681,"byte_end":1684,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ The following optional features are available:","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":1685,"byte_end":1735,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":1736,"byte_end":1739,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ - `http1`: Enables HTTP/1 support.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":1740,"byte_end":1778,"line_start":48,"line_end":48,"column_start":1,"column_end":39}},{"value":"/ - `http2`: Enables HTTP/2 support.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":1779,"byte_end":1817,"line_start":49,"line_end":49,"column_start":1,"column_end":39}},{"value":"/ - `client`: Enables the HTTP `client`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":1818,"byte_end":1860,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ - `server`: Enables the HTTP `server`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":1861,"byte_end":1903,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/ - `runtime`: Enables convenient integration with `tokio`, providing","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":1904,"byte_end":1975,"line_start":52,"line_end":52,"column_start":1,"column_end":72}},{"value":"/   connectors and acceptors for TCP, and a default executor.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":1976,"byte_end":2039,"line_start":53,"line_end":53,"column_start":1,"column_end":64}},{"value":"/ - `tcp`: Enables convenient implementations over TCP (using tokio).","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":2040,"byte_end":2111,"line_start":54,"line_end":54,"column_start":1,"column_end":72}},{"value":"/ - `stream`: Provides `futures::Stream` capabilities.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":2112,"byte_end":2168,"line_start":55,"line_end":55,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":2169,"byte_end":2172,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":2173,"byte_end":2270,"line_start":57,"line_end":57,"column_start":1,"column_end":98}}]},{"kind":"Mod","id":{"krate":0,"index":282},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"body","qualname":"::body","value":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/mod.rs","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":287},{"krate":0,"index":290},{"krate":0,"index":293},{"krate":0,"index":296},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":303},{"krate":0,"index":306},{"krate":0,"index":309},{"krate":0,"index":312},{"krate":0,"index":327},{"krate":0,"index":477},{"krate":0,"index":501},{"krate":0,"index":519},{"krate":0,"index":528}],"decl_id":null,"docs":" Streaming bodies for Requests and Responses","sig":null,"attributes":[{"value":"/ Streaming bodies for Requests and Responses","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/mod.rs","byte_start":26045,"byte_end":26092,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/mod.rs","byte_start":26093,"byte_end":26096,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ For both [Clients](crate::client) and [Servers](crate::server), requests and","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/mod.rs","byte_start":26097,"byte_end":26177,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ responses use streaming bodies, instead of complete buffering. This","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/mod.rs","byte_start":26178,"byte_end":26249,"line_start":4,"line_end":4,"column_start":1,"column_end":72}},{"value":"/ allows applications to not use memory they don't need, and allows exerting","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/mod.rs","byte_start":26250,"byte_end":26328,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ back-pressure on connections by only reading when asked.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/mod.rs","byte_start":26329,"byte_end":26389,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/mod.rs","byte_start":26390,"byte_end":26393,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ There are two pieces to this in hyper:","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/mod.rs","byte_start":26394,"byte_end":26436,"line_start":8,"line_end":8,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/mod.rs","byte_start":26437,"byte_end":26440,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ - **The [`HttpBody`](HttpBody) trait** describes all possible bodies.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/mod.rs","byte_start":26441,"byte_end":26514,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/   hyper allows any body type that implements `HttpBody`, allowing","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/mod.rs","byte_start":26515,"byte_end":26584,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/   applications to have fine-grained control over their streaming.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/mod.rs","byte_start":26585,"byte_end":26654,"line_start":12,"line_end":12,"column_start":1,"column_end":70}},{"value":"/ - **The [`Body`](Body) concrete type**, which is an implementation of","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/mod.rs","byte_start":26655,"byte_end":26728,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/   `HttpBody`, and returned by hyper as a \"receive stream\" (so, for server","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/mod.rs","byte_start":26729,"byte_end":26806,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/   requests and client responses). It is also a decent default implementation","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/mod.rs","byte_start":26807,"byte_end":26887,"line_start":15,"line_end":15,"column_start":1,"column_end":81}},{"value":"/   if you don't have very custom needs of your send streams.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/mod.rs","byte_start":26888,"byte_end":26951,"line_start":16,"line_end":16,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":322},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/aggregate.rs","byte_start":28951,"byte_end":28960,"line_start":16,"line_end":16,"column_start":14,"column_end":23},"name":"aggregate","qualname":"::body::aggregate::aggregate","value":"pub async fn aggregate<T>(T) -> /*impl Trait*/ where T: HttpBody","parent":null,"children":[],"decl_id":null,"docs":" Aggregate the data buffers from a body asynchronously.","sig":null,"attributes":[{"value":"/ Aggregate the data buffers from a body asynchronously.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/aggregate.rs","byte_start":28428,"byte_end":28486,"line_start":6,"line_end":6,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/aggregate.rs","byte_start":28487,"byte_end":28490,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The returned `impl Buf` groups the `Buf`s from the `HttpBody` without","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/aggregate.rs","byte_start":28491,"byte_end":28564,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/ copying them. This is ideal if you don't require a contiguous buffer.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/aggregate.rs","byte_start":28565,"byte_end":28638,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/aggregate.rs","byte_start":28639,"byte_end":28642,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/aggregate.rs","byte_start":28643,"byte_end":28653,"line_start":11,"line_end":11,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/aggregate.rs","byte_start":28654,"byte_end":28657,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Care needs to be taken if the remote is untrusted. The function doesn't implement any length","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/aggregate.rs","byte_start":28658,"byte_end":28754,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ checks and an malicious peer might make it consume arbitrary amounts of memory. Checking the","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/aggregate.rs","byte_start":28755,"byte_end":28851,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ `Content-Length` is a possibility, but it is not strictly mandated to be present.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/aggregate.rs","byte_start":28852,"byte_end":28937,"line_start":15,"line_end":15,"column_start":1,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":383},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":30439,"byte_end":30443,"line_start":36,"line_end":36,"column_start":12,"column_end":16},"name":"Body","qualname":"::body::body::Body","value":"Body {  }","parent":null,"children":[{"krate":0,"index":384},{"krate":0,"index":385}],"decl_id":null,"docs":" A stream of `Bytes`, used when receiving bodies.","sig":null,"attributes":[{"value":"/ A stream of `Bytes`, used when receiving bodies.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":30099,"byte_end":30151,"line_start":28,"line_end":28,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":30152,"byte_end":30155,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ A good default [`HttpBody`](crate::body::HttpBody) to use in many","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":30156,"byte_end":30225,"line_start":30,"line_end":30,"column_start":1,"column_end":70}},{"value":"/ applications.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":30226,"byte_end":30243,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":30244,"byte_end":30247,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Note: To read the full body, use [`body::to_bytes`](crate::body::to_bytes)","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":30248,"byte_end":30326,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ or [`body::aggregate`](crate::body::aggregate).","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":30327,"byte_end":30378,"line_start":34,"line_end":34,"column_start":1,"column_end":52}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":30379,"byte_end":30427,"line_start":35,"line_end":35,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":409},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":33132,"byte_end":33138,"line_start":109,"line_end":109,"column_start":12,"column_end":18},"name":"Sender","qualname":"::body::body::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412}],"decl_id":null,"docs":" A sender half created through [`Body::channel()`].","sig":null,"attributes":[{"value":"/ A sender half created through [`Body::channel()`].","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":32424,"byte_end":32478,"line_start":95,"line_end":95,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":32479,"byte_end":32482,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ Useful when wanting to stream chunks from another thread.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":32483,"byte_end":32544,"line_start":97,"line_end":97,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":32545,"byte_end":32548,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ## Body Closing","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":32549,"byte_end":32568,"line_start":99,"line_end":99,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":32569,"byte_end":32572,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ Note that the request body will always be closed normally when the sender is dropped (meaning","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":32573,"byte_end":32670,"line_start":101,"line_end":101,"column_start":1,"column_end":98}},{"value":"/ that the empty terminating chunk will be sent to the remote). If you desire to close the","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":32671,"byte_end":32763,"line_start":102,"line_end":102,"column_start":1,"column_end":93}},{"value":"/ connection with an incomplete response (e.g. in the case of an error during asynchronous","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":32764,"byte_end":32856,"line_start":103,"line_end":103,"column_start":1,"column_end":93}},{"value":"/ processing), call the [`Sender::abort()`] method to abort the body in an abnormal fashion.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":32857,"byte_end":32951,"line_start":104,"line_end":104,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":32952,"byte_end":32955,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ [`Body::channel()`]: struct.Body.html#method.channel","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":32956,"byte_end":33012,"line_start":106,"line_end":106,"column_start":1,"column_end":57}},{"value":"/ [`Sender::abort()`]: struct.Sender.html#method.abort","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":33013,"byte_end":33069,"line_start":107,"line_end":107,"column_start":1,"column_end":57}},{"value":"must_use = \"Sender does nothing unless sent on\"","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":33070,"byte_end":33120,"line_start":108,"line_end":108,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":33562,"byte_end":33567,"line_start":130,"line_end":130,"column_start":12,"column_end":17},"name":"empty","qualname":"<Body>::empty","value":"pub fn empty() -> Body","parent":null,"children":[],"decl_id":null,"docs":" Create an empty `Body` stream.","sig":null,"attributes":[{"value":"/ Create an empty `Body` stream.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":33317,"byte_end":33351,"line_start":119,"line_end":119,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":33356,"byte_end":33359,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":33364,"byte_end":33377,"line_start":121,"line_end":121,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":33382,"byte_end":33385,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":33390,"byte_end":33397,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use hyper::{Body, Request};","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":33402,"byte_end":33433,"line_start":124,"line_end":124,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":33438,"byte_end":33441,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ // create a `GET /` request","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":33446,"byte_end":33477,"line_start":126,"line_end":126,"column_start":5,"column_end":36}},{"value":"/ let get = Request::new(Body::empty());","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":33482,"byte_end":33524,"line_start":127,"line_end":127,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":33529,"byte_end":33536,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":33541,"byte_end":33550,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":33785,"byte_end":33792,"line_start":138,"line_end":138,"column_start":12,"column_end":19},"name":"channel","qualname":"<Body>::channel","value":"pub fn channel() -> (Sender, Body)","parent":null,"children":[],"decl_id":null,"docs":" Create a `Body` stream with an associated sender half.","sig":null,"attributes":[{"value":"/ Create a `Body` stream with an associated sender half.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":33627,"byte_end":33685,"line_start":134,"line_end":134,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":33690,"byte_end":33693,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Useful when wanting to stream chunks from another thread.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":33698,"byte_end":33759,"line_start":136,"line_end":136,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":33764,"byte_end":33773,"line_start":137,"line_end":137,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":46695,"byte_end":46705,"line_start":548,"line_end":548,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<Sender>::poll_ready","value":"pub fn poll_ready(&mut Self, &mut task::Context) -> Poll<crate::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Check to see if this `Sender` can send more data.\n","sig":null,"attributes":[{"value":"/ Check to see if this `Sender` can send more data.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":46630,"byte_end":46683,"line_start":547,"line_end":547,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":47569,"byte_end":47578,"line_start":570,"line_end":570,"column_start":18,"column_end":27},"name":"send_data","qualname":"<Sender>::send_data","value":"pub async fn send_data<'_>(&'_ mut Self, Bytes) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Send data on data channel when it is ready.\n","sig":null,"attributes":[{"value":"/ Send data on data channel when it is ready.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":47504,"byte_end":47551,"line_start":569,"line_end":569,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":47830,"byte_end":47843,"line_start":578,"line_end":578,"column_start":18,"column_end":31},"name":"send_trailers","qualname":"<Sender>::send_trailers","value":"pub async fn send_trailers<'_>(&'_ mut Self, HeaderMap) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Send trailers on trailers channel.\n","sig":null,"attributes":[{"value":"/ Send trailers on trailers channel.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":47774,"byte_end":47812,"line_start":577,"line_end":577,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":48518,"byte_end":48531,"line_start":598,"line_end":598,"column_start":12,"column_end":25},"name":"try_send_data","qualname":"<Sender>::try_send_data","value":"pub fn try_send_data(&mut Self, Bytes) -> Result<(), Bytes>","parent":null,"children":[],"decl_id":null,"docs":" Try to send data on this channel.","sig":null,"attributes":[{"value":"/ Try to send data on this channel.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":48124,"byte_end":48161,"line_start":586,"line_end":586,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":48166,"byte_end":48169,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":48174,"byte_end":48186,"line_start":588,"line_end":588,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":48191,"byte_end":48194,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(Bytes)` if the channel could not (currently) accept","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":48199,"byte_end":48267,"line_start":590,"line_end":590,"column_start":5,"column_end":73}},{"value":"/ another `Bytes`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":48272,"byte_end":48292,"line_start":591,"line_end":591,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":48297,"byte_end":48300,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":48305,"byte_end":48315,"line_start":593,"line_end":593,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":48320,"byte_end":48323,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ This is mostly useful for when trying to send from some other thread","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":48328,"byte_end":48400,"line_start":595,"line_end":595,"column_start":5,"column_end":77}},{"value":"/ that doesn't have an async context. If in an async context, prefer","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":48405,"byte_end":48475,"line_start":596,"line_end":596,"column_start":5,"column_end":75}},{"value":"/ `send_data()` instead.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":48480,"byte_end":48506,"line_start":597,"line_end":597,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":48768,"byte_end":48773,"line_start":605,"line_end":605,"column_start":12,"column_end":17},"name":"abort","qualname":"<Sender>::abort","value":"pub fn abort(Self)","parent":null,"children":[],"decl_id":null,"docs":" Aborts the body in an abnormal fashion.\n","sig":null,"attributes":[{"value":"/ Aborts the body in an abnormal fashion.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":48713,"byte_end":48756,"line_start":604,"line_end":604,"column_start":5,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":515},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/to_bytes.rs","byte_start":59150,"byte_end":59158,"line_start":47,"line_end":47,"column_start":14,"column_end":22},"name":"to_bytes","qualname":"::body::to_bytes::to_bytes","value":"pub async fn to_bytes<T>(T) -> /*impl Trait*/ where T: HttpBody","parent":null,"children":[],"decl_id":null,"docs":" Concatenate the buffers from a body into a single `Bytes` asynchronously.","sig":null,"attributes":[{"value":"/ Concatenate the buffers from a body into a single `Bytes` asynchronously.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/to_bytes.rs","byte_start":57550,"byte_end":57627,"line_start":5,"line_end":5,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/to_bytes.rs","byte_start":57628,"byte_end":57631,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This may require copying the data into a single buffer. If you don't need","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/to_bytes.rs","byte_start":57632,"byte_end":57709,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"/ a contiguous buffer, prefer the [`aggregate`](crate::body::aggregate())","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/to_bytes.rs","byte_start":57710,"byte_end":57785,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ function.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/to_bytes.rs","byte_start":57786,"byte_end":57799,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/to_bytes.rs","byte_start":57800,"byte_end":57803,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/to_bytes.rs","byte_start":57804,"byte_end":57814,"line_start":11,"line_end":11,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/to_bytes.rs","byte_start":57815,"byte_end":57818,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Care needs to be taken if the remote is untrusted. The function doesn't implement any length","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/to_bytes.rs","byte_start":57819,"byte_end":57915,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ checks and an malicious peer might make it consume arbitrary amounts of memory. Checking the","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/to_bytes.rs","byte_start":57916,"byte_end":58012,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ `Content-Length` is a possibility, but it is not strictly mandated to be present.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/to_bytes.rs","byte_start":58013,"byte_end":58098,"line_start":15,"line_end":15,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/to_bytes.rs","byte_start":58099,"byte_end":58102,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/to_bytes.rs","byte_start":58103,"byte_end":58116,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/to_bytes.rs","byte_start":58117,"byte_end":58120,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/to_bytes.rs","byte_start":58121,"byte_end":58128,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(all(feature = \"client\", any(feature = \"http1\", feature = \"http2\")))]","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/to_bytes.rs","byte_start":58129,"byte_end":58209,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ # async fn doc() -> hyper::Result<()> {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/to_bytes.rs","byte_start":58210,"byte_end":58253,"line_start":21,"line_end":21,"column_start":1,"column_end":44}},{"value":"/ use hyper::{body::HttpBody};","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/to_bytes.rs","byte_start":58254,"byte_end":58286,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/to_bytes.rs","byte_start":58287,"byte_end":58290,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # let request = hyper::Request::builder()","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/to_bytes.rs","byte_start":58291,"byte_end":58336,"line_start":24,"line_end":24,"column_start":1,"column_end":46}},{"value":"/ #        .method(hyper::Method::POST)","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/to_bytes.rs","byte_start":58337,"byte_end":58378,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/ #        .uri(\"http://httpbin.org/post\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/to_bytes.rs","byte_start":58379,"byte_end":58423,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"/ #        .header(\"content-type\", \"application/json\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/to_bytes.rs","byte_start":58424,"byte_end":58480,"line_start":27,"line_end":27,"column_start":1,"column_end":57}},{"value":"/ #        .body(hyper::Body::from(r#\"{\"library\":\"hyper\"}\"#)).unwrap();","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/to_bytes.rs","byte_start":58481,"byte_end":58554,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/ # let client = hyper::Client::new();","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/to_bytes.rs","byte_start":58555,"byte_end":58595,"line_start":29,"line_end":29,"column_start":1,"column_end":41}},{"value":"/ let response = client.request(request).await?;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/to_bytes.rs","byte_start":58596,"byte_end":58646,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/to_bytes.rs","byte_start":58647,"byte_end":58650,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ const MAX_ALLOWED_RESPONSE_SIZE: u64 = 1024;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/to_bytes.rs","byte_start":58651,"byte_end":58699,"line_start":32,"line_end":32,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/to_bytes.rs","byte_start":58700,"byte_end":58703,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let response_content_length = match response.body().size_hint().upper() {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/to_bytes.rs","byte_start":58704,"byte_end":58781,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/     Some(v) => v,","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/to_bytes.rs","byte_start":58782,"byte_end":58803,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/     None => MAX_ALLOWED_RESPONSE_SIZE + 1 // Just to protect ourselves from a malicious response","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/to_bytes.rs","byte_start":58804,"byte_end":58904,"line_start":36,"line_end":36,"column_start":1,"column_end":101}},{"value":"/ };","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/to_bytes.rs","byte_start":58905,"byte_end":58911,"line_start":37,"line_end":37,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/to_bytes.rs","byte_start":58912,"byte_end":58915,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ if response_content_length < MAX_ALLOWED_RESPONSE_SIZE {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/to_bytes.rs","byte_start":58916,"byte_end":58976,"line_start":39,"line_end":39,"column_start":1,"column_end":61}},{"value":"/     let body_bytes = hyper::body::to_bytes(response.into_body()).await?;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/to_bytes.rs","byte_start":58977,"byte_end":59053,"line_start":40,"line_end":40,"column_start":1,"column_end":77}},{"value":"/     println!(\"body: {:?}\", body_bytes);","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/to_bytes.rs","byte_start":59054,"byte_end":59097,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/to_bytes.rs","byte_start":59098,"byte_end":59103,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/to_bytes.rs","byte_start":59104,"byte_end":59107,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Ok(())","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/to_bytes.rs","byte_start":59108,"byte_end":59120,"line_start":44,"line_end":44,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/to_bytes.rs","byte_start":59121,"byte_end":59128,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/to_bytes.rs","byte_start":59129,"byte_end":59136,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":540},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":60099,"byte_end":60105,"line_start":6,"line_end":6,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Result type often returned from methods that can have hyper `Error`s.\n","sig":null,"attributes":[{"value":"/ Result type often returned from methods that can have hyper `Error`s.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":60016,"byte_end":60089,"line_start":5,"line_end":5,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":543},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":60261,"byte_end":60266,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":544}],"decl_id":null,"docs":" Represents errors that can occur handling HTTP streams.\n","sig":null,"attributes":[{"value":"/ Represents errors that can occur handling HTTP streams.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":60190,"byte_end":60249,"line_start":10,"line_end":10,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":64483,"byte_end":64491,"line_start":151,"line_end":151,"column_start":12,"column_end":20},"name":"is_parse","qualname":"<Error>::is_parse","value":"pub fn is_parse(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this was an HTTP parse error.\n","sig":null,"attributes":[{"value":"/ Returns true if this was an HTTP parse error.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":64422,"byte_end":64471,"line_start":150,"line_end":150,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":64670,"byte_end":64688,"line_start":156,"line_end":156,"column_start":12,"column_end":30},"name":"is_parse_too_large","qualname":"<Error>::is_parse_too_large","value":"pub fn is_parse_too_large(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this was an HTTP parse error caused by a message that was too large.\n","sig":null,"attributes":[{"value":"/ Returns true if this was an HTTP parse error caused by a message that was too large.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":64570,"byte_end":64658,"line_start":155,"line_end":155,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":64976,"byte_end":64991,"line_start":165,"line_end":165,"column_start":12,"column_end":27},"name":"is_parse_status","qualname":"<Error>::is_parse_status","value":"pub fn is_parse_status(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this was an HTTP parse error caused by an invalid response status code or\n reason phrase.\n","sig":null,"attributes":[{"value":"/ Returns true if this was an HTTP parse error caused by an invalid response status code or","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":64848,"byte_end":64941,"line_start":163,"line_end":163,"column_start":5,"column_end":98}},{"value":"/ reason phrase.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":64946,"byte_end":64964,"line_start":164,"line_end":164,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":65149,"byte_end":65156,"line_start":170,"line_end":170,"column_start":12,"column_end":19},"name":"is_user","qualname":"<Error>::is_user","value":"pub fn is_user(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this error was caused by user code.\n","sig":null,"attributes":[{"value":"/ Returns true if this error was caused by user code.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":65082,"byte_end":65137,"line_start":169,"line_end":169,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":65311,"byte_end":65322,"line_start":175,"line_end":175,"column_start":12,"column_end":23},"name":"is_canceled","qualname":"<Error>::is_canceled","value":"pub fn is_canceled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this was about a `Request` that was canceled.\n","sig":null,"attributes":[{"value":"/ Returns true if this was about a `Request` that was canceled.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":65234,"byte_end":65299,"line_start":174,"line_end":174,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":65462,"byte_end":65471,"line_start":180,"line_end":180,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Error>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if a sender's channel is closed.\n","sig":null,"attributes":[{"value":"/ Returns true if a sender's channel is closed.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":65401,"byte_end":65450,"line_start":179,"line_end":179,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":65620,"byte_end":65630,"line_start":185,"line_end":185,"column_start":12,"column_end":22},"name":"is_connect","qualname":"<Error>::is_connect","value":"pub fn is_connect(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this was an error from `Connect`.\n","sig":null,"attributes":[{"value":"/ Returns true if this was an error from `Connect`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":65555,"byte_end":65608,"line_start":184,"line_end":184,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":65794,"byte_end":65815,"line_start":190,"line_end":190,"column_start":12,"column_end":33},"name":"is_incomplete_message","qualname":"<Error>::is_incomplete_message","value":"pub fn is_incomplete_message(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the connection closed before a message could complete.\n","sig":null,"attributes":[{"value":"/ Returns true if the connection closed before a message could complete.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":65708,"byte_end":65782,"line_start":189,"line_end":189,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":65962,"byte_end":65983,"line_start":195,"line_end":195,"column_start":12,"column_end":33},"name":"is_body_write_aborted","qualname":"<Error>::is_body_write_aborted","value":"pub fn is_body_write_aborted(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the body write was aborted.\n","sig":null,"attributes":[{"value":"/ Returns true if the body write was aborted.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":65903,"byte_end":65950,"line_start":194,"line_end":194,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":66136,"byte_end":66146,"line_start":200,"line_end":200,"column_start":12,"column_end":22},"name":"is_timeout","qualname":"<Error>::is_timeout","value":"pub fn is_timeout(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by a timeout.\n","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by a timeout.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":66070,"byte_end":66124,"line_start":199,"line_end":199,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":66280,"byte_end":66290,"line_start":205,"line_end":205,"column_start":12,"column_end":22},"name":"into_cause","qualname":"<Error>::into_cause","value":"pub fn into_cause(Self) -> Option<Box<dyn StdError + Send + Sync>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the error, returning its cause.\n","sig":null,"attributes":[{"value":"/ Consumes the error, returning its cause.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":66224,"byte_end":66268,"line_start":204,"line_end":204,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":72280,"byte_end":72287,"line_start":400,"line_end":400,"column_start":12,"column_end":19},"name":"message","qualname":"<Error>::message","value":"pub fn message(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" The error's standalone message, without the message from the source.\n","sig":null,"attributes":[{"value":"/ The error's standalone message, without the message from the source.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":72196,"byte_end":72268,"line_start":399,"line_end":399,"column_start":5,"column_end":77}}]},{"kind":"Mod","id":{"krate":0,"index":623},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/ext.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ext","qualname":"::ext","value":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/ext.rs","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":631},{"krate":0,"index":634},{"krate":0,"index":637},{"krate":0,"index":640},{"krate":0,"index":1313},{"krate":0,"index":1315},{"krate":0,"index":1317},{"krate":0,"index":1318},{"krate":0,"index":1320},{"krate":0,"index":1321},{"krate":0,"index":643},{"krate":0,"index":648},{"krate":0,"index":651},{"krate":0,"index":653},{"krate":0,"index":1324},{"krate":0,"index":1327},{"krate":0,"index":1329},{"krate":0,"index":655}],"decl_id":null,"docs":" HTTP extensions.\n","sig":null,"attributes":[{"value":"/ HTTP extensions.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/ext.rs","byte_start":80849,"byte_end":80869,"line_start":1,"line_end":1,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":1313},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/ext.rs","byte_start":81288,"byte_end":81296,"line_start":16,"line_end":16,"column_start":12,"column_end":20},"name":"Protocol","qualname":"::ext::Protocol","value":"Protocol {  }","parent":null,"children":[{"krate":0,"index":1314}],"decl_id":null,"docs":" Represents the `:protocol` pseudo-header used by\n the [Extended CONNECT Protocol].","sig":null,"attributes":[{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/ext.rs","byte_start":81036,"byte_end":81061,"line_start":10,"line_end":10,"column_start":1,"column_end":26}},{"value":"/ Represents the `:protocol` pseudo-header used by","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/ext.rs","byte_start":81062,"byte_end":81114,"line_start":11,"line_end":11,"column_start":1,"column_end":53}},{"value":"/ the [Extended CONNECT Protocol].","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/ext.rs","byte_start":81115,"byte_end":81151,"line_start":12,"line_end":12,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/ext.rs","byte_start":81152,"byte_end":81155,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [Extended CONNECT Protocol]: https://datatracker.ietf.org/doc/html/rfc8441#section-4","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/ext.rs","byte_start":81156,"byte_end":81244,"line_start":14,"line_end":14,"column_start":1,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/ext.rs","byte_start":81444,"byte_end":81455,"line_start":23,"line_end":23,"column_start":18,"column_end":29},"name":"from_static","qualname":"<Protocol>::from_static","value":"pub const fn from_static(&'static str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts a static string to a protocol name.\n","sig":null,"attributes":[{"value":"/ Converts a static string to a protocol name.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/ext.rs","byte_start":81378,"byte_end":81426,"line_start":22,"line_end":22,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/ext.rs","byte_start":81640,"byte_end":81646,"line_start":30,"line_end":30,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Protocol>::as_str","value":"pub fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns a str representation of the header.\n","sig":null,"attributes":[{"value":"/ Returns a str representation of the header.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/ext.rs","byte_start":81581,"byte_end":81628,"line_start":29,"line_end":29,"column_start":5,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":665},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/rt.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rt","qualname":"::rt","value":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/rt.rs","parent":null,"children":[{"krate":0,"index":666}],"decl_id":null,"docs":" Runtime components","sig":null,"attributes":[{"value":"/ Runtime components","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/rt.rs","byte_start":84043,"byte_end":84065,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/rt.rs","byte_start":84066,"byte_end":84069,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ By default, hyper includes the [tokio](https://tokio.rs) runtime.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/rt.rs","byte_start":84070,"byte_end":84139,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/rt.rs","byte_start":84140,"byte_end":84143,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ If the `runtime` feature is disabled, the types in this module can be used","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/rt.rs","byte_start":84144,"byte_end":84222,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ to plug in other runtimes.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/rt.rs","byte_start":84223,"byte_end":84253,"line_start":6,"line_end":6,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":666},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/rt.rs","byte_start":84293,"byte_end":84301,"line_start":9,"line_end":9,"column_start":11,"column_end":19},"name":"Executor","qualname":"::rt::Executor","value":"Executor<Fut>","parent":null,"children":[{"krate":0,"index":668}],"decl_id":null,"docs":" An executor of futures.\n","sig":null,"attributes":[{"value":"/ An executor of futures.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/rt.rs","byte_start":84255,"byte_end":84282,"line_start":8,"line_end":8,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/rt.rs","byte_start":84370,"byte_end":84377,"line_start":11,"line_end":11,"column_start":8,"column_end":15},"name":"execute","qualname":"::rt::Executor::execute","value":"pub fn execute(&Self, Fut)","parent":{"krate":0,"index":666},"children":[],"decl_id":null,"docs":" Place the future into the executor to be run.\n","sig":null,"attributes":[{"value":"/ Place the future into the executor to be run.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/rt.rs","byte_start":84313,"byte_end":84362,"line_start":10,"line_end":10,"column_start":5,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":669},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"service","qualname":"::service","value":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/mod.rs","parent":null,"children":[{"krate":0,"index":670},{"krate":0,"index":673},{"krate":0,"index":720},{"krate":0,"index":833},{"krate":0,"index":861},{"krate":0,"index":922},{"krate":0,"index":925},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":932},{"krate":0,"index":935},{"krate":0,"index":938}],"decl_id":null,"docs":" Asynchronous Services","sig":null,"attributes":[{"value":"/ Asynchronous Services","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/mod.rs","byte_start":84399,"byte_end":84424,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/mod.rs","byte_start":84425,"byte_end":84428,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ A [`Service`](Service) is a trait representing an asynchronous","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/mod.rs","byte_start":84429,"byte_end":84495,"line_start":3,"line_end":3,"column_start":1,"column_end":67}},{"value":"/ function of a request to a response. It's similar to","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/mod.rs","byte_start":84496,"byte_end":84552,"line_start":4,"line_end":4,"column_start":1,"column_end":57}},{"value":"/ `async fn(Request) -> Result<Response, Error>`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/mod.rs","byte_start":84553,"byte_end":84604,"line_start":5,"line_end":5,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/mod.rs","byte_start":84605,"byte_end":84608,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The argument and return value isn't strictly required to be for HTTP.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/mod.rs","byte_start":84609,"byte_end":84682,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"/ Therefore, hyper uses several \"trait aliases\" to reduce clutter around","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/mod.rs","byte_start":84683,"byte_end":84757,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ bounds. These are:","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/mod.rs","byte_start":84758,"byte_end":84780,"line_start":9,"line_end":9,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/mod.rs","byte_start":84781,"byte_end":84784,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ - `HttpService`: This is blanketly implemented for all types that","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/mod.rs","byte_start":84785,"byte_end":84854,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/   implement `Service<http::Request<B1>, Response = http::Response<B2>>`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/mod.rs","byte_start":84855,"byte_end":84931,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ - `MakeService`: When a `Service` returns a new `Service` as its \"response\",","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/mod.rs","byte_start":84932,"byte_end":85012,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/   we consider it a `MakeService`. Again, blanketly implemented in those cases.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/mod.rs","byte_start":85013,"byte_end":85095,"line_start":14,"line_end":14,"column_start":1,"column_end":83}},{"value":"/ - `MakeConnection`: A `Service` that returns a \"connection\", a type that","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/mod.rs","byte_start":85096,"byte_end":85172,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/   implements `AsyncRead` and `AsyncWrite`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/mod.rs","byte_start":85173,"byte_end":85219,"line_start":16,"line_end":16,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/mod.rs","byte_start":85220,"byte_end":85223,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # HttpService","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/mod.rs","byte_start":85224,"byte_end":85241,"line_start":18,"line_end":18,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/mod.rs","byte_start":85242,"byte_end":85245,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ In hyper, especially in the server setting, a `Service` is usually bound","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/mod.rs","byte_start":85246,"byte_end":85322,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/ to a single connection. It defines how to respond to **all** requests that","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/mod.rs","byte_start":85323,"byte_end":85401,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ connection will receive.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/mod.rs","byte_start":85402,"byte_end":85430,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/mod.rs","byte_start":85431,"byte_end":85434,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The helper [`service_fn`](service_fn) should be sufficient for most cases, but","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/mod.rs","byte_start":85435,"byte_end":85517,"line_start":24,"line_end":24,"column_start":1,"column_end":83}},{"value":"/ if you need to implement `Service` for a type manually, you can follow the example","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/mod.rs","byte_start":85518,"byte_end":85604,"line_start":25,"line_end":25,"column_start":1,"column_end":87}},{"value":"/ in `service_struct_impl.rs`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/mod.rs","byte_start":85605,"byte_end":85637,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/mod.rs","byte_start":85638,"byte_end":85641,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # MakeService","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/mod.rs","byte_start":85642,"byte_end":85659,"line_start":28,"line_end":28,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/mod.rs","byte_start":85660,"byte_end":85663,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Since a `Service` is bound to a single connection, a [`Server`](crate::Server)","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/mod.rs","byte_start":85664,"byte_end":85746,"line_start":30,"line_end":30,"column_start":1,"column_end":83}},{"value":"/ needs a way to make them as it accepts connections. This is what a","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/mod.rs","byte_start":85747,"byte_end":85817,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ `MakeService` does.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/mod.rs","byte_start":85818,"byte_end":85841,"line_start":32,"line_end":32,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/mod.rs","byte_start":85842,"byte_end":85845,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Resources that need to be shared by all `Service`s can be put into a","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/mod.rs","byte_start":85846,"byte_end":85918,"line_start":34,"line_end":34,"column_start":1,"column_end":73}},{"value":"/ `MakeService`, and then passed to individual `Service`s when `call`","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/mod.rs","byte_start":85919,"byte_end":85990,"line_start":35,"line_end":35,"column_start":1,"column_end":72}},{"value":"/ is called.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/mod.rs","byte_start":85991,"byte_end":86005,"line_start":36,"line_end":36,"column_start":1,"column_end":15}}]},{"kind":"Trait","id":{"krate":0,"index":697},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/http.rs","byte_start":86837,"byte_end":86848,"line_start":8,"line_end":8,"column_start":11,"column_end":22},"name":"HttpService","qualname":"::service::http::HttpService","value":"HttpService<ReqBody>: sealed::Sealed<ReqBody>","parent":null,"children":[{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703}],"decl_id":null,"docs":" An asynchronous function from `Request` to `Response`.\n","sig":null,"attributes":[{"value":"/ An asynchronous function from `Request` to `Response`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/http.rs","byte_start":86768,"byte_end":86826,"line_start":7,"line_end":7,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":699},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/http.rs","byte_start":86947,"byte_end":86954,"line_start":10,"line_end":10,"column_start":10,"column_end":17},"name":"ResBody","qualname":"::service::http::HttpService::ResBody","value":"type ResBody: HttpBody;","parent":{"krate":0,"index":697},"children":[],"decl_id":null,"docs":" The `HttpBody` body of the `http::Response`.\n","sig":null,"attributes":[{"value":"/ The `HttpBody` body of the `http::Response`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/http.rs","byte_start":86889,"byte_end":86937,"line_start":9,"line_end":9,"column_start":5,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":700},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/http.rs","byte_start":87246,"byte_end":87251,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"name":"Error","qualname":"::service::http::HttpService::Error","value":"type Error: Into<Box<dyn StdError + Send + Sync>>;","parent":{"krate":0,"index":697},"children":[],"decl_id":null,"docs":" The error type that can occur within this `Service`.","sig":null,"attributes":[{"value":"/ The error type that can occur within this `Service`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/http.rs","byte_start":86971,"byte_end":87027,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/http.rs","byte_start":87032,"byte_end":87035,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ Note: Returning an `Error` to a hyper server will cause the connection","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/http.rs","byte_start":87040,"byte_end":87114,"line_start":14,"line_end":14,"column_start":5,"column_end":79}},{"value":"/ to be abruptly aborted. In most cases, it is better to return a `Response`","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/http.rs","byte_start":87119,"byte_end":87197,"line_start":15,"line_end":15,"column_start":5,"column_end":83}},{"value":"/ with a 4xx or 5xx status code.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/http.rs","byte_start":87202,"byte_end":87236,"line_start":16,"line_end":16,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":701},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/http.rs","byte_start":87351,"byte_end":87357,"line_start":20,"line_end":20,"column_start":10,"column_end":16},"name":"Future","qualname":"::service::http::HttpService::Future","value":"type Future: Future<Output = Result<Response<Self::ResBody>, Self::Error>>;","parent":{"krate":0,"index":697},"children":[],"decl_id":null,"docs":" The `Future` returned by this `Service`.\n","sig":null,"attributes":[{"value":"/ The `Future` returned by this `Service`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/http.rs","byte_start":87297,"byte_end":87341,"line_start":19,"line_end":19,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/http.rs","byte_start":87449,"byte_end":87459,"line_start":23,"line_end":23,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"::service::http::HttpService::poll_ready","value":"pub fn poll_ready(&mut Self, &mut task::Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":0,"index":697},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/http.rs","byte_start":87560,"byte_end":87564,"line_start":26,"line_end":26,"column_start":8,"column_end":12},"name":"call","qualname":"::service::http::HttpService::call","value":"pub fn call(&mut Self, Request<ReqBody>) -> Self::Future","parent":{"krate":0,"index":697},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":718},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/http.rs","byte_start":88320,"byte_end":88326,"line_start":57,"line_end":57,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::service::http::sealed::Sealed","value":"Sealed<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":754},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":88632,"byte_end":88646,"line_start":12,"line_end":12,"column_start":11,"column_end":25},"name":"MakeConnection","qualname":"::service::make::MakeConnection","value":"MakeConnection<Target>: self::sealed::Sealed<(Target,)>","parent":null,"children":[{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":756},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":88699,"byte_end":88709,"line_start":13,"line_end":13,"column_start":10,"column_end":20},"name":"Connection","qualname":"::service::make::MakeConnection::Connection","value":"type Connection: AsyncRead + AsyncWrite;","parent":{"krate":0,"index":754},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":757},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":88744,"byte_end":88749,"line_start":14,"line_end":14,"column_start":10,"column_end":15},"name":"Error","qualname":"::service::make::MakeConnection::Error","value":"type Error;","parent":{"krate":0,"index":754},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":758},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":88760,"byte_end":88766,"line_start":15,"line_end":15,"column_start":10,"column_end":16},"name":"Future","qualname":"::service::make::MakeConnection::Future","value":"type Future: Future<Output = Result<Self::Connection, Self::Error>>;","parent":{"krate":0,"index":754},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":88832,"byte_end":88842,"line_start":17,"line_end":17,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"::service::make::MakeConnection::poll_ready","value":"pub fn poll_ready(&mut Self, &mut task::Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":0,"index":754},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":88923,"byte_end":88938,"line_start":18,"line_end":18,"column_start":8,"column_end":23},"name":"make_connection","qualname":"::service::make::MakeConnection::make_connection","value":"pub fn make_connection(&mut Self, Target) -> Self::Future","parent":{"krate":0,"index":754},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":775},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":89730,"byte_end":89737,"line_start":44,"line_end":44,"column_start":10,"column_end":17},"name":"ResBody","qualname":"::service::make::MakeServiceRef::ResBody","value":"type ResBody: HttpBody;","parent":{"krate":0,"index":772},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":776},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":89758,"byte_end":89763,"line_start":45,"line_end":45,"column_start":10,"column_end":15},"name":"Error","qualname":"::service::make::MakeServiceRef::Error","value":"type Error: Into<Box<dyn StdError + Send + Sync>>;","parent":{"krate":0,"index":772},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":777},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":89813,"byte_end":89820,"line_start":46,"line_end":46,"column_start":10,"column_end":17},"name":"Service","qualname":"::service::make::MakeServiceRef::Service","value":"type Service: HttpService<ReqBody, ResBody = Self::ResBody, Error = Self::Error>;","parent":{"krate":0,"index":772},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":778},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":89899,"byte_end":89908,"line_start":47,"line_end":47,"column_start":10,"column_end":19},"name":"MakeError","qualname":"::service::make::MakeServiceRef::MakeError","value":"type MakeError: Into<Box<dyn StdError + Send + Sync>>;","parent":{"krate":0,"index":772},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":779},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":89958,"byte_end":89964,"line_start":48,"line_end":48,"column_start":10,"column_end":16},"name":"Future","qualname":"::service::make::MakeServiceRef::Future","value":"type Future: Future<Output = Result<Self::Service, Self::MakeError>>;","parent":{"krate":0,"index":772},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":780},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":90472,"byte_end":90484,"line_start":59,"line_end":59,"column_start":10,"column_end":22},"name":"__DontNameMe","qualname":"::service::make::MakeServiceRef::__DontNameMe","value":"type __DontNameMe: self::sealed::CantImpl;","parent":{"krate":0,"index":772},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":808},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":92677,"byte_end":92692,"line_start":138,"line_end":138,"column_start":8,"column_end":23},"name":"make_service_fn","qualname":"::service::make::make_service_fn","value":"pub fn make_service_fn<F, Target, Ret>(F) -> MakeServiceFn<F> where\nF: FnMut(&Target) -> Ret, Ret: Future","parent":null,"children":[],"decl_id":null,"docs":" Create a `MakeService` from a function.","sig":null,"attributes":[{"value":"/ Create a `MakeService` from a function.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":91656,"byte_end":91699,"line_start":102,"line_end":102,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":91700,"byte_end":91703,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":91704,"byte_end":91717,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":91718,"byte_end":91721,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":91722,"byte_end":91729,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"runtime\")]","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":91730,"byte_end":91763,"line_start":107,"line_end":107,"column_start":1,"column_end":34}},{"value":"/ # async fn run() {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":91764,"byte_end":91786,"line_start":108,"line_end":108,"column_start":1,"column_end":23}},{"value":"/ use std::convert::Infallible;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":91787,"byte_end":91820,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/ use hyper::{Body, Request, Response, Server};","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":91821,"byte_end":91870,"line_start":110,"line_end":110,"column_start":1,"column_end":50}},{"value":"/ use hyper::server::conn::AddrStream;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":91871,"byte_end":91911,"line_start":111,"line_end":111,"column_start":1,"column_end":41}},{"value":"/ use hyper::service::{make_service_fn, service_fn};","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":91912,"byte_end":91966,"line_start":112,"line_end":112,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":91967,"byte_end":91970,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ let addr = ([127, 0, 0, 1], 3000).into();","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":91971,"byte_end":92016,"line_start":114,"line_end":114,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":92017,"byte_end":92020,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ let make_svc = make_service_fn(|socket: &AddrStream| {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":92021,"byte_end":92079,"line_start":116,"line_end":116,"column_start":1,"column_end":59}},{"value":"/     let remote_addr = socket.remote_addr();","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":92080,"byte_end":92127,"line_start":117,"line_end":117,"column_start":1,"column_end":48}},{"value":"/     async move {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":92128,"byte_end":92148,"line_start":118,"line_end":118,"column_start":1,"column_end":21}},{"value":"/         Ok::<_, Infallible>(service_fn(move |_: Request<Body>| async move {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":92149,"byte_end":92228,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"/             Ok::<_, Infallible>(","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":92229,"byte_end":92265,"line_start":120,"line_end":120,"column_start":1,"column_end":37}},{"value":"/                 Response::new(Body::from(format!(\"Hello, {}!\", remote_addr)))","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":92266,"byte_end":92347,"line_start":121,"line_end":121,"column_start":1,"column_end":82}},{"value":"/             )","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":92348,"byte_end":92365,"line_start":122,"line_end":122,"column_start":1,"column_end":18}},{"value":"/         }))","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":92366,"byte_end":92381,"line_start":123,"line_end":123,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":92382,"byte_end":92391,"line_start":124,"line_end":124,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":92392,"byte_end":92399,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":92400,"byte_end":92403,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ // Then bind and serve...","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":92404,"byte_end":92433,"line_start":127,"line_end":127,"column_start":1,"column_end":30}},{"value":"/ let server = Server::bind(&addr)","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":92434,"byte_end":92470,"line_start":128,"line_end":128,"column_start":1,"column_end":37}},{"value":"/     .serve(make_svc);","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":92471,"byte_end":92496,"line_start":129,"line_end":129,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":92497,"byte_end":92500,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ // Finally, spawn `server` onto an Executor...","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":92501,"byte_end":92551,"line_start":131,"line_end":131,"column_start":1,"column_end":51}},{"value":"/ if let Err(e) = server.await {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":92552,"byte_end":92586,"line_start":132,"line_end":132,"column_start":1,"column_end":35}},{"value":"/     eprintln!(\"server error: {}\", e);","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":92587,"byte_end":92628,"line_start":133,"line_end":133,"column_start":1,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":92629,"byte_end":92634,"line_start":134,"line_end":134,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":92635,"byte_end":92642,"line_start":135,"line_end":135,"column_start":1,"column_end":8}},{"value":"/ # fn main() {}","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":92643,"byte_end":92661,"line_start":136,"line_end":136,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":92662,"byte_end":92669,"line_start":137,"line_end":137,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1331},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":92903,"byte_end":92916,"line_start":148,"line_end":148,"column_start":12,"column_end":25},"name":"MakeServiceFn","qualname":"::service::make::MakeServiceFn","value":"MakeServiceFn {  }","parent":null,"children":[{"krate":0,"index":1333}],"decl_id":null,"docs":" `MakeService` returned from [`make_service_fn`]\n","sig":null,"attributes":[{"value":"/ `MakeService` returned from [`make_service_fn`]","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":92817,"byte_end":92868,"line_start":146,"line_end":146,"column_start":1,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":828},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":93633,"byte_end":93639,"line_start":178,"line_end":178,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::service::make::sealed::Sealed","value":"Sealed<X>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1339},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/oneshot.rs","byte_start":94433,"byte_end":94440,"line_start":22,"line_end":22,"column_start":16,"column_end":23},"name":"Oneshot","qualname":"::service::oneshot::Oneshot","value":"Oneshot {  }","parent":null,"children":[{"krate":0,"index":1342}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":15528759,"byte_end":15528768,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":891},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/util.rs","byte_start":96496,"byte_end":96506,"line_start":27,"line_end":27,"column_start":8,"column_end":18},"name":"service_fn","qualname":"::service::util::service_fn","value":"pub fn service_fn<F, R, S>(F) -> ServiceFn<F, R> where F: FnMut(Request<R>) ->\nS, S: Future","parent":null,"children":[],"decl_id":null,"docs":" Create a `Service` from a function.","sig":null,"attributes":[{"value":"/ Create a `Service` from a function.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/util.rs","byte_start":95941,"byte_end":95980,"line_start":9,"line_end":9,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/util.rs","byte_start":95981,"byte_end":95984,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/util.rs","byte_start":95985,"byte_end":95998,"line_start":11,"line_end":11,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/util.rs","byte_start":95999,"byte_end":96002,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/util.rs","byte_start":96003,"byte_end":96010,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ use hyper::{Body, Request, Response, Version};","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/util.rs","byte_start":96011,"byte_end":96061,"line_start":14,"line_end":14,"column_start":1,"column_end":51}},{"value":"/ use hyper::service::service_fn;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/util.rs","byte_start":96062,"byte_end":96097,"line_start":15,"line_end":15,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/util.rs","byte_start":96098,"byte_end":96101,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ let service = service_fn(|req: Request<Body>| async move {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/util.rs","byte_start":96102,"byte_end":96164,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/     if req.version() == Version::HTTP_11 {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/util.rs","byte_start":96165,"byte_end":96211,"line_start":18,"line_end":18,"column_start":1,"column_end":47}},{"value":"/         Ok(Response::new(Body::from(\"Hello World\")))","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/util.rs","byte_start":96212,"byte_end":96268,"line_start":19,"line_end":19,"column_start":1,"column_end":57}},{"value":"/     } else {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/util.rs","byte_start":96269,"byte_end":96285,"line_start":20,"line_end":20,"column_start":1,"column_end":17}},{"value":"/         // Note: it's usually better to return a Response","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/util.rs","byte_start":96286,"byte_end":96347,"line_start":21,"line_end":21,"column_start":1,"column_end":62}},{"value":"/         // with an appropriate StatusCode instead of an Err.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/util.rs","byte_start":96348,"byte_end":96412,"line_start":22,"line_end":22,"column_start":1,"column_end":65}},{"value":"/         Err(\"not HTTP/1.1, abort connection\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/util.rs","byte_start":96413,"byte_end":96462,"line_start":23,"line_end":23,"column_start":1,"column_end":50}},{"value":"/     }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/util.rs","byte_start":96463,"byte_end":96472,"line_start":24,"line_end":24,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/util.rs","byte_start":96473,"byte_end":96480,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/util.rs","byte_start":96481,"byte_end":96488,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":895},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/util.rs","byte_start":96708,"byte_end":96717,"line_start":39,"line_end":39,"column_start":12,"column_end":21},"name":"ServiceFn","qualname":"::service::util::ServiceFn","value":"ServiceFn {  }","parent":null,"children":[{"krate":0,"index":898},{"krate":0,"index":899}],"decl_id":null,"docs":" Service returned by [`service_fn`]\n","sig":null,"attributes":[{"value":"/ Service returned by [`service_fn`]","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/util.rs","byte_start":96658,"byte_end":96696,"line_start":38,"line_end":38,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":941},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"upgrade","qualname":"::upgrade","value":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","parent":null,"children":[{"krate":0,"index":942},{"krate":0,"index":945},{"krate":0,"index":948},{"krate":0,"index":951},{"krate":0,"index":954},{"krate":0,"index":957},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":964},{"krate":0,"index":967},{"krate":0,"index":970},{"krate":0,"index":973},{"krate":0,"index":976},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":983},{"krate":0,"index":986},{"krate":0,"index":989},{"krate":0,"index":992},{"krate":0,"index":994},{"krate":0,"index":1436},{"krate":0,"index":1441},{"krate":0,"index":996},{"krate":0,"index":998},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1006},{"krate":0,"index":1008},{"krate":0,"index":1014},{"krate":0,"index":1016},{"krate":0,"index":1019},{"krate":0,"index":1023},{"krate":0,"index":1025},{"krate":0,"index":1482},{"krate":0,"index":1484},{"krate":0,"index":1028},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1033},{"krate":0,"index":1035},{"krate":0,"index":1040}],"decl_id":null,"docs":" HTTP Upgrades","sig":null,"attributes":[{"value":"/ HTTP Upgrades","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":97797,"byte_end":97814,"line_start":1,"line_end":1,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":97815,"byte_end":97818,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module deals with managing [HTTP Upgrades][mdn] in hyper. Since","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":97819,"byte_end":97891,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"/ several concepts in HTTP allow for first talking HTTP, and then converting","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":97892,"byte_end":97970,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ to a different protocol, this module conflates them into a single API.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":97971,"byte_end":98045,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/ Those include:","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":98046,"byte_end":98064,"line_start":6,"line_end":6,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":98065,"byte_end":98068,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ - HTTP/1.1 Upgrades","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":98069,"byte_end":98092,"line_start":8,"line_end":8,"column_start":1,"column_end":24}},{"value":"/ - HTTP `CONNECT`","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":98093,"byte_end":98113,"line_start":9,"line_end":9,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":98114,"byte_end":98117,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ You are responsible for any other pre-requisites to establish an upgrade,","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":98118,"byte_end":98195,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ such as sending the appropriate headers, methods, and status codes. You can","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":98196,"byte_end":98275,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ then use [`on`][] to grab a `Future` which will resolve to the upgraded","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":98276,"byte_end":98351,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ connection object, or an error if the upgrade fails.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":98352,"byte_end":98408,"line_start":14,"line_end":14,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":98409,"byte_end":98412,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [mdn]: https://developer.mozilla.org/en-US/docs/Web/HTTP/Protocol_upgrade_mechanism","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":98413,"byte_end":98500,"line_start":16,"line_end":16,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":98501,"byte_end":98504,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Client","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":98505,"byte_end":98517,"line_start":18,"line_end":18,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":98518,"byte_end":98521,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Sending an HTTP ugprade from the [`client`](super::client) involves setting","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":98522,"byte_end":98601,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ either the appropriate method, if wanting to `CONNECT`, or headers such as","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":98602,"byte_end":98680,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ `Upgrade` and `Connection`, on the `http::Request`. Once receiving the","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":98681,"byte_end":98755,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ `http::Response` back, you must check for the specific information that the","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":98756,"byte_end":98835,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ upgrade is agreed upon by the server (such as a `101` status code), and then","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":98836,"byte_end":98916,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ get the `Future` from the `Response`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":98917,"byte_end":98958,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":98959,"byte_end":98962,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Server","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":98963,"byte_end":98975,"line_start":27,"line_end":27,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":98976,"byte_end":98979,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Receiving upgrade requests in a server requires you to check the relevant","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":98980,"byte_end":99057,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ headers in a `Request`, and if an upgrade should be done, you then send the","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":99058,"byte_end":99137,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ corresponding headers in a response. To then wait for hyper to finish the","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":99138,"byte_end":99215,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ upgrade, you call `on()` with the `Request`, and then can spawn a task","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":99216,"byte_end":99290,"line_start":32,"line_end":32,"column_start":1,"column_end":75}},{"value":"/ awaiting it.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":99291,"byte_end":99307,"line_start":33,"line_end":33,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":99308,"byte_end":99311,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":99312,"byte_end":99325,"line_start":35,"line_end":35,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":99326,"byte_end":99329,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ See [this example][example] showing how upgrades work with both","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":99330,"byte_end":99397,"line_start":37,"line_end":37,"column_start":1,"column_end":68}},{"value":"/ Clients and Servers.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":99398,"byte_end":99422,"line_start":38,"line_end":38,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":99423,"byte_end":99426,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [example]: https://github.com/hyperium/hyper/blob/master/examples/upgrades.rs","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":99427,"byte_end":99508,"line_start":40,"line_end":40,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":992},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":100191,"byte_end":100199,"line_start":65,"line_end":65,"column_start":12,"column_end":20},"name":"Upgraded","qualname":"::upgrade::Upgraded","value":"Upgraded {  }","parent":null,"children":[{"krate":0,"index":993}],"decl_id":null,"docs":" An upgraded HTTP connection.","sig":null,"attributes":[{"value":"/ An upgraded HTTP connection.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":99861,"byte_end":99893,"line_start":57,"line_end":57,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":99894,"byte_end":99897,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ This type holds a trait object internally of the original IO that","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":99898,"byte_end":99967,"line_start":59,"line_end":59,"column_start":1,"column_end":70}},{"value":"/ was used to speak HTTP before the upgrade. It can be used directly","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":99968,"byte_end":100038,"line_start":60,"line_end":60,"column_start":1,"column_end":71}},{"value":"/ as a `Read` or `Write` for convenience.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":100039,"byte_end":100082,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":100083,"byte_end":100086,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ Alternatively, if the exact type is known, this can be deconstructed","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":100087,"byte_end":100159,"line_start":63,"line_end":63,"column_start":1,"column_end":73}},{"value":"/ into its parts.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":100160,"byte_end":100179,"line_start":64,"line_end":64,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":994},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":100373,"byte_end":100382,"line_start":72,"line_end":72,"column_start":12,"column_end":21},"name":"OnUpgrade","qualname":"::upgrade::OnUpgrade","value":"OnUpgrade {  }","parent":null,"children":[{"krate":0,"index":995}],"decl_id":null,"docs":" A future for a possible HTTP upgrade.","sig":null,"attributes":[{"value":"/ A future for a possible HTTP upgrade.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":100241,"byte_end":100282,"line_start":69,"line_end":69,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":100283,"byte_end":100286,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ If no upgrade was available, or it doesn't succeed, yields an `Error`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":100287,"byte_end":100361,"line_start":71,"line_end":71,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1436},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":100689,"byte_end":100694,"line_start":81,"line_end":81,"column_start":12,"column_end":17},"name":"Parts","qualname":"::upgrade::Parts","value":"Parts { io, read_buf }","parent":null,"children":[{"krate":0,"index":1438},{"krate":0,"index":1439},{"krate":0,"index":1440}],"decl_id":null,"docs":" The deconstructed parts of an [`Upgraded`](Upgraded) type.","sig":null,"attributes":[{"value":"/ The deconstructed parts of an [`Upgraded`](Upgraded) type.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":100448,"byte_end":100510,"line_start":76,"line_end":76,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":100511,"byte_end":100514,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ Includes the original IO type, and a read buffer of bytes that the","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":100515,"byte_end":100585,"line_start":78,"line_end":78,"column_start":1,"column_end":71}},{"value":"/ HTTP state machine may have already read before completing an upgrade.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":100586,"byte_end":100660,"line_start":79,"line_end":79,"column_start":1,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":1438},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":100764,"byte_end":100766,"line_start":83,"line_end":83,"column_start":9,"column_end":11},"name":"io","qualname":"::upgrade::Parts::io","value":"T","parent":{"krate":0,"index":1436},"children":[],"decl_id":null,"docs":" The original IO object used before the upgrade.\n","sig":null,"attributes":[{"value":"/ The original IO object used before the upgrade.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":100704,"byte_end":100755,"line_start":82,"line_end":82,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1439},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":101186,"byte_end":101194,"line_start":92,"line_end":92,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::upgrade::Parts::read_buf","value":"bytes::Bytes","parent":{"krate":0,"index":1436},"children":[],"decl_id":null,"docs":" A buffer of bytes that have been read but not processed as HTTP.","sig":null,"attributes":[{"value":"/ A buffer of bytes that have been read but not processed as HTTP.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":100775,"byte_end":100843,"line_start":84,"line_end":84,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":100848,"byte_end":100851,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ For instance, if the `Connection` is used for an HTTP upgrade request,","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":100856,"byte_end":100930,"line_start":86,"line_end":86,"column_start":5,"column_end":79}},{"value":"/ it is possible the server sent back the first bytes of the new protocol","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":100935,"byte_end":101010,"line_start":87,"line_end":87,"column_start":5,"column_end":80}},{"value":"/ along with the response upgrade.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":101015,"byte_end":101051,"line_start":88,"line_end":88,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":101056,"byte_end":101059,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ You will want to check for any existing bytes if you plan to continue","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":101064,"byte_end":101137,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ communicating on the IO object.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":101142,"byte_end":101177,"line_start":91,"line_end":91,"column_start":5,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":996},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":101447,"byte_end":101449,"line_start":104,"line_end":104,"column_start":8,"column_end":10},"name":"on","qualname":"::upgrade::on","value":"pub fn on<T: sealed::CanUpgrade>(T) -> OnUpgrade","parent":null,"children":[],"decl_id":null,"docs":" Gets a pending HTTP upgrade from this message.","sig":null,"attributes":[{"value":"/ Gets a pending HTTP upgrade from this message.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":101222,"byte_end":101272,"line_start":96,"line_end":96,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":101273,"byte_end":101276,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ This can be called on the following types:","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":101277,"byte_end":101323,"line_start":98,"line_end":98,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":101324,"byte_end":101327,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ - `http::Request<B>`","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":101328,"byte_end":101352,"line_start":100,"line_end":100,"column_start":1,"column_end":25}},{"value":"/ - `http::Response<B>`","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":101353,"byte_end":101378,"line_start":101,"line_end":101,"column_start":1,"column_end":26}},{"value":"/ - `&mut http::Request<B>`","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":101379,"byte_end":101408,"line_start":102,"line_end":102,"column_start":1,"column_end":30}},{"value":"/ - `&mut http::Response<B>`","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":101409,"byte_end":101439,"line_start":103,"line_end":103,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1004},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":102367,"byte_end":102375,"line_start":136,"line_end":136,"column_start":12,"column_end":20},"name":"downcast","qualname":"<Upgraded>::downcast","value":"pub fn downcast<T: AsyncRead + AsyncWrite + Unpin + 'static>(Self)\n-> Result<Parts<T>, Self>","parent":null,"children":[],"decl_id":null,"docs":" Tries to downcast the internal trait object to the type passed.","sig":null,"attributes":[{"value":"/ Tries to downcast the internal trait object to the type passed.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":102183,"byte_end":102250,"line_start":132,"line_end":132,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":102255,"byte_end":102258,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ On success, returns the downcasted parts. On error, returns the","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":102263,"byte_end":102330,"line_start":134,"line_end":134,"column_start":5,"column_end":72}},{"value":"/ `Upgraded` back.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":102335,"byte_end":102355,"line_start":135,"line_end":135,"column_start":5,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":1044},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":106800,"byte_end":106810,"line_start":298,"line_end":298,"column_start":15,"column_end":25},"name":"CanUpgrade","qualname":"::upgrade::sealed::CanUpgrade","value":"CanUpgrade","parent":null,"children":[{"krate":0,"index":1045}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1045},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":106824,"byte_end":106834,"line_start":299,"line_end":299,"column_start":12,"column_end":22},"name":"on_upgrade","qualname":"::upgrade::sealed::CanUpgrade::on_upgrade","value":"pub fn on_upgrade(Self) -> OnUpgrade","parent":{"krate":0,"index":1044},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2281},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/dispatch.rs","byte_start":16591385,"byte_end":16591393,"line_start":25,"line_end":25,"column_start":10,"column_end":18},"name":"PollItem","qualname":"::proto::h1::dispatch::Dispatch::PollItem","value":"type PollItem;","parent":{"krate":0,"index":2280},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2282},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/dispatch.rs","byte_start":16591404,"byte_end":16591412,"line_start":26,"line_end":26,"column_start":10,"column_end":18},"name":"PollBody","qualname":"::proto::h1::dispatch::Dispatch::PollBody","value":"type PollBody;","parent":{"krate":0,"index":2280},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2283},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/dispatch.rs","byte_start":16591423,"byte_end":16591432,"line_start":27,"line_end":27,"column_start":10,"column_end":19},"name":"PollError","qualname":"::proto::h1::dispatch::Dispatch::PollError","value":"type PollError;","parent":{"krate":0,"index":2280},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2284},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/dispatch.rs","byte_start":16591443,"byte_end":16591451,"line_start":28,"line_end":28,"column_start":10,"column_end":18},"name":"RecvItem","qualname":"::proto::h1::dispatch::Dispatch::RecvItem","value":"type RecvItem;","parent":{"krate":0,"index":2280},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2725},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/mod.rs","byte_start":16514869,"byte_end":16514877,"line_start":37,"line_end":37,"column_start":10,"column_end":18},"name":"Incoming","qualname":"::proto::h1::Http1Transaction::Incoming","value":"type Incoming;","parent":{"krate":0,"index":2724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2726},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/mod.rs","byte_start":16514888,"byte_end":16514896,"line_start":38,"line_end":38,"column_start":10,"column_end":18},"name":"Outgoing","qualname":"::proto::h1::Http1Transaction::Outgoing","value":"type Outgoing: Default;","parent":{"krate":0,"index":2724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3260},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"client","qualname":"::client","value":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","parent":null,"children":[{"krate":0,"index":3261},{"krate":0,"index":3264},{"krate":0,"index":3827},{"krate":0,"index":3828},{"krate":0,"index":3831},{"krate":0,"index":3834},{"krate":0,"index":3837},{"krate":0,"index":4165},{"krate":0,"index":4404},{"krate":0,"index":4526},{"krate":0,"index":4747}],"decl_id":null,"docs":" HTTP Client","sig":null,"attributes":[{"value":"cfg(feature = \"client\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/cfg.rs","byte_start":3218,"byte_end":3231,"line_start":7,"line_end":7,"column_start":13,"column_end":26}},{"value":"/ HTTP Client","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16771921,"byte_end":16771936,"line_start":1,"line_end":1,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16771937,"byte_end":16771940,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ There are two levels of APIs provided for construct HTTP clients:","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16771941,"byte_end":16772010,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16772011,"byte_end":16772014,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The higher-level [`Client`](Client) type.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16772015,"byte_end":16772062,"line_start":5,"line_end":5,"column_start":1,"column_end":48}},{"value":"/ - The lower-level [`conn`](conn) module.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16772063,"byte_end":16772107,"line_start":6,"line_end":6,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16772108,"byte_end":16772111,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Client","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16772112,"byte_end":16772124,"line_start":8,"line_end":8,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16772125,"byte_end":16772128,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The [`Client`](Client) is the main way to send HTTP requests to a server.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16772129,"byte_end":16772206,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ The default `Client` provides these things on top of the lower-level API:","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16772207,"byte_end":16772284,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16772285,"byte_end":16772288,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ - A default **connector**, able to resolve hostnames and connect to","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16772289,"byte_end":16772360,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/   destinations over plain-text TCP.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16772361,"byte_end":16772400,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"/ - A **pool** of existing connections, allowing better performance when","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16772401,"byte_end":16772475,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/   making multiple requests to the same hostname.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16772476,"byte_end":16772528,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/ - Automatic setting of the `Host` header, based on the request `Uri`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16772529,"byte_end":16772602,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/ - Automatic request **retries** when a pooled connection is closed by the","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16772603,"byte_end":16772680,"line_start":18,"line_end":18,"column_start":1,"column_end":78}},{"value":"/   server before any bytes have been written.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16772681,"byte_end":16772729,"line_start":19,"line_end":19,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16772730,"byte_end":16772733,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Many of these features can configured, by making use of","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16772734,"byte_end":16772793,"line_start":21,"line_end":21,"column_start":1,"column_end":60}},{"value":"/ [`Client::builder`](Client::builder).","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16772794,"byte_end":16772835,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16772836,"byte_end":16772839,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16772840,"byte_end":16772854,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16772855,"byte_end":16772858,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ For a small example program simply fetching a URL, take a look at the","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16772859,"byte_end":16772932,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/ [full client example](https://github.com/hyperium/hyper/blob/master/examples/client.rs).","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16772933,"byte_end":16773025,"line_start":27,"line_end":27,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16773026,"byte_end":16773029,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16773030,"byte_end":16773037,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(all(feature = \"tcp\", feature = \"client\", any(feature = \"http1\", feature = \"http2\")))]","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16773038,"byte_end":16773135,"line_start":30,"line_end":30,"column_start":1,"column_end":98}},{"value":"/ # async fn fetch_httpbin() -> hyper::Result<()> {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16773136,"byte_end":16773189,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/ use hyper::{body::HttpBody as _, Client, Uri};","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16773190,"byte_end":16773240,"line_start":32,"line_end":32,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16773241,"byte_end":16773244,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let client = Client::new();","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16773245,"byte_end":16773276,"line_start":34,"line_end":34,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16773277,"byte_end":16773280,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Make a GET /ip to 'http://httpbin.org'","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16773281,"byte_end":16773326,"line_start":36,"line_end":36,"column_start":1,"column_end":46}},{"value":"/ let res = client.get(Uri::from_static(\"http://httpbin.org/ip\")).await?;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16773327,"byte_end":16773402,"line_start":37,"line_end":37,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16773403,"byte_end":16773406,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ // And then, if the request gets a response...","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16773407,"byte_end":16773457,"line_start":39,"line_end":39,"column_start":1,"column_end":51}},{"value":"/ println!(\"status: {}\", res.status());","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16773458,"byte_end":16773499,"line_start":40,"line_end":40,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16773500,"byte_end":16773503,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Concatenate the body stream into a single buffer...","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16773504,"byte_end":16773562,"line_start":42,"line_end":42,"column_start":1,"column_end":59}},{"value":"/ let buf = hyper::body::to_bytes(res).await?;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16773563,"byte_end":16773611,"line_start":43,"line_end":43,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16773612,"byte_end":16773615,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ println!(\"body: {:?}\", buf);","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16773616,"byte_end":16773648,"line_start":45,"line_end":45,"column_start":1,"column_end":33}},{"value":"/ # Ok(())","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16773649,"byte_end":16773661,"line_start":46,"line_end":46,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16773662,"byte_end":16773669,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ # fn main () {}","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16773670,"byte_end":16773689,"line_start":48,"line_end":48,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16773690,"byte_end":16773697,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":3264},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"connect","qualname":"::client::connect","value":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","parent":null,"children":[{"krate":0,"index":3265},{"krate":0,"index":3268},{"krate":0,"index":3364},{"krate":0,"index":3365},{"krate":0,"index":3368},{"krate":0,"index":3371},{"krate":0,"index":3527},{"krate":0,"index":3798},{"krate":0,"index":3271},{"krate":0,"index":3801},{"krate":0,"index":3805},{"krate":0,"index":3273},{"krate":0,"index":3807},{"krate":0,"index":3812},{"krate":0,"index":3814},{"krate":0,"index":3815},{"krate":0,"index":3817},{"krate":0,"index":3818},{"krate":0,"index":3276},{"krate":0,"index":3286},{"krate":0,"index":3288},{"krate":0,"index":3290},{"krate":0,"index":3292},{"krate":0,"index":3820},{"krate":0,"index":3824},{"krate":0,"index":3295},{"krate":0,"index":3299},{"krate":0,"index":3304},{"krate":0,"index":3307},{"krate":0,"index":3311}],"decl_id":null,"docs":" Connectors used by the `Client`.","sig":null,"attributes":[{"value":"/ Connectors used by the `Client`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16774059,"byte_end":16774095,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16774096,"byte_end":16774099,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16774100,"byte_end":16774125,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16774126,"byte_end":16774129,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - A default [`HttpConnector`][] that does DNS resolution and establishes","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16774130,"byte_end":16774206,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/   connections over TCP.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16774207,"byte_end":16774234,"line_start":6,"line_end":6,"column_start":1,"column_end":28}},{"value":"/ - Types to build custom connectors.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16774235,"byte_end":16774274,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16774275,"byte_end":16774278,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Connectors","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16774279,"byte_end":16774295,"line_start":9,"line_end":9,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16774296,"byte_end":16774299,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ A \"connector\" is a [`Service`][] that takes a [`Uri`][] destination, and","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16774300,"byte_end":16774376,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ its `Response` is some type implementing [`AsyncRead`][], [`AsyncWrite`][],","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16774377,"byte_end":16774456,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ and [`Connection`][].","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16774457,"byte_end":16774482,"line_start":13,"line_end":13,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16774483,"byte_end":16774486,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ## Custom Connectors","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16774487,"byte_end":16774511,"line_start":15,"line_end":15,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16774512,"byte_end":16774515,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ A simple connector that ignores the `Uri` destination and always returns","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16774516,"byte_end":16774592,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ a TCP connection to the same address could be written like this:","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16774593,"byte_end":16774661,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16774662,"byte_end":16774665,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16774666,"byte_end":16774684,"line_start":20,"line_end":20,"column_start":1,"column_end":19}},{"value":"/ let connector = tower::service_fn(|_dst| async {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16774685,"byte_end":16774737,"line_start":21,"line_end":21,"column_start":1,"column_end":53}},{"value":"/     tokio::net::TcpStream::connect(\"127.0.0.1:1337\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16774738,"byte_end":16774794,"line_start":22,"line_end":22,"column_start":1,"column_end":57}},{"value":"/ })","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16774795,"byte_end":16774801,"line_start":23,"line_end":23,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16774802,"byte_end":16774809,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16774810,"byte_end":16774813,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Or, fully written out:","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16774814,"byte_end":16774840,"line_start":26,"line_end":26,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16774841,"byte_end":16774844,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16774845,"byte_end":16774852,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"runtime\")]","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16774853,"byte_end":16774886,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/ # mod rt {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16774887,"byte_end":16774901,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/ use std::{future::Future, net::SocketAddr, pin::Pin, task::{self, Poll}};","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16774902,"byte_end":16774979,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ use hyper::{service::Service, Uri};","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16774980,"byte_end":16775019,"line_start":32,"line_end":32,"column_start":1,"column_end":40}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16775020,"byte_end":16775050,"line_start":33,"line_end":33,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16775051,"byte_end":16775054,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone)]","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16775055,"byte_end":16775075,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"/ struct LocalConnector;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16775076,"byte_end":16775102,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16775103,"byte_end":16775106,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ impl Service<Uri> for LocalConnector {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16775107,"byte_end":16775149,"line_start":38,"line_end":38,"column_start":1,"column_end":43}},{"value":"/     type Response = TcpStream;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16775150,"byte_end":16775184,"line_start":39,"line_end":39,"column_start":1,"column_end":35}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16775185,"byte_end":16775221,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/     // We can't \"name\" an `async` generated future.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16775222,"byte_end":16775277,"line_start":41,"line_end":41,"column_start":1,"column_end":56}},{"value":"/     type Future = Pin<Box<","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16775278,"byte_end":16775308,"line_start":42,"line_end":42,"column_start":1,"column_end":31}},{"value":"/         dyn Future<Output = Result<Self::Response, Self::Error>> + Send","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16775309,"byte_end":16775384,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/     >>;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16775385,"byte_end":16775396,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16775397,"byte_end":16775400,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     fn poll_ready(&mut self, _: &mut task::Context<'_>) -> Poll<Result<(), Self::Error>> {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16775401,"byte_end":16775495,"line_start":46,"line_end":46,"column_start":1,"column_end":95}},{"value":"/         // This connector is always ready, but others might not be.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16775496,"byte_end":16775567,"line_start":47,"line_end":47,"column_start":1,"column_end":72}},{"value":"/         Poll::Ready(Ok(()))","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16775568,"byte_end":16775599,"line_start":48,"line_end":48,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16775600,"byte_end":16775609,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16775610,"byte_end":16775613,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     fn call(&mut self, _: Uri) -> Self::Future {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16775614,"byte_end":16775666,"line_start":51,"line_end":51,"column_start":1,"column_end":53}},{"value":"/         Box::pin(TcpStream::connect(SocketAddr::from(([127, 0, 0, 1], 1337))))","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16775667,"byte_end":16775749,"line_start":52,"line_end":52,"column_start":1,"column_end":83}},{"value":"/     }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16775750,"byte_end":16775759,"line_start":53,"line_end":53,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16775760,"byte_end":16775765,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16775766,"byte_end":16775773,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16775774,"byte_end":16775781,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16775782,"byte_end":16775785,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ It's worth noting that for `TcpStream`s, the [`HttpConnector`][] is a","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16775786,"byte_end":16775859,"line_start":58,"line_end":58,"column_start":1,"column_end":74}},{"value":"/ better starting place to extend from.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16775860,"byte_end":16775901,"line_start":59,"line_end":59,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16775902,"byte_end":16775905,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Using either of the above connector examples, it can be used with the","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16775906,"byte_end":16775979,"line_start":61,"line_end":61,"column_start":1,"column_end":74}},{"value":"/ `Client` like this:","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16775980,"byte_end":16776003,"line_start":62,"line_end":62,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16776004,"byte_end":16776007,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16776008,"byte_end":16776015,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"runtime\")]","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16776016,"byte_end":16776049,"line_start":65,"line_end":65,"column_start":1,"column_end":34}},{"value":"/ # fn rt () {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16776050,"byte_end":16776066,"line_start":66,"line_end":66,"column_start":1,"column_end":17}},{"value":"/ # let connector = hyper::client::HttpConnector::new();","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16776067,"byte_end":16776125,"line_start":67,"line_end":67,"column_start":1,"column_end":59}},{"value":"/ // let connector = ...","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16776126,"byte_end":16776152,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16776153,"byte_end":16776156,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ let client = hyper::Client::builder()","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16776157,"byte_end":16776198,"line_start":70,"line_end":70,"column_start":1,"column_end":42}},{"value":"/     .build::<_, hyper::Body>(connector);","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16776199,"byte_end":16776243,"line_start":71,"line_end":71,"column_start":1,"column_end":45}},{"value":"/ # }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16776244,"byte_end":16776251,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16776252,"byte_end":16776259,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16776260,"byte_end":16776263,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16776264,"byte_end":16776267,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ [`HttpConnector`]: HttpConnector","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16776268,"byte_end":16776304,"line_start":76,"line_end":76,"column_start":1,"column_end":37}},{"value":"/ [`Service`]: crate::service::Service","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16776305,"byte_end":16776345,"line_start":77,"line_end":77,"column_start":1,"column_end":41}},{"value":"/ [`Uri`]: ::http::Uri","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16776346,"byte_end":16776370,"line_start":78,"line_end":78,"column_start":1,"column_end":25}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16776371,"byte_end":16776410,"line_start":79,"line_end":79,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16776411,"byte_end":16776452,"line_start":80,"line_end":80,"column_start":1,"column_end":42}},{"value":"/ [`Connection`]: Connection","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16776453,"byte_end":16776483,"line_start":81,"line_end":81,"column_start":1,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":3371},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dns","qualname":"::client::connect::dns","value":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","parent":null,"children":[{"krate":0,"index":3372},{"krate":0,"index":3375},{"krate":0,"index":3378},{"krate":0,"index":3379},{"krate":0,"index":3382},{"krate":0,"index":3385},{"krate":0,"index":3388},{"krate":0,"index":3391},{"krate":0,"index":3394},{"krate":0,"index":3397},{"krate":0,"index":3400},{"krate":0,"index":3403},{"krate":0,"index":3404},{"krate":0,"index":3407},{"krate":0,"index":3410},{"krate":0,"index":3411},{"krate":0,"index":3414},{"krate":0,"index":3417},{"krate":0,"index":3418},{"krate":0,"index":3420},{"krate":0,"index":3423},{"krate":0,"index":3426},{"krate":0,"index":3429},{"krate":0,"index":3749},{"krate":0,"index":3751},{"krate":0,"index":3753},{"krate":0,"index":3756},{"krate":0,"index":3757},{"krate":0,"index":3759},{"krate":0,"index":3760},{"krate":0,"index":3763},{"krate":0,"index":3765},{"krate":0,"index":3432},{"krate":0,"index":3434},{"krate":0,"index":3436},{"krate":0,"index":3439},{"krate":0,"index":3441},{"krate":0,"index":3443},{"krate":0,"index":3767},{"krate":0,"index":3770},{"krate":0,"index":3446},{"krate":0,"index":3448},{"krate":0,"index":3449},{"krate":0,"index":3451},{"krate":0,"index":3459},{"krate":0,"index":3461},{"krate":0,"index":3465},{"krate":0,"index":3467},{"krate":0,"index":3469},{"krate":0,"index":3472},{"krate":0,"index":3474},{"krate":0,"index":3476},{"krate":0,"index":3485},{"krate":0,"index":3488},{"krate":0,"index":3522}],"decl_id":null,"docs":" DNS Resolution used by the `HttpConnector`.","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/cfg.rs","byte_start":3218,"byte_end":3231,"line_start":7,"line_end":7,"column_start":13,"column_end":26}},{"value":"/ DNS Resolution used by the `HttpConnector`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16785652,"byte_end":16785699,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16785700,"byte_end":16785703,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16785704,"byte_end":16785729,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16785730,"byte_end":16785733,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - A [`GaiResolver`](GaiResolver) that is the default resolver for the","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16785734,"byte_end":16785807,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/   `HttpConnector`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16785808,"byte_end":16785830,"line_start":6,"line_end":6,"column_start":1,"column_end":23}},{"value":"/ - The `Name` type used as an argument to custom resolvers.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16785831,"byte_end":16785893,"line_start":7,"line_end":7,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16785894,"byte_end":16785897,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Resolvers are `Service`s","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16785898,"byte_end":16785928,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16785929,"byte_end":16785932,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ A resolver is just a","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16785933,"byte_end":16785957,"line_start":11,"line_end":11,"column_start":1,"column_end":25}},{"value":"/ `Service<Name, Response = impl Iterator<Item = SocketAddr>>`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16785958,"byte_end":16786023,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16786024,"byte_end":16786027,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A simple resolver that ignores the name and always returns a specific","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16786028,"byte_end":16786101,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ address:","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16786102,"byte_end":16786114,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16786115,"byte_end":16786118,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16786119,"byte_end":16786137,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/ use std::{convert::Infallible, iter, net::SocketAddr};","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16786138,"byte_end":16786196,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16786197,"byte_end":16786200,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ let resolver = tower::service_fn(|_name| async {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16786201,"byte_end":16786253,"line_start":20,"line_end":20,"column_start":1,"column_end":53}},{"value":"/     Ok::<_, Infallible>(iter::once(SocketAddr::from(([127, 0, 0, 1], 8080))))","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16786254,"byte_end":16786335,"line_start":21,"line_end":21,"column_start":1,"column_end":82}},{"value":"/ });","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16786336,"byte_end":16786343,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16786344,"byte_end":16786351,"line_start":23,"line_end":23,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3749},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16786802,"byte_end":16786806,"line_start":40,"line_end":40,"column_start":12,"column_end":16},"name":"Name","qualname":"::client::connect::dns::Name","value":"Name {  }","parent":null,"children":[{"krate":0,"index":3750}],"decl_id":null,"docs":" A domain name to resolve into IP addresses.\n","sig":null,"attributes":[{"value":"/ A domain name to resolve into IP addresses.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16786705,"byte_end":16786752,"line_start":38,"line_end":38,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":3763},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16786927,"byte_end":16786938,"line_start":46,"line_end":46,"column_start":12,"column_end":23},"name":"GaiResolver","qualname":"::client::connect::dns::GaiResolver","value":"GaiResolver {  }","parent":null,"children":[{"krate":0,"index":3764}],"decl_id":null,"docs":" A resolver using blocking `getaddrinfo` calls in a threadpool.\n","sig":null,"attributes":[{"value":"/ A resolver using blocking `getaddrinfo` calls in a threadpool.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16786832,"byte_end":16786898,"line_start":44,"line_end":44,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":3432},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16787031,"byte_end":16787039,"line_start":51,"line_end":51,"column_start":12,"column_end":20},"name":"GaiAddrs","qualname":"::client::connect::dns::GaiAddrs","value":"GaiAddrs {  }","parent":null,"children":[{"krate":0,"index":3433}],"decl_id":null,"docs":" An iterator of IP addresses returned from `getaddrinfo`.\n","sig":null,"attributes":[{"value":"/ An iterator of IP addresses returned from `getaddrinfo`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16786959,"byte_end":16787019,"line_start":50,"line_end":50,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":3434},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16787138,"byte_end":16787147,"line_start":56,"line_end":56,"column_start":12,"column_end":21},"name":"GaiFuture","qualname":"::client::connect::dns::GaiFuture","value":"GaiFuture {  }","parent":null,"children":[{"krate":0,"index":3435}],"decl_id":null,"docs":" A future to resolve a name returned by `GaiResolver`.\n","sig":null,"attributes":[{"value":"/ A future to resolve a name returned by `GaiResolver`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16787069,"byte_end":16787126,"line_start":55,"line_end":55,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3438},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16787353,"byte_end":16787359,"line_start":66,"line_end":66,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Name>::as_str","value":"pub fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" View the hostname as a string slice.\n","sig":null,"attributes":[{"value":"/ View the hostname as a string slice.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16787301,"byte_end":16787341,"line_start":65,"line_end":65,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":3767},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16787978,"byte_end":16787994,"line_start":94,"line_end":94,"column_start":12,"column_end":28},"name":"InvalidNameError","qualname":"::client::connect::dns::InvalidNameError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating a given string was not a valid domain name.\n","sig":null,"attributes":[{"value":"/ Error indicating a given string was not a valid domain name.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16787885,"byte_end":16787949,"line_start":92,"line_end":92,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3450},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16788266,"byte_end":16788269,"line_start":106,"line_end":106,"column_start":12,"column_end":15},"name":"new","qualname":"<GaiResolver>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `GaiResolver`.\n","sig":null,"attributes":[{"value":"/ Construct a new `GaiResolver`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16788220,"byte_end":16788254,"line_start":105,"line_end":105,"column_start":5,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":3509},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16794496,"byte_end":16794503,"line_start":326,"line_end":326,"column_start":15,"column_end":22},"name":"Resolve","qualname":"::client::connect::dns::sealed::Resolve","value":"Resolve","parent":null,"children":[{"krate":0,"index":3510},{"krate":0,"index":3511},{"krate":0,"index":3512},{"krate":0,"index":3513},{"krate":0,"index":3514}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3510},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16794519,"byte_end":16794524,"line_start":327,"line_end":327,"column_start":14,"column_end":19},"name":"Addrs","qualname":"::client::connect::dns::sealed::Resolve::Addrs","value":"type Addrs: Iterator<Item = SocketAddr>;","parent":{"krate":0,"index":3509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3511},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16794568,"byte_end":16794573,"line_start":328,"line_end":328,"column_start":14,"column_end":19},"name":"Error","qualname":"::client::connect::dns::sealed::Resolve::Error","value":"type Error: Into<Box<dyn std::error::Error + Send + Sync>>;","parent":{"krate":0,"index":3509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3512},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16794636,"byte_end":16794642,"line_start":329,"line_end":329,"column_start":14,"column_end":20},"name":"Future","qualname":"::client::connect::dns::sealed::Resolve::Future","value":"type Future: Future<Output = Result<Self::Addrs, Self::Error>>;","parent":{"krate":0,"index":3509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3513},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16794707,"byte_end":16794717,"line_start":331,"line_end":331,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"::client::connect::dns::sealed::Resolve::poll_ready","value":"pub fn poll_ready(&mut Self, &mut task::Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":0,"index":3509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3514},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16794802,"byte_end":16794809,"line_start":332,"line_end":332,"column_start":12,"column_end":19},"name":"resolve","qualname":"::client::connect::dns::sealed::Resolve::resolve","value":"pub fn resolve(&mut Self, Name) -> Self::Future","parent":{"krate":0,"index":3509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3772},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16798852,"byte_end":16798865,"line_start":33,"line_end":33,"column_start":12,"column_end":25},"name":"HttpConnector","qualname":"::client::connect::http::HttpConnector","value":"HttpConnector {  }","parent":null,"children":[{"krate":0,"index":3774},{"krate":0,"index":3775}],"decl_id":null,"docs":" A connector for the `http` scheme.","sig":null,"attributes":[{"value":"/ A connector for the `http` scheme.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16798504,"byte_end":16798542,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16798543,"byte_end":16798546,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Performs DNS resolution in a thread pool, and then connects over TCP.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16798547,"byte_end":16798620,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16798621,"byte_end":16798624,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16798625,"byte_end":16798635,"line_start":27,"line_end":27,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16798636,"byte_end":16798639,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Sets the [`HttpInfo`](HttpInfo) value on responses, which includes","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16798640,"byte_end":16798710,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ transport information such as the remote socket address used.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16798711,"byte_end":16798776,"line_start":30,"line_end":30,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":3779},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16799744,"byte_end":16799752,"line_start":67,"line_end":67,"column_start":12,"column_end":20},"name":"HttpInfo","qualname":"::client::connect::http::HttpInfo","value":"HttpInfo {  }","parent":null,"children":[{"krate":0,"index":3780}],"decl_id":null,"docs":" Extra information about the transport when an HttpConnector is used.","sig":null,"attributes":[{"value":"/ Extra information about the transport when an HttpConnector is used.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16798930,"byte_end":16799002,"line_start":38,"line_end":38,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16799003,"byte_end":16799006,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16799007,"byte_end":16799020,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16799021,"byte_end":16799024,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16799025,"byte_end":16799032,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ # async fn doc() -> hyper::Result<()> {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16799033,"byte_end":16799076,"line_start":43,"line_end":43,"column_start":1,"column_end":44}},{"value":"/ use hyper::Uri;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16799077,"byte_end":16799096,"line_start":44,"line_end":44,"column_start":1,"column_end":20}},{"value":"/ use hyper::client::{Client, connect::HttpInfo};","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16799097,"byte_end":16799148,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16799149,"byte_end":16799152,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ let client = Client::new();","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16799153,"byte_end":16799184,"line_start":47,"line_end":47,"column_start":1,"column_end":32}},{"value":"/ let uri = Uri::from_static(\"http://example.com\");","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16799185,"byte_end":16799238,"line_start":48,"line_end":48,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16799239,"byte_end":16799242,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ let res = client.get(uri).await?;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16799243,"byte_end":16799280,"line_start":50,"line_end":50,"column_start":1,"column_end":38}},{"value":"/ res","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16799281,"byte_end":16799288,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/     .extensions()","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16799289,"byte_end":16799310,"line_start":52,"line_end":52,"column_start":1,"column_end":22}},{"value":"/     .get::<HttpInfo>()","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16799311,"byte_end":16799337,"line_start":53,"line_end":53,"column_start":1,"column_end":27}},{"value":"/     .map(|info| {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16799338,"byte_end":16799359,"line_start":54,"line_end":54,"column_start":1,"column_end":22}},{"value":"/         println!(\"remote addr = {}\", info.remote_addr());","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16799360,"byte_end":16799421,"line_start":55,"line_end":55,"column_start":1,"column_end":62}},{"value":"/     });","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16799422,"byte_end":16799433,"line_start":56,"line_end":56,"column_start":1,"column_end":12}},{"value":"/ # Ok(())","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16799434,"byte_end":16799446,"line_start":57,"line_end":57,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16799447,"byte_end":16799454,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16799455,"byte_end":16799462,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16799463,"byte_end":16799466,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16799467,"byte_end":16799477,"line_start":61,"line_end":61,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16799478,"byte_end":16799481,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ If a different connector is used besides [`HttpConnector`](HttpConnector),","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16799482,"byte_end":16799560,"line_start":63,"line_end":63,"column_start":1,"column_end":79}},{"value":"/ this value will not exist in the extensions. Consult that specific","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16799561,"byte_end":16799631,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ connector to see what \"extra\" information it might provide to responses.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16799632,"byte_end":16799708,"line_start":65,"line_end":65,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3626},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16800282,"byte_end":16800285,"line_start":89,"line_end":89,"column_start":12,"column_end":15},"name":"new","qualname":"<HttpConnector>::new","value":"pub fn new() -> HttpConnector","parent":null,"children":[],"decl_id":null,"docs":" Construct a new HttpConnector.\n","sig":null,"attributes":[{"value":"/ Construct a new HttpConnector.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16800236,"byte_end":16800270,"line_start":88,"line_end":88,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3629},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16800948,"byte_end":16800965,"line_start":110,"line_end":110,"column_start":12,"column_end":29},"name":"new_with_resolver","qualname":"<HttpConnector<R>>::new_with_resolver","value":"pub fn new_with_resolver(R) -> HttpConnector<R>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new HttpConnector.","sig":null,"attributes":[{"value":"/ Construct a new HttpConnector.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16800790,"byte_end":16800824,"line_start":107,"line_end":107,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16800829,"byte_end":16800832,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ Takes a [`Resolver`](crate::client::connect::dns#resolvers-are-services) to handle DNS lookups.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16800837,"byte_end":16800936,"line_start":109,"line_end":109,"column_start":5,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":3630},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16801665,"byte_end":16801677,"line_start":132,"line_end":132,"column_start":12,"column_end":24},"name":"enforce_http","qualname":"<HttpConnector<R>>::enforce_http","value":"pub fn enforce_http(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Option to enforce all `Uri`s have the `http` scheme.","sig":null,"attributes":[{"value":"/ Option to enforce all `Uri`s have the `http` scheme.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16801547,"byte_end":16801603,"line_start":128,"line_end":128,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16801608,"byte_end":16801611,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ Enabled by default.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16801616,"byte_end":16801639,"line_start":130,"line_end":130,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16801644,"byte_end":16801653,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3631},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16801967,"byte_end":16801980,"line_start":142,"line_end":142,"column_start":12,"column_end":25},"name":"set_keepalive","qualname":"<HttpConnector<R>>::set_keepalive","value":"pub fn set_keepalive(&mut Self, Option<Duration>)","parent":null,"children":[],"decl_id":null,"docs":" Set that all sockets have `SO_KEEPALIVE` set with the supplied duration.","sig":null,"attributes":[{"value":"/ Set that all sockets have `SO_KEEPALIVE` set with the supplied duration.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16801775,"byte_end":16801851,"line_start":136,"line_end":136,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16801856,"byte_end":16801859,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ If `None`, the option will not be set.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16801864,"byte_end":16801906,"line_start":138,"line_end":138,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16801911,"byte_end":16801914,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Default is `None`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16801919,"byte_end":16801941,"line_start":140,"line_end":140,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16801946,"byte_end":16801955,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3632},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16802221,"byte_end":16802232,"line_start":150,"line_end":150,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<HttpConnector<R>>::set_nodelay","value":"pub fn set_nodelay(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Set that all sockets have `SO_NODELAY` set to the supplied value `nodelay`.","sig":null,"attributes":[{"value":"/ Set that all sockets have `SO_NODELAY` set to the supplied value `nodelay`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16802080,"byte_end":16802159,"line_start":146,"line_end":146,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16802164,"byte_end":16802167,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Default is `false`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16802172,"byte_end":16802195,"line_start":148,"line_end":148,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16802200,"byte_end":16802209,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3633},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16802400,"byte_end":16802420,"line_start":156,"line_end":156,"column_start":12,"column_end":32},"name":"set_send_buffer_size","qualname":"<HttpConnector<R>>::set_send_buffer_size","value":"pub fn set_send_buffer_size(&mut Self, Option<usize>)","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the SO_SNDBUF option on the socket.\n","sig":null,"attributes":[{"value":"/ Sets the value of the SO_SNDBUF option on the socket.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16802317,"byte_end":16802374,"line_start":154,"line_end":154,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16802379,"byte_end":16802388,"line_start":155,"line_end":155,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3634},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16802600,"byte_end":16802620,"line_start":162,"line_end":162,"column_start":12,"column_end":32},"name":"set_recv_buffer_size","qualname":"<HttpConnector<R>>::set_recv_buffer_size","value":"pub fn set_recv_buffer_size(&mut Self, Option<usize>)","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the SO_RCVBUF option on the socket.\n","sig":null,"attributes":[{"value":"/ Sets the value of the SO_RCVBUF option on the socket.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16802517,"byte_end":16802574,"line_start":160,"line_end":160,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16802579,"byte_end":16802588,"line_start":161,"line_end":161,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3635},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16802915,"byte_end":16802932,"line_start":172,"line_end":172,"column_start":12,"column_end":29},"name":"set_local_address","qualname":"<HttpConnector<R>>::set_local_address","value":"pub fn set_local_address(&mut Self, Option<IpAddr>)","parent":null,"children":[],"decl_id":null,"docs":" Set that all sockets are bound to the configured address before connection.","sig":null,"attributes":[{"value":"/ Set that all sockets are bound to the configured address before connection.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16802717,"byte_end":16802796,"line_start":166,"line_end":166,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16802801,"byte_end":16802804,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ If `None`, the sockets will not be bound.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16802809,"byte_end":16802854,"line_start":168,"line_end":168,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16802859,"byte_end":16802862,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ Default is `None`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16802867,"byte_end":16802889,"line_start":170,"line_end":170,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16802894,"byte_end":16802903,"line_start":171,"line_end":171,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3636},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16803434,"byte_end":16803453,"line_start":188,"line_end":188,"column_start":12,"column_end":31},"name":"set_local_addresses","qualname":"<HttpConnector<R>>::set_local_addresses","value":"pub fn set_local_addresses(&mut Self, Ipv4Addr, Ipv6Addr)","parent":null,"children":[],"decl_id":null,"docs":" Set that all sockets are bound to the configured IPv4 or IPv6 address (depending on host's\n preferences) before connection.\n","sig":null,"attributes":[{"value":"/ Set that all sockets are bound to the configured IPv4 or IPv6 address (depending on host's","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16803274,"byte_end":16803368,"line_start":185,"line_end":185,"column_start":5,"column_end":99}},{"value":"/ preferences) before connection.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16803373,"byte_end":16803408,"line_start":186,"line_end":186,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16803413,"byte_end":16803422,"line_start":187,"line_end":187,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3637},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16803866,"byte_end":16803885,"line_start":202,"line_end":202,"column_start":12,"column_end":31},"name":"set_connect_timeout","qualname":"<HttpConnector<R>>::set_connect_timeout","value":"pub fn set_connect_timeout(&mut Self, Option<Duration>)","parent":null,"children":[],"decl_id":null,"docs":" Set the connect timeout.","sig":null,"attributes":[{"value":"/ Set the connect timeout.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16803658,"byte_end":16803686,"line_start":195,"line_end":195,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16803691,"byte_end":16803694,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ If a domain resolves to multiple IP addresses, the timeout will be","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16803699,"byte_end":16803769,"line_start":197,"line_end":197,"column_start":5,"column_end":75}},{"value":"/ evenly divided across them.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16803774,"byte_end":16803805,"line_start":198,"line_end":198,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16803810,"byte_end":16803813,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Default is `None`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16803818,"byte_end":16803840,"line_start":200,"line_end":200,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16803845,"byte_end":16803854,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3638},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16804519,"byte_end":16804545,"line_start":219,"line_end":219,"column_start":12,"column_end":38},"name":"set_happy_eyeballs_timeout","qualname":"<HttpConnector<R>>::set_happy_eyeballs_timeout","value":"pub fn set_happy_eyeballs_timeout(&mut Self, Option<Duration>)","parent":null,"children":[],"decl_id":null,"docs":" Set timeout for [RFC 6555 (Happy Eyeballs)][RFC 6555] algorithm.","sig":null,"attributes":[{"value":"/ Set timeout for [RFC 6555 (Happy Eyeballs)][RFC 6555] algorithm.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16803982,"byte_end":16804050,"line_start":206,"line_end":206,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16804055,"byte_end":16804058,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ If hostname resolves to both IPv4 and IPv6 addresses and connection","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16804063,"byte_end":16804134,"line_start":208,"line_end":208,"column_start":5,"column_end":76}},{"value":"/ cannot be established using preferred address family before timeout","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16804139,"byte_end":16804210,"line_start":209,"line_end":209,"column_start":5,"column_end":76}},{"value":"/ elapses, then connector will in parallel attempt connection using other","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16804215,"byte_end":16804290,"line_start":210,"line_end":210,"column_start":5,"column_end":80}},{"value":"/ address family.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16804295,"byte_end":16804314,"line_start":211,"line_end":211,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16804319,"byte_end":16804322,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ If `None`, parallel connection attempts are disabled.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16804327,"byte_end":16804384,"line_start":213,"line_end":213,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16804389,"byte_end":16804392,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Default is 300 milliseconds.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16804397,"byte_end":16804429,"line_start":215,"line_end":215,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16804434,"byte_end":16804437,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ [RFC 6555]: https://tools.ietf.org/html/rfc6555","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16804442,"byte_end":16804493,"line_start":217,"line_end":217,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16804498,"byte_end":16804507,"line_start":218,"line_end":218,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3639},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16804797,"byte_end":16804814,"line_start":227,"line_end":227,"column_start":12,"column_end":29},"name":"set_reuse_address","qualname":"<HttpConnector<R>>::set_reuse_address","value":"pub fn set_reuse_address(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set that all socket have `SO_REUSEADDR` set to the supplied value `reuse_address`.","sig":null,"attributes":[{"value":"/ Set that all socket have `SO_REUSEADDR` set to the supplied value `reuse_address`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16804649,"byte_end":16804735,"line_start":223,"line_end":223,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16804740,"byte_end":16804743,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ Default is `false`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16804748,"byte_end":16804771,"line_start":225,"line_end":225,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16804776,"byte_end":16804785,"line_start":226,"line_end":226,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3666},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16808952,"byte_end":16808963,"line_start":373,"line_end":373,"column_start":12,"column_end":23},"name":"remote_addr","qualname":"<HttpInfo>::remote_addr","value":"pub fn remote_addr(&Self) -> SocketAddr","parent":null,"children":[],"decl_id":null,"docs":" Get the remote address of the transport used.\n","sig":null,"attributes":[{"value":"/ Get the remote address of the transport used.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16808891,"byte_end":16808940,"line_start":372,"line_end":372,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":5772},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16809432,"byte_end":16809446,"line_start":386,"line_end":386,"column_start":16,"column_end":30},"name":"HttpConnecting","qualname":"::client::connect::http::HttpConnecting","value":"HttpConnecting {  }","parent":null,"children":[{"krate":0,"index":5774},{"krate":0,"index":5775}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":15528759,"byte_end":15528768,"line_start":650,"line_end":650,"column_start":11,"column_end":20}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":15528759,"byte_end":15528768,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3673},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16809950,"byte_end":16809962,"line_start":405,"line_end":405,"column_start":12,"column_end":24},"name":"ConnectError","qualname":"::client::connect::http::ConnectError","value":"ConnectError {  }","parent":null,"children":[{"krate":0,"index":3674},{"krate":0,"index":3675}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3271},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16776810,"byte_end":16776820,"line_start":102,"line_end":102,"column_start":11,"column_end":21},"name":"Connection","qualname":"::client::connect::Connection","value":"Connection","parent":null,"children":[{"krate":0,"index":3272}],"decl_id":null,"docs":" Describes a type returned by a connector.\n","sig":null,"attributes":[{"value":"/ Describes a type returned by a connector.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16776754,"byte_end":16776799,"line_start":101,"line_end":101,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3272},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16776881,"byte_end":16776890,"line_start":104,"line_end":104,"column_start":8,"column_end":17},"name":"connected","qualname":"::client::connect::Connection::connected","value":"pub fn connected(&Self) -> Connected","parent":{"krate":0,"index":3271},"children":[],"decl_id":null,"docs":" Return metadata describing the connection.\n","sig":null,"attributes":[{"value":"/ Return metadata describing the connection.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16776827,"byte_end":16776873,"line_start":103,"line_end":103,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":3801},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16777116,"byte_end":16777125,"line_start":112,"line_end":112,"column_start":12,"column_end":21},"name":"Connected","qualname":"::client::connect::Connected","value":"Connected {  }","parent":null,"children":[{"krate":0,"index":3802},{"krate":0,"index":3803},{"krate":0,"index":3804}],"decl_id":null,"docs":" Extra information about the connected transport.","sig":null,"attributes":[{"value":"/ Extra information about the connected transport.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16776915,"byte_end":16776967,"line_start":107,"line_end":107,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16776968,"byte_end":16776971,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This can be used to inform recipients about things like if ALPN","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16776972,"byte_end":16777039,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/ was used, or if connected to an HTTP proxy.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16777040,"byte_end":16777087,"line_start":110,"line_end":110,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3277},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16777445,"byte_end":16777448,"line_start":128,"line_end":128,"column_start":12,"column_end":15},"name":"new","qualname":"<Connected>::new","value":"pub fn new() -> Connected","parent":null,"children":[],"decl_id":null,"docs":" Create new `Connected` type with empty metadata.\n","sig":null,"attributes":[{"value":"/ Create new `Connected` type with empty metadata.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16777381,"byte_end":16777433,"line_start":127,"line_end":127,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3278},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16778076,"byte_end":16778081,"line_start":154,"line_end":154,"column_start":12,"column_end":17},"name":"proxy","qualname":"<Connected>::proxy","value":"pub fn proxy(Self, bool) -> Connected","parent":null,"children":[],"decl_id":null,"docs":" Set whether the connected transport is to an HTTP proxy.","sig":null,"attributes":[{"value":"/ Set whether the connected transport is to an HTTP proxy.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16777593,"byte_end":16777653,"line_start":136,"line_end":136,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16777658,"byte_end":16777661,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ This setting will affect if HTTP/1 requests written on the transport","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16777666,"byte_end":16777738,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ will have the request-target in absolute-form or origin-form:","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16777743,"byte_end":16777808,"line_start":139,"line_end":139,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16777813,"byte_end":16777816,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ - When `proxy(false)`:","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16777821,"byte_end":16777847,"line_start":141,"line_end":141,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16777852,"byte_end":16777855,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```http","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16777860,"byte_end":16777871,"line_start":143,"line_end":143,"column_start":5,"column_end":16}},{"value":"/ GET /guide HTTP/1.1","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16777876,"byte_end":16777899,"line_start":144,"line_end":144,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16777904,"byte_end":16777911,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16777916,"byte_end":16777919,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ - When `proxy(true)`:","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16777924,"byte_end":16777949,"line_start":147,"line_end":147,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16777954,"byte_end":16777957,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ ```http","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16777962,"byte_end":16777973,"line_start":149,"line_end":149,"column_start":5,"column_end":16}},{"value":"/ GET http://hyper.rs/guide HTTP/1.1","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16777978,"byte_end":16778016,"line_start":150,"line_end":150,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16778021,"byte_end":16778028,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16778033,"byte_end":16778036,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ Default is `false`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16778041,"byte_end":16778064,"line_start":153,"line_end":153,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3279},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16778261,"byte_end":16778271,"line_start":160,"line_end":160,"column_start":12,"column_end":22},"name":"is_proxied","qualname":"<Connected>::is_proxied","value":"pub fn is_proxied(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines if the connected transport is to an HTTP proxy.\n","sig":null,"attributes":[{"value":"/ Determines if the connected transport is to an HTTP proxy.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16778187,"byte_end":16778249,"line_start":159,"line_end":159,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3280},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16778421,"byte_end":16778426,"line_start":165,"line_end":165,"column_start":12,"column_end":17},"name":"extra","qualname":"<Connected>::extra","value":"pub fn extra<T: Clone + Send + Sync + 'static>(Self, T) -> Connected","parent":null,"children":[],"decl_id":null,"docs":" Set extra connection information to be set in the extensions of every `Response`.\n","sig":null,"attributes":[{"value":"/ Set extra connection information to be set in the extensions of every `Response`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16778324,"byte_end":16778409,"line_start":164,"line_end":164,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":3282},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16778814,"byte_end":16778824,"line_start":175,"line_end":175,"column_start":12,"column_end":22},"name":"get_extras","qualname":"<Connected>::get_extras","value":"pub fn get_extras(&Self, &mut Extensions)","parent":null,"children":[],"decl_id":null,"docs":" Copies the extra connection information into an `Extensions` map.\n","sig":null,"attributes":[{"value":"/ Copies the extra connection information into an `Extensions` map.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16778733,"byte_end":16778802,"line_start":174,"line_end":174,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3283},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16779050,"byte_end":16779063,"line_start":182,"line_end":182,"column_start":12,"column_end":25},"name":"negotiated_h2","qualname":"<Connected>::negotiated_h2","value":"pub fn negotiated_h2(Self) -> Connected","parent":null,"children":[],"decl_id":null,"docs":" Set that the connected transport negotiated HTTP/2 as its next protocol.\n","sig":null,"attributes":[{"value":"/ Set that the connected transport negotiated HTTP/2 as its next protocol.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16778962,"byte_end":16779038,"line_start":181,"line_end":181,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3284},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16779236,"byte_end":16779252,"line_start":188,"line_end":188,"column_start":12,"column_end":28},"name":"is_negotiated_h2","qualname":"<Connected>::is_negotiated_h2","value":"pub fn is_negotiated_h2(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines if the connected transport negotiated HTTP/2 as its next protocol.\n","sig":null,"attributes":[{"value":"/ Determines if the connected transport negotiated HTTP/2 as its next protocol.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16779143,"byte_end":16779224,"line_start":187,"line_end":187,"column_start":5,"column_end":86}}]},{"kind":"Trait","id":{"krate":0,"index":3335},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16781981,"byte_end":16781988,"line_start":292,"line_end":292,"column_start":15,"column_end":22},"name":"Connect","qualname":"::client::connect::sealed::Connect","value":"Connect: Sealed + Sized","parent":null,"children":[{"krate":0,"index":3336},{"krate":0,"index":3337}],"decl_id":null,"docs":" Connect to a destination, returning an IO transport.","sig":null,"attributes":[{"value":"/ Connect to a destination, returning an IO transport.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16781378,"byte_end":16781434,"line_start":280,"line_end":280,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16781439,"byte_end":16781442,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ A connector receives a [`Uri`](::http::Uri) and returns a `Future` of the","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16781447,"byte_end":16781524,"line_start":282,"line_end":282,"column_start":5,"column_end":82}},{"value":"/ ready connection.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16781529,"byte_end":16781550,"line_start":283,"line_end":283,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16781555,"byte_end":16781558,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ # Trait Alias","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16781563,"byte_end":16781580,"line_start":285,"line_end":285,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16781585,"byte_end":16781588,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ This is really just an *alias* for the `tower::Service` trait, with","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16781593,"byte_end":16781664,"line_start":287,"line_end":287,"column_start":5,"column_end":76}},{"value":"/ additional bounds set for convenience *inside* hyper. You don't actually","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16781669,"byte_end":16781745,"line_start":288,"line_end":288,"column_start":5,"column_end":81}},{"value":"/ implement this trait, but `tower::Service<Uri>` instead.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16781750,"byte_end":16781810,"line_start":289,"line_end":289,"column_start":5,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":3336},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16782043,"byte_end":16782047,"line_start":294,"line_end":294,"column_start":14,"column_end":18},"name":"_Svc","qualname":"::client::connect::sealed::Connect::_Svc","value":"type _Svc: ConnectSvc;","parent":{"krate":0,"index":3335},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3337},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16782095,"byte_end":16782102,"line_start":296,"line_end":296,"column_start":12,"column_end":19},"name":"connect","qualname":"::client::connect::sealed::Connect::connect","value":"pub fn connect(Self, Internal, Uri) -> <Self::_Svc as ConnectSvc>::Future","parent":{"krate":0,"index":3335},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3338},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16782204,"byte_end":16782214,"line_start":299,"line_end":299,"column_start":15,"column_end":25},"name":"ConnectSvc","qualname":"::client::connect::sealed::ConnectSvc","value":"ConnectSvc","parent":null,"children":[{"krate":0,"index":3339},{"krate":0,"index":3340},{"krate":0,"index":3341},{"krate":0,"index":3342}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3339},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16782230,"byte_end":16782240,"line_start":300,"line_end":300,"column_start":14,"column_end":24},"name":"Connection","qualname":"::client::connect::sealed::ConnectSvc::Connection","value":"type Connection: AsyncRead + AsyncWrite + Connection + Unpin + Send + 'static;","parent":{"krate":0,"index":3338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3340},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16782317,"byte_end":16782322,"line_start":301,"line_end":301,"column_start":14,"column_end":19},"name":"Error","qualname":"::client::connect::sealed::ConnectSvc::Error","value":"type Error: Into<Box<dyn StdError + Send + Sync>>;","parent":{"krate":0,"index":3338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3341},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16782376,"byte_end":16782382,"line_start":302,"line_end":302,"column_start":14,"column_end":20},"name":"Future","qualname":"::client::connect::sealed::ConnectSvc::Future","value":"type Future: Future<Output = Result<Self::Connection, Self::Error>> + Unpin + Send + 'static;","parent":{"krate":0,"index":3338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3342},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16782477,"byte_end":16782484,"line_start":304,"line_end":304,"column_start":12,"column_end":19},"name":"connect","qualname":"::client::connect::sealed::ConnectSvc::connect","value":"pub fn connect(Self, Internal, Uri) -> Self::Future","parent":{"krate":0,"index":3338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3358},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16783819,"byte_end":16783825,"line_start":346,"line_end":346,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::client::connect::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3359},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16783888,"byte_end":16783896,"line_start":348,"line_end":348,"column_start":16,"column_end":24},"name":"Internal","qualname":"::client::connect::sealed::Internal","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16783833,"byte_end":16783872,"line_start":347,"line_end":347,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":3985},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16831179,"byte_end":16831185,"line_start":29,"line_end":29,"column_start":12,"column_end":18},"name":"Client","qualname":"::client::client::Client","value":"Client {  }","parent":null,"children":[{"krate":0,"index":3988},{"krate":0,"index":3989},{"krate":0,"index":3990},{"krate":0,"index":3991}],"decl_id":null,"docs":" A Client to make outgoing HTTP requests.","sig":null,"attributes":[{"value":"/ A Client to make outgoing HTTP requests.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16830908,"byte_end":16830952,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16830953,"byte_end":16830956,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ `Client` is cheap to clone and cloning is the recommended way to share a `Client`. The","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16830957,"byte_end":16831047,"line_start":26,"line_end":26,"column_start":1,"column_end":91}},{"value":"/ underlying connection pool will be reused.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16831048,"byte_end":16831094,"line_start":27,"line_end":27,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":3992},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16831605,"byte_end":16831619,"line_start":47,"line_end":47,"column_start":12,"column_end":26},"name":"ResponseFuture","qualname":"::client::client::ResponseFuture","value":"ResponseFuture {  }","parent":null,"children":[{"krate":0,"index":3993}],"decl_id":null,"docs":" A `Future` that will resolve to an HTTP Response.","sig":null,"attributes":[{"value":"/ A `Future` that will resolve to an HTTP Response.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16831424,"byte_end":16831477,"line_start":43,"line_end":43,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16831478,"byte_end":16831481,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ This is returned by `Client::request` (and `Client::get`).","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16831482,"byte_end":16831544,"line_start":45,"line_end":45,"column_start":1,"column_end":63}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16831545,"byte_end":16831593,"line_start":46,"line_end":46,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3995},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16832135,"byte_end":16832138,"line_start":63,"line_end":63,"column_start":12,"column_end":15},"name":"new","qualname":"<Client<HttpConnector, Body>>::new","value":"pub fn new() -> Client<HttpConnector, Body>","parent":null,"children":[],"decl_id":null,"docs":" Create a new Client with the default [config](Builder).","sig":null,"attributes":[{"value":"/ Create a new Client with the default [config](Builder).","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16831809,"byte_end":16831868,"line_start":55,"line_end":55,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16831873,"byte_end":16831876,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16831881,"byte_end":16831891,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16831896,"byte_end":16831899,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ The default connector does **not** handle TLS. Speaking to `https`","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16831904,"byte_end":16831974,"line_start":59,"line_end":59,"column_start":5,"column_end":75}},{"value":"/ destinations will require [configuring a connector that implements","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16831979,"byte_end":16832049,"line_start":60,"line_end":60,"column_start":5,"column_end":75}},{"value":"/ TLS](https://hyper.rs/guides/client/configuration).","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16832054,"byte_end":16832109,"line_start":61,"line_end":61,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16832114,"byte_end":16832123,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3999},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16832929,"byte_end":16832936,"line_start":96,"line_end":96,"column_start":12,"column_end":19},"name":"builder","qualname":"<Client<(), Body>>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Create a builder to configure a new `Client`.","sig":null,"attributes":[{"value":"/ Create a builder to configure a new `Client`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16832403,"byte_end":16832452,"line_start":76,"line_end":76,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16832457,"byte_end":16832460,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16832465,"byte_end":16832478,"line_start":78,"line_end":78,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16832483,"byte_end":16832486,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16832491,"byte_end":16832498,"line_start":80,"line_end":80,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(feature  = \"runtime\")]","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16832503,"byte_end":16832537,"line_start":81,"line_end":81,"column_start":5,"column_end":39}},{"value":"/ # fn run () {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16832542,"byte_end":16832559,"line_start":82,"line_end":82,"column_start":5,"column_end":22}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16832564,"byte_end":16832592,"line_start":83,"line_end":83,"column_start":5,"column_end":33}},{"value":"/ use hyper::Client;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16832597,"byte_end":16832619,"line_start":84,"line_end":84,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16832624,"byte_end":16832627,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ let client = Client::builder()","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16832632,"byte_end":16832666,"line_start":86,"line_end":86,"column_start":5,"column_end":39}},{"value":"/     .pool_idle_timeout(Duration::from_secs(30))","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16832671,"byte_end":16832722,"line_start":87,"line_end":87,"column_start":5,"column_end":56}},{"value":"/     .http2_only(true)","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16832727,"byte_end":16832752,"line_start":88,"line_end":88,"column_start":5,"column_end":30}},{"value":"/     .build_http();","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16832757,"byte_end":16832779,"line_start":89,"line_end":89,"column_start":5,"column_end":27}},{"value":"/ # let infer: Client<_, hyper::Body> = client;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16832784,"byte_end":16832833,"line_start":90,"line_end":90,"column_start":5,"column_end":54}},{"value":"/ # drop(infer);","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16832838,"byte_end":16832856,"line_start":91,"line_end":91,"column_start":5,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16832861,"byte_end":16832868,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ # fn main() {}","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16832873,"byte_end":16832891,"line_start":93,"line_end":93,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16832896,"byte_end":16832903,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16832908,"byte_end":16832917,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4003},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16833776,"byte_end":16833779,"line_start":129,"line_end":129,"column_start":12,"column_end":15},"name":"get","qualname":"<Client<C, B>>::get","value":"pub fn get(&Self, Uri) -> ResponseFuture where B: Default","parent":null,"children":[],"decl_id":null,"docs":" Send a `GET` request to the supplied `Uri`.","sig":null,"attributes":[{"value":"/ Send a `GET` request to the supplied `Uri`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16833178,"byte_end":16833225,"line_start":108,"line_end":108,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16833230,"byte_end":16833233,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16833238,"byte_end":16833248,"line_start":110,"line_end":110,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16833253,"byte_end":16833256,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ This requires that the `HttpBody` type have a `Default` implementation.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16833261,"byte_end":16833336,"line_start":112,"line_end":112,"column_start":5,"column_end":80}},{"value":"/ It *should* return an \"empty\" version of itself, such that","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16833341,"byte_end":16833403,"line_start":113,"line_end":113,"column_start":5,"column_end":67}},{"value":"/ `HttpBody::is_end_stream` is `true`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16833408,"byte_end":16833448,"line_start":114,"line_end":114,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16833453,"byte_end":16833456,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16833461,"byte_end":16833474,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16833479,"byte_end":16833482,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16833487,"byte_end":16833494,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(feature  = \"runtime\")]","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16833499,"byte_end":16833533,"line_start":119,"line_end":119,"column_start":5,"column_end":39}},{"value":"/ # fn run () {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16833538,"byte_end":16833555,"line_start":120,"line_end":120,"column_start":5,"column_end":22}},{"value":"/ use hyper::{Client, Uri};","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16833560,"byte_end":16833589,"line_start":121,"line_end":121,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16833594,"byte_end":16833597,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let client = Client::new();","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16833602,"byte_end":16833633,"line_start":123,"line_end":123,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16833638,"byte_end":16833641,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let future = client.get(Uri::from_static(\"http://httpbin.org/ip\"));","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16833646,"byte_end":16833717,"line_start":125,"line_end":125,"column_start":5,"column_end":76}},{"value":"/ # }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16833722,"byte_end":16833729,"line_start":126,"line_end":126,"column_start":5,"column_end":12}},{"value":"/ # fn main() {}","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16833734,"byte_end":16833752,"line_start":127,"line_end":127,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16833757,"byte_end":16833764,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4004},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16834700,"byte_end":16834707,"line_start":164,"line_end":164,"column_start":12,"column_end":19},"name":"request","qualname":"<Client<C, B>>::request","value":"pub fn request(&Self, Request<B>) -> ResponseFuture","parent":null,"children":[],"decl_id":null,"docs":" Send a constructed `Request` using this `Client`.","sig":null,"attributes":[{"value":"/ Send a constructed `Request` using this `Client`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16834132,"byte_end":16834185,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16834190,"byte_end":16834193,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16834198,"byte_end":16834211,"line_start":145,"line_end":145,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16834216,"byte_end":16834219,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16834224,"byte_end":16834231,"line_start":147,"line_end":147,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(feature  = \"runtime\")]","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16834236,"byte_end":16834270,"line_start":148,"line_end":148,"column_start":5,"column_end":39}},{"value":"/ # fn run () {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16834275,"byte_end":16834292,"line_start":149,"line_end":149,"column_start":5,"column_end":22}},{"value":"/ use hyper::{Body, Method, Client, Request};","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16834297,"byte_end":16834344,"line_start":150,"line_end":150,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16834349,"byte_end":16834352,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ let client = Client::new();","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16834357,"byte_end":16834388,"line_start":152,"line_end":152,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16834393,"byte_end":16834396,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let req = Request::builder()","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16834401,"byte_end":16834433,"line_start":154,"line_end":154,"column_start":5,"column_end":37}},{"value":"/     .method(Method::POST)","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16834438,"byte_end":16834467,"line_start":155,"line_end":155,"column_start":5,"column_end":34}},{"value":"/     .uri(\"http://httpbin.org/post\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16834472,"byte_end":16834511,"line_start":156,"line_end":156,"column_start":5,"column_end":44}},{"value":"/     .body(Body::from(\"Hallo!\"))","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16834516,"byte_end":16834551,"line_start":157,"line_end":157,"column_start":5,"column_end":40}},{"value":"/     .expect(\"request builder\");","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16834556,"byte_end":16834591,"line_start":158,"line_end":158,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16834596,"byte_end":16834599,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ let future = client.request(req);","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16834604,"byte_end":16834641,"line_start":160,"line_end":160,"column_start":5,"column_end":42}},{"value":"/ # }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16834646,"byte_end":16834653,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/ # fn main() {}","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16834658,"byte_end":16834676,"line_start":162,"line_end":162,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16834681,"byte_end":16834688,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4833},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16860187,"byte_end":16860194,"line_start":894,"line_end":894,"column_start":12,"column_end":19},"name":"Builder","qualname":"::client::client::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":4834},{"krate":0,"index":4835},{"krate":0,"index":4836}],"decl_id":null,"docs":" A builder to configure a new [`Client`](Client).","sig":null,"attributes":[{"value":"/ A builder to configure a new [`Client`](Client).","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16859654,"byte_end":16859706,"line_start":873,"line_end":873,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16859707,"byte_end":16859710,"line_start":874,"line_end":874,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16859711,"byte_end":16859724,"line_start":875,"line_end":875,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16859725,"byte_end":16859728,"line_start":876,"line_end":876,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16859729,"byte_end":16859736,"line_start":877,"line_end":877,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature  = \"runtime\")]","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16859737,"byte_end":16859771,"line_start":878,"line_end":878,"column_start":1,"column_end":35}},{"value":"/ # fn run () {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16859772,"byte_end":16859789,"line_start":879,"line_end":879,"column_start":1,"column_end":18}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16859790,"byte_end":16859818,"line_start":880,"line_end":880,"column_start":1,"column_end":29}},{"value":"/ use hyper::Client;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16859819,"byte_end":16859841,"line_start":881,"line_end":881,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16859842,"byte_end":16859845,"line_start":882,"line_end":882,"column_start":1,"column_end":4}},{"value":"/ let client = Client::builder()","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16859846,"byte_end":16859880,"line_start":883,"line_end":883,"column_start":1,"column_end":35}},{"value":"/     .pool_idle_timeout(Duration::from_secs(30))","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16859881,"byte_end":16859932,"line_start":884,"line_end":884,"column_start":1,"column_end":52}},{"value":"/     .http2_only(true)","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16859933,"byte_end":16859958,"line_start":885,"line_end":885,"column_start":1,"column_end":26}},{"value":"/     .build_http();","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16859959,"byte_end":16859981,"line_start":886,"line_end":886,"column_start":1,"column_end":23}},{"value":"/ # let infer: Client<_, hyper::Body> = client;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16859982,"byte_end":16860031,"line_start":887,"line_end":887,"column_start":1,"column_end":50}},{"value":"/ # drop(infer);","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16860032,"byte_end":16860050,"line_start":888,"line_end":888,"column_start":1,"column_end":19}},{"value":"/ # }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16860051,"byte_end":16860058,"line_start":889,"line_end":889,"column_start":1,"column_end":8}},{"value":"/ # fn main() {}","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16860059,"byte_end":16860077,"line_start":890,"line_end":890,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16860078,"byte_end":16860085,"line_start":891,"line_end":891,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4125},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16860926,"byte_end":16860936,"line_start":922,"line_end":922,"column_start":12,"column_end":22},"name":"keep_alive","qualname":"<Builder>::keep_alive","value":"pub fn keep_alive(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note =\n             \"name is confusing, to disable the connection pool, call pool_max_idle_per_host(0)\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16860795,"byte_end":16860914,"line_start":919,"line_end":921,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":4126},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16861368,"byte_end":16861386,"line_start":937,"line_end":937,"column_start":12,"column_end":30},"name":"keep_alive_timeout","qualname":"<Builder>::keep_alive_timeout","value":"pub fn keep_alive_timeout<D>(&mut Self, D) -> &mut Self where\nD: Into<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"renamed to `pool_idle_timeout`\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16861302,"byte_end":16861356,"line_start":936,"line_end":936,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":4128},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16861681,"byte_end":16861698,"line_start":949,"line_end":949,"column_start":12,"column_end":29},"name":"pool_idle_timeout","qualname":"<Builder>::pool_idle_timeout","value":"pub fn pool_idle_timeout<D>(&mut Self, D) -> &mut Self where\nD: Into<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Set an optional timeout for idle sockets being kept-alive.","sig":null,"attributes":[{"value":"/ Set an optional timeout for idle sockets being kept-alive.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16861520,"byte_end":16861582,"line_start":944,"line_end":944,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16861587,"byte_end":16861590,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ Pass `None` to disable timeout.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16861595,"byte_end":16861630,"line_start":946,"line_end":946,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16861635,"byte_end":16861638,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ Default is 90 seconds.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16861643,"byte_end":16861669,"line_start":948,"line_end":948,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":4130},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16861951,"byte_end":16861968,"line_start":959,"line_end":959,"column_start":12,"column_end":29},"name":"max_idle_per_host","qualname":"<Builder>::max_idle_per_host","value":"pub fn max_idle_per_host(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"renamed to `pool_max_idle_per_host`\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16861880,"byte_end":16861939,"line_start":958,"line_end":958,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":4131},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16862221,"byte_end":16862243,"line_start":967,"line_end":967,"column_start":12,"column_end":34},"name":"pool_max_idle_per_host","qualname":"<Builder>::pool_max_idle_per_host","value":"pub fn pool_max_idle_per_host(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum idle connection per host allowed in the pool.","sig":null,"attributes":[{"value":"/ Sets the maximum idle connection per host allowed in the pool.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16862091,"byte_end":16862157,"line_start":964,"line_end":964,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16862162,"byte_end":16862165,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ Default is `usize::MAX` (no limit).","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16862170,"byte_end":16862209,"line_start":966,"line_end":966,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":4132},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16862598,"byte_end":16862623,"line_start":979,"line_end":979,"column_start":12,"column_end":37},"name":"http1_read_buf_exact_size","qualname":"<Builder>::http1_read_buf_exact_size","value":"pub fn http1_read_buf_exact_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the exact size of the read buffer to *always* use.","sig":null,"attributes":[{"value":"/ Sets the exact size of the read buffer to *always* use.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16862389,"byte_end":16862448,"line_start":974,"line_end":974,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16862453,"byte_end":16862456,"line_start":975,"line_end":975,"column_start":5,"column_end":8}},{"value":"/ Note that setting this option unsets the `http1_max_buf_size` option.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16862461,"byte_end":16862534,"line_start":976,"line_end":976,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16862539,"byte_end":16862542,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ Default is an adaptive read buffer.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16862547,"byte_end":16862586,"line_start":978,"line_end":978,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":4133},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16863163,"byte_end":16863181,"line_start":995,"line_end":995,"column_start":12,"column_end":30},"name":"http1_max_buf_size","qualname":"<Builder>::http1_max_buf_size","value":"pub fn http1_max_buf_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum buffer size for the connection.","sig":null,"attributes":[{"value":"/ Set the maximum buffer size for the connection.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16862748,"byte_end":16862799,"line_start":984,"line_end":984,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16862804,"byte_end":16862807,"line_start":985,"line_end":985,"column_start":5,"column_end":8}},{"value":"/ Default is ~400kb.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16862812,"byte_end":16862834,"line_start":986,"line_end":986,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16862839,"byte_end":16862842,"line_start":987,"line_end":987,"column_start":5,"column_end":8}},{"value":"/ Note that setting this option unsets the `http1_read_exact_buf_size` option.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16862847,"byte_end":16862927,"line_start":988,"line_end":988,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16862932,"byte_end":16862935,"line_start":989,"line_end":989,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16862940,"byte_end":16862952,"line_start":990,"line_end":990,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16862957,"byte_end":16862960,"line_start":991,"line_end":991,"column_start":5,"column_end":8}},{"value":"/ The minimum value allowed is 8192. This method panics if the passed `max` is less than the minimum.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16862965,"byte_end":16863068,"line_start":992,"line_end":992,"column_start":5,"column_end":108}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16863073,"byte_end":16863098,"line_start":993,"line_end":993,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4134},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16864386,"byte_end":16864435,"line_start":1022,"line_end":1022,"column_start":12,"column_end":61},"name":"http1_allow_spaces_after_header_name_in_responses","qualname":"<Builder>::http1_allow_spaces_after_header_name_in_responses","value":"pub fn http1_allow_spaces_after_header_name_in_responses(&mut Self, bool)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/1 connections will accept spaces between header names\n and the colon that follow them in responses.","sig":null,"attributes":[{"value":"/ Set whether HTTP/1 connections will accept spaces between header names","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16863295,"byte_end":16863369,"line_start":1000,"line_end":1000,"column_start":5,"column_end":79}},{"value":"/ and the colon that follow them in responses.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16863374,"byte_end":16863422,"line_start":1001,"line_end":1001,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16863427,"byte_end":16863430,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ Newline codepoints (`\\r` and `\\n`) will be transformed to spaces when","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16863435,"byte_end":16863508,"line_start":1003,"line_end":1003,"column_start":5,"column_end":78}},{"value":"/ parsing.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16863513,"byte_end":16863525,"line_start":1004,"line_end":1004,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16863530,"byte_end":16863533,"line_start":1005,"line_end":1005,"column_start":5,"column_end":8}},{"value":"/ You probably don't need this, here is what [RFC 7230 Section 3.2.4.] has","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16863538,"byte_end":16863614,"line_start":1006,"line_end":1006,"column_start":5,"column_end":81}},{"value":"/ to say about it:","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16863619,"byte_end":16863639,"line_start":1007,"line_end":1007,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16863644,"byte_end":16863647,"line_start":1008,"line_end":1008,"column_start":5,"column_end":8}},{"value":"/ > No whitespace is allowed between the header field-name and colon. In","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16863652,"byte_end":16863726,"line_start":1009,"line_end":1009,"column_start":5,"column_end":79}},{"value":"/ > the past, differences in the handling of such whitespace have led to","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16863731,"byte_end":16863805,"line_start":1010,"line_end":1010,"column_start":5,"column_end":79}},{"value":"/ > security vulnerabilities in request routing and response handling. A","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16863810,"byte_end":16863884,"line_start":1011,"line_end":1011,"column_start":5,"column_end":79}},{"value":"/ > server MUST reject any received request message that contains","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16863889,"byte_end":16863956,"line_start":1012,"line_end":1012,"column_start":5,"column_end":72}},{"value":"/ > whitespace between a header field-name and colon with a response code","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16863961,"byte_end":16864036,"line_start":1013,"line_end":1013,"column_start":5,"column_end":80}},{"value":"/ > of 400 (Bad Request). A proxy MUST remove any such whitespace from a","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16864041,"byte_end":16864115,"line_start":1014,"line_end":1014,"column_start":5,"column_end":79}},{"value":"/ > response message before forwarding the message downstream.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16864120,"byte_end":16864184,"line_start":1015,"line_end":1015,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16864189,"byte_end":16864192,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/ Note that this setting does not affect HTTP/2.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16864197,"byte_end":16864247,"line_start":1017,"line_end":1017,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16864252,"byte_end":16864255,"line_start":1018,"line_end":1018,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16864260,"byte_end":16864281,"line_start":1019,"line_end":1019,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16864286,"byte_end":16864289,"line_start":1020,"line_end":1020,"column_start":5,"column_end":8}},{"value":"/ [RFC 7230 Section 3.2.4.]: https://tools.ietf.org/html/rfc7230#section-3.2.4","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16864294,"byte_end":16864374,"line_start":1021,"line_end":1021,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4135},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16866211,"byte_end":16866262,"line_start":1059,"line_end":1059,"column_start":12,"column_end":63},"name":"http1_allow_obsolete_multiline_headers_in_responses","qualname":"<Builder>::http1_allow_obsolete_multiline_headers_in_responses","value":"pub fn http1_allow_obsolete_multiline_headers_in_responses(&mut Self, bool)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/1 connections will accept obsolete line folding for\n header values.","sig":null,"attributes":[{"value":"/ Set whether HTTP/1 connections will accept obsolete line folding for","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16864592,"byte_end":16864664,"line_start":1028,"line_end":1028,"column_start":5,"column_end":77}},{"value":"/ header values.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16864669,"byte_end":16864687,"line_start":1029,"line_end":1029,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16864692,"byte_end":16864695,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ You probably don't need this, here is what [RFC 7230 Section 3.2.4.] has","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16864700,"byte_end":16864776,"line_start":1031,"line_end":1031,"column_start":5,"column_end":81}},{"value":"/ to say about it:","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16864781,"byte_end":16864801,"line_start":1032,"line_end":1032,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16864806,"byte_end":16864809,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ > A server that receives an obs-fold in a request message that is not","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16864814,"byte_end":16864887,"line_start":1034,"line_end":1034,"column_start":5,"column_end":78}},{"value":"/ > within a message/http container MUST either reject the message by","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16864892,"byte_end":16864963,"line_start":1035,"line_end":1035,"column_start":5,"column_end":76}},{"value":"/ > sending a 400 (Bad Request), preferably with a representation","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16864968,"byte_end":16865035,"line_start":1036,"line_end":1036,"column_start":5,"column_end":72}},{"value":"/ > explaining that obsolete line folding is unacceptable, or replace","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16865040,"byte_end":16865111,"line_start":1037,"line_end":1037,"column_start":5,"column_end":76}},{"value":"/ > each received obs-fold with one or more SP octets prior to","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16865116,"byte_end":16865180,"line_start":1038,"line_end":1038,"column_start":5,"column_end":69}},{"value":"/ > interpreting the field value or forwarding the message downstream.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16865185,"byte_end":16865257,"line_start":1039,"line_end":1039,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16865262,"byte_end":16865265,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ > A proxy or gateway that receives an obs-fold in a response message","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16865270,"byte_end":16865342,"line_start":1041,"line_end":1041,"column_start":5,"column_end":77}},{"value":"/ > that is not within a message/http container MUST either discard the","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16865347,"byte_end":16865420,"line_start":1042,"line_end":1042,"column_start":5,"column_end":78}},{"value":"/ > message and replace it with a 502 (Bad Gateway) response, preferably","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16865425,"byte_end":16865499,"line_start":1043,"line_end":1043,"column_start":5,"column_end":79}},{"value":"/ > with a representation explaining that unacceptable line folding was","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16865504,"byte_end":16865577,"line_start":1044,"line_end":1044,"column_start":5,"column_end":78}},{"value":"/ > received, or replace each received obs-fold with one or more SP","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16865582,"byte_end":16865651,"line_start":1045,"line_end":1045,"column_start":5,"column_end":74}},{"value":"/ > octets prior to interpreting the field value or forwarding the","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16865656,"byte_end":16865724,"line_start":1046,"line_end":1046,"column_start":5,"column_end":73}},{"value":"/ > message downstream.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16865729,"byte_end":16865754,"line_start":1047,"line_end":1047,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16865759,"byte_end":16865762,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/ > A user agent that receives an obs-fold in a response message that is","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16865767,"byte_end":16865841,"line_start":1049,"line_end":1049,"column_start":5,"column_end":79}},{"value":"/ > not within a message/http container MUST replace each received","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16865846,"byte_end":16865914,"line_start":1050,"line_end":1050,"column_start":5,"column_end":73}},{"value":"/ > obs-fold with one or more SP octets prior to interpreting the field","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16865919,"byte_end":16865992,"line_start":1051,"line_end":1051,"column_start":5,"column_end":78}},{"value":"/ > value.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16865997,"byte_end":16866009,"line_start":1052,"line_end":1052,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16866014,"byte_end":16866017,"line_start":1053,"line_end":1053,"column_start":5,"column_end":8}},{"value":"/ Note that this setting does not affect HTTP/2.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16866022,"byte_end":16866072,"line_start":1054,"line_end":1054,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16866077,"byte_end":16866080,"line_start":1055,"line_end":1055,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16866085,"byte_end":16866106,"line_start":1056,"line_end":1056,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16866111,"byte_end":16866114,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ [RFC 7230 Section 3.2.4.]: https://tools.ietf.org/html/rfc7230#section-3.2.4","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16866119,"byte_end":16866199,"line_start":1058,"line_end":1058,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4136},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16867019,"byte_end":16867031,"line_start":1077,"line_end":1077,"column_start":12,"column_end":24},"name":"http1_writev","qualname":"<Builder>::http1_writev","value":"pub fn http1_writev(&mut Self, bool) -> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/1 connections should try to use vectored writes,\n or always flatten into a single buffer.","sig":null,"attributes":[{"value":"/ Set whether HTTP/1 connections should try to use vectored writes,","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16866421,"byte_end":16866490,"line_start":1065,"line_end":1065,"column_start":5,"column_end":74}},{"value":"/ or always flatten into a single buffer.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16866495,"byte_end":16866538,"line_start":1066,"line_end":1066,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16866543,"byte_end":16866546,"line_start":1067,"line_end":1067,"column_start":5,"column_end":8}},{"value":"/ Note that setting this to false may mean more copies of body data,","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16866551,"byte_end":16866621,"line_start":1068,"line_end":1068,"column_start":5,"column_end":75}},{"value":"/ but may also improve performance when an IO transport doesn't","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16866626,"byte_end":16866691,"line_start":1069,"line_end":1069,"column_start":5,"column_end":70}},{"value":"/ support vectored writes well, such as most TLS implementations.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16866696,"byte_end":16866763,"line_start":1070,"line_end":1070,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16866768,"byte_end":16866771,"line_start":1071,"line_end":1071,"column_start":5,"column_end":8}},{"value":"/ Setting this to true will force hyper to use queued strategy","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16866776,"byte_end":16866840,"line_start":1072,"line_end":1072,"column_start":5,"column_end":69}},{"value":"/ which may eliminate unnecessary cloning on some TLS backends","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16866845,"byte_end":16866909,"line_start":1073,"line_end":1073,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16866914,"byte_end":16866917,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ Default is `auto`. In this mode hyper will try to guess which","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16866922,"byte_end":16866987,"line_start":1075,"line_end":1075,"column_start":5,"column_end":70}},{"value":"/ mode to use","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16866992,"byte_end":16867007,"line_start":1076,"line_end":1076,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4137},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16867359,"byte_end":16867383,"line_start":1088,"line_end":1088,"column_start":12,"column_end":36},"name":"http1_title_case_headers","qualname":"<Builder>::http1_title_case_headers","value":"pub fn http1_title_case_headers(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/1 connections will write header names as title case at\n the socket level.","sig":null,"attributes":[{"value":"/ Set whether HTTP/1 connections will write header names as title case at","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16867149,"byte_end":16867224,"line_start":1082,"line_end":1082,"column_start":5,"column_end":80}},{"value":"/ the socket level.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16867229,"byte_end":16867250,"line_start":1083,"line_end":1083,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16867255,"byte_end":16867258,"line_start":1084,"line_end":1084,"column_start":5,"column_end":8}},{"value":"/ Note that this setting does not affect HTTP/2.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16867263,"byte_end":16867313,"line_start":1085,"line_end":1085,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16867318,"byte_end":16867321,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16867326,"byte_end":16867347,"line_start":1087,"line_end":1087,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":4138},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16868107,"byte_end":16868133,"line_start":1106,"line_end":1106,"column_start":12,"column_end":38},"name":"http1_preserve_header_case","qualname":"<Builder>::http1_preserve_header_case","value":"pub fn http1_preserve_header_case(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether to support preserving original header cases.","sig":null,"attributes":[{"value":"/ Set whether to support preserving original header cases.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16867502,"byte_end":16867562,"line_start":1093,"line_end":1093,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16867567,"byte_end":16867570,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ Currently, this will record the original cases received, and store them","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16867575,"byte_end":16867650,"line_start":1095,"line_end":1095,"column_start":5,"column_end":80}},{"value":"/ in a private extension on the `Response`. It will also look for and use","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16867655,"byte_end":16867730,"line_start":1096,"line_end":1096,"column_start":5,"column_end":80}},{"value":"/ such an extension in any provided `Request`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16867735,"byte_end":16867783,"line_start":1097,"line_end":1097,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16867788,"byte_end":16867791,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ Since the relevant extension is still private, there is no way to","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16867796,"byte_end":16867865,"line_start":1099,"line_end":1099,"column_start":5,"column_end":74}},{"value":"/ interact with the original cases. The only effect this can have now is","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16867870,"byte_end":16867944,"line_start":1100,"line_end":1100,"column_start":5,"column_end":79}},{"value":"/ to forward the cases in a proxy-like fashion.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16867949,"byte_end":16867998,"line_start":1101,"line_end":1101,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16868003,"byte_end":16868006,"line_start":1102,"line_end":1102,"column_start":5,"column_end":8}},{"value":"/ Note that this setting does not affect HTTP/2.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16868011,"byte_end":16868061,"line_start":1103,"line_end":1103,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16868066,"byte_end":16868069,"line_start":1104,"line_end":1104,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16868074,"byte_end":16868095,"line_start":1105,"line_end":1105,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":4139},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16868355,"byte_end":16868371,"line_start":1114,"line_end":1114,"column_start":12,"column_end":28},"name":"http09_responses","qualname":"<Builder>::http09_responses","value":"pub fn http09_responses(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/0.9 responses should be tolerated.","sig":null,"attributes":[{"value":"/ Set whether HTTP/0.9 responses should be tolerated.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16868254,"byte_end":16868309,"line_start":1111,"line_end":1111,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16868314,"byte_end":16868317,"line_start":1112,"line_end":1112,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16868322,"byte_end":16868343,"line_start":1113,"line_end":1113,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":4140},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16869005,"byte_end":16869015,"line_start":1131,"line_end":1131,"column_start":12,"column_end":22},"name":"http2_only","qualname":"<Builder>::http2_only","value":"pub fn http2_only(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether the connection **must** use HTTP/2.","sig":null,"attributes":[{"value":"/ Set whether the connection **must** use HTTP/2.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16868482,"byte_end":16868533,"line_start":1119,"line_end":1119,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16868538,"byte_end":16868541,"line_start":1120,"line_end":1120,"column_start":5,"column_end":8}},{"value":"/ The destination must either allow HTTP2 Prior Knowledge, or the","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16868546,"byte_end":16868613,"line_start":1121,"line_end":1121,"column_start":5,"column_end":72}},{"value":"/ `Connect` should be configured to do use ALPN to upgrade to `h2`","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16868618,"byte_end":16868686,"line_start":1122,"line_end":1122,"column_start":5,"column_end":73}},{"value":"/ as part of the connection process. This will not make the `Client`","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16868691,"byte_end":16868761,"line_start":1123,"line_end":1123,"column_start":5,"column_end":75}},{"value":"/ utilize ALPN by itself.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16868766,"byte_end":16868793,"line_start":1124,"line_end":1124,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16868798,"byte_end":16868801,"line_start":1125,"line_end":1125,"column_start":5,"column_end":8}},{"value":"/ Note that setting this to true prevents HTTP/1 from being allowed.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16868806,"byte_end":16868876,"line_start":1126,"line_end":1126,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16868881,"byte_end":16868884,"line_start":1127,"line_end":1127,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16868889,"byte_end":16868910,"line_start":1128,"line_end":1128,"column_start":5,"column_end":26}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16868915,"byte_end":16868940,"line_start":1129,"line_end":1129,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4141},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16869541,"byte_end":16869573,"line_start":1146,"line_end":1146,"column_start":12,"column_end":44},"name":"http2_initial_stream_window_size","qualname":"<Builder>::http2_initial_stream_window_size","value":"pub fn http2_initial_stream_window_size<impl Into<Option<u32>>: Into<Option<u32>>>(&mut Self,\n                                                                                   impl Into<Option<u32>>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for HTTP2\n stream-level flow control.","sig":null,"attributes":[{"value":"/ Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for HTTP2","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16869152,"byte_end":16869220,"line_start":1136,"line_end":1136,"column_start":5,"column_end":73}},{"value":"/ stream-level flow control.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16869225,"byte_end":16869255,"line_start":1137,"line_end":1137,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16869260,"byte_end":16869263,"line_start":1138,"line_end":1138,"column_start":5,"column_end":8}},{"value":"/ Passing `None` will do nothing.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16869268,"byte_end":16869303,"line_start":1139,"line_end":1139,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16869308,"byte_end":16869311,"line_start":1140,"line_end":1140,"column_start":5,"column_end":8}},{"value":"/ If not set, hyper will use a default.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16869316,"byte_end":16869357,"line_start":1141,"line_end":1141,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16869362,"byte_end":16869365,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://http2.github.io/http2-spec/#SETTINGS_INITIAL_WINDOW_SIZE","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16869370,"byte_end":16869446,"line_start":1143,"line_end":1143,"column_start":5,"column_end":81}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16869451,"byte_end":16869476,"line_start":1144,"line_end":1144,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4143},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16869989,"byte_end":16870025,"line_start":1159,"line_end":1159,"column_start":12,"column_end":48},"name":"http2_initial_connection_window_size","qualname":"<Builder>::http2_initial_connection_window_size","value":"pub fn http2_initial_connection_window_size<impl Into<Option<u32>>: Into<Option<u32>>>(&mut Self,\n                                                                                       impl Into<Option<u32>>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max connection-level flow control for HTTP2","sig":null,"attributes":[{"value":"/ Sets the max connection-level flow control for HTTP2","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16869736,"byte_end":16869792,"line_start":1152,"line_end":1152,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16869797,"byte_end":16869800,"line_start":1153,"line_end":1153,"column_start":5,"column_end":8}},{"value":"/ Passing `None` will do nothing.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16869805,"byte_end":16869840,"line_start":1154,"line_end":1154,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16869845,"byte_end":16869848,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ If not set, hyper will use a default.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16869853,"byte_end":16869894,"line_start":1156,"line_end":1156,"column_start":5,"column_end":46}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16869899,"byte_end":16869924,"line_start":1157,"line_end":1157,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4145},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16870516,"byte_end":16870537,"line_start":1175,"line_end":1175,"column_start":12,"column_end":33},"name":"http2_adaptive_window","qualname":"<Builder>::http2_adaptive_window","value":"pub fn http2_adaptive_window(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether to use an adaptive flow control.","sig":null,"attributes":[{"value":"/ Sets whether to use an adaptive flow control.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16870215,"byte_end":16870264,"line_start":1168,"line_end":1168,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16870269,"byte_end":16870272,"line_start":1169,"line_end":1169,"column_start":5,"column_end":8}},{"value":"/ Enabling this will override the limits set in","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16870277,"byte_end":16870326,"line_start":1170,"line_end":1170,"column_start":5,"column_end":54}},{"value":"/ `http2_initial_stream_window_size` and","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16870331,"byte_end":16870373,"line_start":1171,"line_end":1171,"column_start":5,"column_end":47}},{"value":"/ `http2_initial_connection_window_size`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16870378,"byte_end":16870421,"line_start":1172,"line_end":1172,"column_start":5,"column_end":48}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16870426,"byte_end":16870451,"line_start":1173,"line_end":1173,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4146},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16870907,"byte_end":16870927,"line_start":1187,"line_end":1187,"column_start":12,"column_end":32},"name":"http2_max_frame_size","qualname":"<Builder>::http2_max_frame_size","value":"pub fn http2_max_frame_size<impl Into<Option<u32>>: Into<Option<u32>>>(&mut Self,\n                                                                       impl Into<Option<u32>>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum frame size to use for HTTP2.","sig":null,"attributes":[{"value":"/ Sets the maximum frame size to use for HTTP2.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16870661,"byte_end":16870710,"line_start":1180,"line_end":1180,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16870715,"byte_end":16870718,"line_start":1181,"line_end":1181,"column_start":5,"column_end":8}},{"value":"/ Passing `None` will do nothing.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16870723,"byte_end":16870758,"line_start":1182,"line_end":1182,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16870763,"byte_end":16870766,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ If not set, hyper will use a default.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16870771,"byte_end":16870812,"line_start":1184,"line_end":1184,"column_start":5,"column_end":46}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16870817,"byte_end":16870842,"line_start":1185,"line_end":1185,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4148},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16871482,"byte_end":16871507,"line_start":1205,"line_end":1205,"column_start":12,"column_end":37},"name":"http2_keep_alive_interval","qualname":"<Builder>::http2_keep_alive_interval","value":"pub fn http2_keep_alive_interval<impl Into<Option<Duration>>: Into<Option<Duration>>>(&mut Self,\n                                                                                      impl Into<Option<Duration>>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets an interval for HTTP2 Ping frames should be sent to keep a\n connection alive.","sig":null,"attributes":[{"value":"/ Sets an interval for HTTP2 Ping frames should be sent to keep a","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16871058,"byte_end":16871125,"line_start":1192,"line_end":1192,"column_start":5,"column_end":72}},{"value":"/ connection alive.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16871130,"byte_end":16871151,"line_start":1193,"line_end":1193,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16871156,"byte_end":16871159,"line_start":1194,"line_end":1194,"column_start":5,"column_end":8}},{"value":"/ Pass `None` to disable HTTP2 keep-alive.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16871164,"byte_end":16871208,"line_start":1195,"line_end":1195,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16871213,"byte_end":16871216,"line_start":1196,"line_end":1196,"column_start":5,"column_end":8}},{"value":"/ Default is currently disabled.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16871221,"byte_end":16871255,"line_start":1197,"line_end":1197,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16871260,"byte_end":16871263,"line_start":1198,"line_end":1198,"column_start":5,"column_end":8}},{"value":"/ # Cargo Feature","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16871268,"byte_end":16871287,"line_start":1199,"line_end":1199,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16871292,"byte_end":16871295,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/ Requires the `runtime` cargo feature to be enabled.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16871300,"byte_end":16871355,"line_start":1201,"line_end":1201,"column_start":5,"column_end":60}},{"value":"cfg(feature = \"runtime\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16871360,"byte_end":16871387,"line_start":1202,"line_end":1202,"column_start":5,"column_end":32}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16871392,"byte_end":16871417,"line_start":1203,"line_end":1203,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4150},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16872188,"byte_end":16872212,"line_start":1226,"line_end":1226,"column_start":12,"column_end":36},"name":"http2_keep_alive_timeout","qualname":"<Builder>::http2_keep_alive_timeout","value":"pub fn http2_keep_alive_timeout(&mut Self, Duration) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a timeout for receiving an acknowledgement of the keep-alive ping.","sig":null,"attributes":[{"value":"/ Sets a timeout for receiving an acknowledgement of the keep-alive ping.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16871683,"byte_end":16871758,"line_start":1213,"line_end":1213,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16871763,"byte_end":16871766,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ If the ping is not acknowledged within the timeout, the connection will","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16871771,"byte_end":16871846,"line_start":1215,"line_end":1215,"column_start":5,"column_end":80}},{"value":"/ be closed. Does nothing if `http2_keep_alive_interval` is disabled.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16871851,"byte_end":16871922,"line_start":1216,"line_end":1216,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16871927,"byte_end":16871930,"line_start":1217,"line_end":1217,"column_start":5,"column_end":8}},{"value":"/ Default is 20 seconds.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16871935,"byte_end":16871961,"line_start":1218,"line_end":1218,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16871966,"byte_end":16871969,"line_start":1219,"line_end":1219,"column_start":5,"column_end":8}},{"value":"/ # Cargo Feature","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16871974,"byte_end":16871993,"line_start":1220,"line_end":1220,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16871998,"byte_end":16872001,"line_start":1221,"line_end":1221,"column_start":5,"column_end":8}},{"value":"/ Requires the `runtime` cargo feature to be enabled.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16872006,"byte_end":16872061,"line_start":1222,"line_end":1222,"column_start":5,"column_end":60}},{"value":"cfg(feature = \"runtime\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16872066,"byte_end":16872093,"line_start":1223,"line_end":1223,"column_start":5,"column_end":32}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16872098,"byte_end":16872123,"line_start":1224,"line_end":1224,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4151},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16872931,"byte_end":16872958,"line_start":1246,"line_end":1246,"column_start":12,"column_end":39},"name":"http2_keep_alive_while_idle","qualname":"<Builder>::http2_keep_alive_while_idle","value":"pub fn http2_keep_alive_while_idle(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether HTTP2 keep-alive should apply while the connection is idle.","sig":null,"attributes":[{"value":"/ Sets whether HTTP2 keep-alive should apply while the connection is idle.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16872343,"byte_end":16872419,"line_start":1231,"line_end":1231,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16872424,"byte_end":16872427,"line_start":1232,"line_end":1232,"column_start":5,"column_end":8}},{"value":"/ If disabled, keep-alive pings are only sent while there are open","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16872432,"byte_end":16872500,"line_start":1233,"line_end":1233,"column_start":5,"column_end":73}},{"value":"/ request/responses streams. If enabled, pings are also sent when no","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16872505,"byte_end":16872575,"line_start":1234,"line_end":1234,"column_start":5,"column_end":75}},{"value":"/ streams are active. Does nothing if `http2_keep_alive_interval` is","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16872580,"byte_end":16872650,"line_start":1235,"line_end":1235,"column_start":5,"column_end":75}},{"value":"/ disabled.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16872655,"byte_end":16872668,"line_start":1236,"line_end":1236,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16872673,"byte_end":16872676,"line_start":1237,"line_end":1237,"column_start":5,"column_end":8}},{"value":"/ Default is `false`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16872681,"byte_end":16872704,"line_start":1238,"line_end":1238,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16872709,"byte_end":16872712,"line_start":1239,"line_end":1239,"column_start":5,"column_end":8}},{"value":"/ # Cargo Feature","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16872717,"byte_end":16872736,"line_start":1240,"line_end":1240,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16872741,"byte_end":16872744,"line_start":1241,"line_end":1241,"column_start":5,"column_end":8}},{"value":"/ Requires the `runtime` cargo feature to be enabled.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16872749,"byte_end":16872804,"line_start":1242,"line_end":1242,"column_start":5,"column_end":60}},{"value":"cfg(feature = \"runtime\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16872809,"byte_end":16872836,"line_start":1243,"line_end":1243,"column_start":5,"column_end":32}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16872841,"byte_end":16872866,"line_start":1244,"line_end":1244,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4152},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16873594,"byte_end":16873628,"line_start":1261,"line_end":1261,"column_start":12,"column_end":46},"name":"http2_max_concurrent_reset_streams","qualname":"<Builder>::http2_max_concurrent_reset_streams","value":"pub fn http2_max_concurrent_reset_streams(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of HTTP2 concurrent locally reset streams.","sig":null,"attributes":[{"value":"/ Sets the maximum number of HTTP2 concurrent locally reset streams.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16873088,"byte_end":16873158,"line_start":1251,"line_end":1251,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16873163,"byte_end":16873166,"line_start":1252,"line_end":1252,"column_start":5,"column_end":8}},{"value":"/ See the documentation of [`h2::client::Builder::max_concurrent_reset_streams`] for more","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16873171,"byte_end":16873262,"line_start":1253,"line_end":1253,"column_start":5,"column_end":96}},{"value":"/ details.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16873267,"byte_end":16873279,"line_start":1254,"line_end":1254,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16873284,"byte_end":16873287,"line_start":1255,"line_end":1255,"column_start":5,"column_end":8}},{"value":"/ The default value is determined by the `h2` crate.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16873292,"byte_end":16873346,"line_start":1256,"line_end":1256,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16873351,"byte_end":16873354,"line_start":1257,"line_end":1257,"column_start":5,"column_end":8}},{"value":"/ [`h2::client::Builder::max_concurrent_reset_streams`]: https://docs.rs/h2/client/struct.Builder.html#method.max_concurrent_reset_streams","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16873359,"byte_end":16873499,"line_start":1258,"line_end":1258,"column_start":5,"column_end":145}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16873504,"byte_end":16873529,"line_start":1259,"line_end":1259,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4153},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16874058,"byte_end":16874081,"line_start":1275,"line_end":1275,"column_start":12,"column_end":35},"name":"http2_max_send_buf_size","qualname":"<Builder>::http2_max_send_buf_size","value":"pub fn http2_max_send_buf_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum write buffer size for each HTTP/2 stream.","sig":null,"attributes":[{"value":"/ Set the maximum write buffer size for each HTTP/2 stream.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16873758,"byte_end":16873819,"line_start":1266,"line_end":1266,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16873824,"byte_end":16873827,"line_start":1267,"line_end":1267,"column_start":5,"column_end":8}},{"value":"/ Default is currently 1MB, but may change.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16873832,"byte_end":16873877,"line_start":1268,"line_end":1268,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16873882,"byte_end":16873885,"line_start":1269,"line_end":1269,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16873890,"byte_end":16873902,"line_start":1270,"line_end":1270,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16873907,"byte_end":16873910,"line_start":1271,"line_end":1271,"column_start":5,"column_end":8}},{"value":"/ The value must be no larger than `u32::MAX`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16873915,"byte_end":16873963,"line_start":1272,"line_end":1272,"column_start":5,"column_end":53}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16873968,"byte_end":16873993,"line_start":1273,"line_end":1273,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4154},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16874681,"byte_end":16874704,"line_start":1292,"line_end":1292,"column_start":12,"column_end":35},"name":"retry_canceled_requests","qualname":"<Builder>::retry_canceled_requests","value":"pub fn retry_canceled_requests(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether to retry requests that get disrupted before ever starting\n to write.","sig":null,"attributes":[{"value":"/ Set whether to retry requests that get disrupted before ever starting","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16874200,"byte_end":16874273,"line_start":1280,"line_end":1280,"column_start":5,"column_end":78}},{"value":"/ to write.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16874278,"byte_end":16874291,"line_start":1281,"line_end":1281,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16874296,"byte_end":16874299,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ This means a request that is queued, and gets given an idle, reused","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16874304,"byte_end":16874375,"line_start":1283,"line_end":1283,"column_start":5,"column_end":76}},{"value":"/ connection, and then encounters an error immediately as the idle","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16874380,"byte_end":16874448,"line_start":1284,"line_end":1284,"column_start":5,"column_end":73}},{"value":"/ connection was found to be unusable.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16874453,"byte_end":16874493,"line_start":1285,"line_end":1285,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16874498,"byte_end":16874501,"line_start":1286,"line_end":1286,"column_start":5,"column_end":8}},{"value":"/ When this is set to `false`, the related `ResponseFuture` would instead","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16874506,"byte_end":16874581,"line_start":1287,"line_end":1287,"column_start":5,"column_end":80}},{"value":"/ resolve to an `Error::Cancel`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16874586,"byte_end":16874620,"line_start":1288,"line_end":1288,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16874625,"byte_end":16874628,"line_start":1289,"line_end":1289,"column_start":5,"column_end":8}},{"value":"/ Default is `true`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16874633,"byte_end":16874655,"line_start":1290,"line_end":1290,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16874660,"byte_end":16874669,"line_start":1291,"line_end":1291,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4155},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16875107,"byte_end":16875115,"line_start":1304,"line_end":1304,"column_start":12,"column_end":20},"name":"set_host","qualname":"<Builder>::set_host","value":"pub fn set_host(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether to automatically add the `Host` header to requests.","sig":null,"attributes":[{"value":"/ Set whether to automatically add the `Host` header to requests.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16874824,"byte_end":16874891,"line_start":1297,"line_end":1297,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16874896,"byte_end":16874899,"line_start":1298,"line_end":1298,"column_start":5,"column_end":8}},{"value":"/ If true, and a request does not include a `Host` header, one will be","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16874904,"byte_end":16874976,"line_start":1299,"line_end":1299,"column_start":5,"column_end":77}},{"value":"/ added automatically, derived from the authority of the `Uri`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16874981,"byte_end":16875046,"line_start":1300,"line_end":1300,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16875051,"byte_end":16875054,"line_start":1301,"line_end":1301,"column_start":5,"column_end":8}},{"value":"/ Default is `true`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16875059,"byte_end":16875081,"line_start":1302,"line_end":1302,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16875086,"byte_end":16875095,"line_start":1303,"line_end":1303,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4156},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16875297,"byte_end":16875305,"line_start":1310,"line_end":1310,"column_start":12,"column_end":20},"name":"executor","qualname":"<Builder>::executor","value":"pub fn executor<E>(&mut Self, E) -> &mut Self where\nE: Executor<BoxSendFuture> + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Provide an executor to execute background `Connection` tasks.\n","sig":null,"attributes":[{"value":"/ Provide an executor to execute background `Connection` tasks.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16875220,"byte_end":16875285,"line_start":1309,"line_end":1309,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":4158},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16875601,"byte_end":16875611,"line_start":1320,"line_end":1320,"column_start":12,"column_end":22},"name":"build_http","qualname":"<Builder>::build_http","value":"pub fn build_http<B>(&Self) -> Client<HttpConnector, B> where B: HttpBody +\nSend, B::Data: Send","parent":null,"children":[],"decl_id":null,"docs":" Builder a client with this configuration and the default `HttpConnector`.\n","sig":null,"attributes":[{"value":"/ Builder a client with this configuration and the default `HttpConnector`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16875484,"byte_end":16875561,"line_start":1318,"line_end":1318,"column_start":5,"column_end":82}},{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16875566,"byte_end":16875589,"line_start":1319,"line_end":1319,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4160},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16876025,"byte_end":16876030,"line_start":1333,"line_end":1333,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"pub fn build<C, B>(&Self, C) -> Client<C, B> where C: Connect + Clone,\nB: HttpBody + Send, B::Data: Send","parent":null,"children":[],"decl_id":null,"docs":" Combine the configuration of this builder with a connector to create a `Client`.\n","sig":null,"attributes":[{"value":"/ Combine the configuration of this builder with a connector to create a `Client`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16875929,"byte_end":16876013,"line_start":1332,"line_end":1332,"column_start":5,"column_end":89}}]},{"kind":"Mod","id":{"krate":0,"index":4165},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"conn","qualname":"::client::conn","value":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","parent":null,"children":[{"krate":0,"index":4166},{"krate":0,"index":4169},{"krate":0,"index":4172},{"krate":0,"index":4175},{"krate":0,"index":4178},{"krate":0,"index":4181},{"krate":0,"index":4182},{"krate":0,"index":4185},{"krate":0,"index":4188},{"krate":0,"index":4191},{"krate":0,"index":4194},{"krate":0,"index":4197},{"krate":0,"index":4198},{"krate":0,"index":4201},{"krate":0,"index":4204},{"krate":0,"index":4207},{"krate":0,"index":4208},{"krate":0,"index":4211},{"krate":0,"index":4214},{"krate":0,"index":4217},{"krate":0,"index":4220},{"krate":0,"index":4221},{"krate":0,"index":4222},{"krate":0,"index":4225},{"krate":0,"index":4228},{"krate":0,"index":4231},{"krate":0,"index":4234},{"krate":0,"index":4237},{"krate":0,"index":4240},{"krate":0,"index":4243},{"krate":0,"index":4246},{"krate":0,"index":4249},{"krate":0,"index":4250},{"krate":0,"index":4253},{"krate":0,"index":4256},{"krate":0,"index":4259},{"krate":0,"index":4262},{"krate":0,"index":5392},{"krate":0,"index":5399},{"krate":0,"index":5407},{"krate":0,"index":4264},{"krate":0,"index":4268},{"krate":0,"index":4271},{"krate":0,"index":4839},{"krate":0,"index":4850},{"krate":0,"index":4852},{"krate":0,"index":4854},{"krate":0,"index":4859},{"krate":0,"index":4861},{"krate":0,"index":4275},{"krate":0,"index":4277},{"krate":0,"index":4863},{"krate":0,"index":4868},{"krate":0,"index":4284},{"krate":0,"index":4287},{"krate":0,"index":4297},{"krate":0,"index":4303},{"krate":0,"index":4310},{"krate":0,"index":4313},{"krate":0,"index":4317},{"krate":0,"index":4322},{"krate":0,"index":4325},{"krate":0,"index":4328},{"krate":0,"index":4338},{"krate":0,"index":4343},{"krate":0,"index":4347},{"krate":0,"index":4381},{"krate":0,"index":4385},{"krate":0,"index":4387},{"krate":0,"index":4392},{"krate":0,"index":4393},{"krate":0,"index":4394},{"krate":0,"index":4396},{"krate":0,"index":4399},{"krate":0,"index":4402},{"krate":0,"index":4403}],"decl_id":null,"docs":" Lower-level client connection API.","sig":null,"attributes":[{"value":"cfg(any(feature = \"http1\", feature = \"http2\"))","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/cfg.rs","byte_start":3218,"byte_end":3231,"line_start":7,"line_end":7,"column_start":13,"column_end":26}},{"value":"/ Lower-level client connection API.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16879918,"byte_end":16879956,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16879957,"byte_end":16879960,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The types in this module are to provide a lower-level API based around a","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16879961,"byte_end":16880037,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ single connection. Connecting to a host, pooling connections, and the like","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16880038,"byte_end":16880116,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ are not handled at this level. This module provides the building blocks to","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16880117,"byte_end":16880195,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ customize those things externally.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16880196,"byte_end":16880234,"line_start":6,"line_end":6,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16880235,"byte_end":16880238,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ If don't have need to manage connections yourself, consider using the","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16880239,"byte_end":16880312,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/ higher-level [Client](super) API.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16880313,"byte_end":16880350,"line_start":9,"line_end":9,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16880351,"byte_end":16880354,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16880355,"byte_end":16880369,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/ A simple example that uses the `SendRequest` struct to talk HTTP over a Tokio TCP stream","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16880370,"byte_end":16880462,"line_start":12,"line_end":12,"column_start":1,"column_end":93}},{"value":"/ ```no_run","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16880463,"byte_end":16880476,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/ # #[cfg(all(feature = \"client\", feature = \"http1\", feature = \"runtime\"))]","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16880477,"byte_end":16880554,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ # mod rt {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16880555,"byte_end":16880569,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/ use tower::ServiceExt;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16880570,"byte_end":16880596,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/ use http::{Request, StatusCode};","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16880597,"byte_end":16880633,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/ use hyper::{client::conn, Body};","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16880634,"byte_end":16880670,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16880671,"byte_end":16880701,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16880702,"byte_end":16880705,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16880706,"byte_end":16880724,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16880725,"byte_end":16880788,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/     let target_stream = TcpStream::connect(\"example.com:80\").await?;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16880789,"byte_end":16880861,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16880862,"byte_end":16880865,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/     let (mut request_sender, connection) = conn::handshake(target_stream).await?;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16880866,"byte_end":16880951,"line_start":25,"line_end":25,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16880952,"byte_end":16880955,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/     // spawn a task to poll the connection and drive the HTTP state","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16880956,"byte_end":16881027,"line_start":27,"line_end":27,"column_start":1,"column_end":72}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16881028,"byte_end":16881061,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/         if let Err(e) = connection.await {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16881062,"byte_end":16881108,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/             eprintln!(\"Error in connection: {}\", e);","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16881109,"byte_end":16881165,"line_start":30,"line_end":30,"column_start":1,"column_end":57}},{"value":"/         }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16881166,"byte_end":16881179,"line_start":31,"line_end":31,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16881180,"byte_end":16881191,"line_start":32,"line_end":32,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16881192,"byte_end":16881195,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/     let request = Request::builder()","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16881196,"byte_end":16881236,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"/         // We need to manually add the host header because SendRequest does not","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16881237,"byte_end":16881320,"line_start":35,"line_end":35,"column_start":1,"column_end":84}},{"value":"/         .header(\"Host\", \"example.com\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16881321,"byte_end":16881363,"line_start":36,"line_end":36,"column_start":1,"column_end":43}},{"value":"/         .method(\"GET\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16881364,"byte_end":16881390,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/         .body(Body::from(\"\"))?;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16881391,"byte_end":16881426,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/     let response = request_sender.send_request(request).await?;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16881427,"byte_end":16881494,"line_start":39,"line_end":39,"column_start":1,"column_end":68}},{"value":"/     assert!(response.status() == StatusCode::OK);","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16881495,"byte_end":16881548,"line_start":40,"line_end":40,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16881549,"byte_end":16881552,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/     // To send via the same connection again, it may not work as it may not be ready,","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16881553,"byte_end":16881642,"line_start":42,"line_end":42,"column_start":1,"column_end":90}},{"value":"/     // so we have to wait until the request_sender becomes ready.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16881643,"byte_end":16881712,"line_start":43,"line_end":43,"column_start":1,"column_end":70}},{"value":"/     request_sender.ready().await?;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16881713,"byte_end":16881751,"line_start":44,"line_end":44,"column_start":1,"column_end":39}},{"value":"/     let request = Request::builder()","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16881752,"byte_end":16881792,"line_start":45,"line_end":45,"column_start":1,"column_end":41}},{"value":"/         .header(\"Host\", \"example.com\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16881793,"byte_end":16881835,"line_start":46,"line_end":46,"column_start":1,"column_end":43}},{"value":"/         .method(\"GET\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16881836,"byte_end":16881862,"line_start":47,"line_end":47,"column_start":1,"column_end":27}},{"value":"/         .body(Body::from(\"\"))?;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16881863,"byte_end":16881898,"line_start":48,"line_end":48,"column_start":1,"column_end":36}},{"value":"/     let response = request_sender.send_request(request).await?;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16881899,"byte_end":16881966,"line_start":49,"line_end":49,"column_start":1,"column_end":68}},{"value":"/     assert!(response.status() == StatusCode::OK);","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16881967,"byte_end":16882020,"line_start":50,"line_end":50,"column_start":1,"column_end":54}},{"value":"/     Ok(())","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16882021,"byte_end":16882035,"line_start":51,"line_end":51,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16882036,"byte_end":16882041,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16882042,"byte_end":16882045,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16882046,"byte_end":16882053,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16882054,"byte_end":16882061,"line_start":55,"line_end":55,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4264},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16883770,"byte_end":16883779,"line_start":121,"line_end":121,"column_start":14,"column_end":23},"name":"handshake","qualname":"::client::conn::handshake","value":"pub async fn handshake<T>(T) -> /*impl Trait*/ where T: AsyncRead +\nAsyncWrite + Unpin + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Returns a handshake future over some IO.","sig":null,"attributes":[{"value":"/ Returns a handshake future over some IO.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16883593,"byte_end":16883637,"line_start":117,"line_end":117,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16883638,"byte_end":16883641,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ This is a shortcut for `Builder::new().handshake(io)`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16883642,"byte_end":16883700,"line_start":119,"line_end":119,"column_start":1,"column_end":59}},{"value":"/ See [`client::conn`](crate::client::conn) for more.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16883701,"byte_end":16883756,"line_start":120,"line_end":120,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":4268},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16884037,"byte_end":16884048,"line_start":131,"line_end":131,"column_start":12,"column_end":23},"name":"SendRequest","qualname":"::client::conn::SendRequest","value":"SendRequest {  }","parent":null,"children":[{"krate":0,"index":4270}],"decl_id":null,"docs":" The sender side of an established connection.\n","sig":null,"attributes":[{"value":"/ The sender side of an established connection.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16883976,"byte_end":16884025,"line_start":130,"line_end":130,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":4271},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16884397,"byte_end":16884407,"line_start":140,"line_end":140,"column_start":12,"column_end":22},"name":"Connection","qualname":"::client::conn::Connection","value":"Connection {  }","parent":null,"children":[{"krate":0,"index":4274}],"decl_id":null,"docs":" A future that processes all HTTP state for the IO object.","sig":null,"attributes":[{"value":"/ A future that processes all HTTP state for the IO object.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16884117,"byte_end":16884178,"line_start":135,"line_end":135,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16884179,"byte_end":16884182,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ In most cases, this should just be spawned into an executor, so that it","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16884183,"byte_end":16884258,"line_start":137,"line_end":137,"column_start":1,"column_end":76}},{"value":"/ can process incoming and outgoing messages, notice hangups, and the like.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16884259,"byte_end":16884336,"line_start":138,"line_end":138,"column_start":1,"column_end":78}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16884337,"byte_end":16884385,"line_start":139,"line_end":139,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":4839},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16884701,"byte_end":16884708,"line_start":152,"line_end":152,"column_start":12,"column_end":19},"name":"Builder","qualname":"::client::conn::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":4840},{"krate":0,"index":4841},{"krate":0,"index":4842},{"krate":0,"index":4843},{"krate":0,"index":4844},{"krate":0,"index":4845},{"krate":0,"index":4846},{"krate":0,"index":4847},{"krate":0,"index":4848},{"krate":0,"index":4849}],"decl_id":null,"docs":" A builder to configure an HTTP connection.","sig":null,"attributes":[{"value":"/ A builder to configure an HTTP connection.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16884538,"byte_end":16884584,"line_start":148,"line_end":148,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16884585,"byte_end":16884588,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ After setting options, the builder is used to create a handshake future.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16884589,"byte_end":16884665,"line_start":150,"line_end":150,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":4275},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16885404,"byte_end":16885418,"line_start":180,"line_end":180,"column_start":12,"column_end":26},"name":"ResponseFuture","qualname":"::client::conn::ResponseFuture","value":"ResponseFuture {  }","parent":null,"children":[{"krate":0,"index":4276}],"decl_id":null,"docs":" A future returned by `SendRequest::send_request`.","sig":null,"attributes":[{"value":"/ A future returned by `SendRequest::send_request`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16885247,"byte_end":16885300,"line_start":176,"line_end":176,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16885301,"byte_end":16885304,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ Yields a `Response` if successful.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16885305,"byte_end":16885343,"line_start":178,"line_end":178,"column_start":1,"column_end":39}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16885344,"byte_end":16885392,"line_start":179,"line_end":179,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":4863},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16885826,"byte_end":16885831,"line_start":195,"line_end":195,"column_start":12,"column_end":17},"name":"Parts","qualname":"::client::conn::Parts","value":"Parts { io, read_buf }","parent":null,"children":[{"krate":0,"index":4865},{"krate":0,"index":4866},{"krate":0,"index":4867}],"decl_id":null,"docs":" Deconstructed parts of a `Connection`.","sig":null,"attributes":[{"value":"/ Deconstructed parts of a `Connection`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16885620,"byte_end":16885662,"line_start":190,"line_end":190,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16885663,"byte_end":16885666,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ This allows taking apart a `Connection` at a later time, in order to","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16885667,"byte_end":16885739,"line_start":192,"line_end":192,"column_start":1,"column_end":73}},{"value":"/ reclaim the IO object, and additional related pieces.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16885740,"byte_end":16885797,"line_start":193,"line_end":193,"column_start":1,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":4865},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16885899,"byte_end":16885901,"line_start":197,"line_end":197,"column_start":9,"column_end":11},"name":"io","qualname":"::client::conn::Parts::io","value":"T","parent":{"krate":0,"index":4863},"children":[],"decl_id":null,"docs":" The original IO object used in the handshake.\n","sig":null,"attributes":[{"value":"/ The original IO object used in the handshake.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16885841,"byte_end":16885890,"line_start":196,"line_end":196,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":4866},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16886321,"byte_end":16886329,"line_start":206,"line_end":206,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::client::conn::Parts::read_buf","value":"bytes::Bytes","parent":{"krate":0,"index":4863},"children":[],"decl_id":null,"docs":" A buffer of bytes that have been read but not processed as HTTP.","sig":null,"attributes":[{"value":"/ A buffer of bytes that have been read but not processed as HTTP.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16885910,"byte_end":16885978,"line_start":198,"line_end":198,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16885983,"byte_end":16885986,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ For instance, if the `Connection` is used for an HTTP upgrade request,","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16885991,"byte_end":16886065,"line_start":200,"line_end":200,"column_start":5,"column_end":79}},{"value":"/ it is possible the server sent back the first bytes of the new protocol","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16886070,"byte_end":16886145,"line_start":201,"line_end":201,"column_start":5,"column_end":80}},{"value":"/ along with the response upgrade.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16886150,"byte_end":16886186,"line_start":202,"line_end":202,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16886191,"byte_end":16886194,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ You will want to check for any existing bytes if you plan to continue","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16886199,"byte_end":16886272,"line_start":204,"line_end":204,"column_start":5,"column_end":78}},{"value":"/ communicating on the IO object.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16886277,"byte_end":16886312,"line_start":205,"line_end":205,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4289},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16886920,"byte_end":16886930,"line_start":226,"line_end":226,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<SendRequest<B>>::poll_ready","value":"pub fn poll_ready(&mut Self, &mut task::Context) -> Poll<crate::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to determine whether this sender can be used yet for a request.","sig":null,"attributes":[{"value":"/ Polls to determine whether this sender can be used yet for a request.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16886756,"byte_end":16886829,"line_start":223,"line_end":223,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16886834,"byte_end":16886837,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ If the associated connection is closed, this returns an Error.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16886842,"byte_end":16886908,"line_start":225,"line_end":225,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":4299},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16889159,"byte_end":16889171,"line_start":300,"line_end":300,"column_start":12,"column_end":24},"name":"send_request","qualname":"<SendRequest<B>>::send_request","value":"pub fn send_request(&mut Self, Request<B>) -> ResponseFuture","parent":null,"children":[],"decl_id":null,"docs":" Sends a `Request` on the associated connection.","sig":null,"attributes":[{"value":"/ Sends a `Request` on the associated connection.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16887732,"byte_end":16887783,"line_start":259,"line_end":259,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16887788,"byte_end":16887791,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ Returns a future that if successful, yields the `Response`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16887796,"byte_end":16887859,"line_start":261,"line_end":261,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16887864,"byte_end":16887867,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16887872,"byte_end":16887882,"line_start":263,"line_end":263,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16887887,"byte_end":16887890,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ There are some key differences in what automatic things the `Client`","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16887895,"byte_end":16887967,"line_start":265,"line_end":265,"column_start":5,"column_end":77}},{"value":"/ does for you that will not be done here:","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16887972,"byte_end":16888016,"line_start":266,"line_end":266,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16888021,"byte_end":16888024,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ - `Client` requires absolute-form `Uri`s, since the scheme and","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16888029,"byte_end":16888095,"line_start":268,"line_end":268,"column_start":5,"column_end":71}},{"value":"/   authority are needed to connect. They aren't required here.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16888100,"byte_end":16888165,"line_start":269,"line_end":269,"column_start":5,"column_end":70}},{"value":"/ - Since the `Client` requires absolute-form `Uri`s, it can add","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16888170,"byte_end":16888236,"line_start":270,"line_end":270,"column_start":5,"column_end":71}},{"value":"/   the `Host` header based on it. You must add a `Host` header yourself","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16888241,"byte_end":16888315,"line_start":271,"line_end":271,"column_start":5,"column_end":79}},{"value":"/   before calling this method.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16888320,"byte_end":16888353,"line_start":272,"line_end":272,"column_start":5,"column_end":38}},{"value":"/ - Since absolute-form `Uri`s are not required, if received, they will","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16888358,"byte_end":16888431,"line_start":273,"line_end":273,"column_start":5,"column_end":78}},{"value":"/   be serialized as-is.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16888436,"byte_end":16888462,"line_start":274,"line_end":274,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16888467,"byte_end":16888470,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16888475,"byte_end":16888488,"line_start":276,"line_end":276,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16888493,"byte_end":16888496,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16888501,"byte_end":16888508,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"/ # use http::header::HOST;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16888513,"byte_end":16888542,"line_start":279,"line_end":279,"column_start":5,"column_end":34}},{"value":"/ # use hyper::client::conn::SendRequest;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16888547,"byte_end":16888590,"line_start":280,"line_end":280,"column_start":5,"column_end":48}},{"value":"/ # use hyper::Body;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16888595,"byte_end":16888617,"line_start":281,"line_end":281,"column_start":5,"column_end":27}},{"value":"/ use hyper::Request;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16888622,"byte_end":16888645,"line_start":282,"line_end":282,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16888650,"byte_end":16888653,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # async fn doc(mut tx: SendRequest<Body>) -> hyper::Result<()> {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16888658,"byte_end":16888726,"line_start":284,"line_end":284,"column_start":5,"column_end":73}},{"value":"/ // build a Request","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16888731,"byte_end":16888753,"line_start":285,"line_end":285,"column_start":5,"column_end":27}},{"value":"/ let req = Request::builder()","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16888758,"byte_end":16888790,"line_start":286,"line_end":286,"column_start":5,"column_end":37}},{"value":"/     .uri(\"/foo/bar\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16888795,"byte_end":16888819,"line_start":287,"line_end":287,"column_start":5,"column_end":29}},{"value":"/     .header(HOST, \"hyper.rs\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16888824,"byte_end":16888857,"line_start":288,"line_end":288,"column_start":5,"column_end":38}},{"value":"/     .body(Body::empty())","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16888862,"byte_end":16888890,"line_start":289,"line_end":289,"column_start":5,"column_end":33}},{"value":"/     .unwrap();","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16888895,"byte_end":16888913,"line_start":290,"line_end":290,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16888918,"byte_end":16888921,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ // send it and await a Response","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16888926,"byte_end":16888961,"line_start":292,"line_end":292,"column_start":5,"column_end":40}},{"value":"/ let res = tx.send_request(req).await?;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16888966,"byte_end":16889008,"line_start":293,"line_end":293,"column_start":5,"column_end":47}},{"value":"/ // assert the Response","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16889013,"byte_end":16889039,"line_start":294,"line_end":294,"column_start":5,"column_end":31}},{"value":"/ assert!(res.status().is_success());","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16889044,"byte_end":16889083,"line_start":295,"line_end":295,"column_start":5,"column_end":44}},{"value":"/ # Ok(())","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16889088,"byte_end":16889100,"line_start":296,"line_end":296,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16889105,"byte_end":16889112,"line_start":297,"line_end":297,"column_start":5,"column_end":12}},{"value":"/ # fn main() {}","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16889117,"byte_end":16889135,"line_start":298,"line_end":298,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16889140,"byte_end":16889147,"line_start":299,"line_end":299,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4331},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16893240,"byte_end":16893250,"line_start":436,"line_end":436,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Connection<T, B>>::into_parts","value":"pub fn into_parts(Self) -> Parts<T>","parent":null,"children":[],"decl_id":null,"docs":" Return the inner IO object, and additional information.","sig":null,"attributes":[{"value":"/ Return the inner IO object, and additional information.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16893087,"byte_end":16893146,"line_start":433,"line_end":433,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16893151,"byte_end":16893154,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ Only works for HTTP/1 connections. HTTP/2 connections will panic.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16893159,"byte_end":16893228,"line_start":435,"line_end":435,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":4332},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16894481,"byte_end":16894502,"line_start":467,"line_end":467,"column_start":12,"column_end":33},"name":"poll_without_shutdown","qualname":"<Connection<T, B>>::poll_without_shutdown","value":"pub fn poll_without_shutdown(&mut Self, &mut task::Context)\n-> Poll<crate::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Poll the connection for completion, but without calling `shutdown`\n on the underlying IO.","sig":null,"attributes":[{"value":"/ Poll the connection for completion, but without calling `shutdown`","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16893825,"byte_end":16893895,"line_start":456,"line_end":456,"column_start":5,"column_end":75}},{"value":"/ on the underlying IO.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16893900,"byte_end":16893925,"line_start":457,"line_end":457,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16893930,"byte_end":16893933,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow running a connection while doing an HTTP","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16893938,"byte_end":16894006,"line_start":459,"line_end":459,"column_start":5,"column_end":73}},{"value":"/ upgrade. Once the upgrade is completed, the connection would be \"done\",","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16894011,"byte_end":16894086,"line_start":460,"line_end":460,"column_start":5,"column_end":80}},{"value":"/ but it is not desired to actually shutdown the IO object. Instead you","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16894091,"byte_end":16894164,"line_start":461,"line_end":461,"column_start":5,"column_end":78}},{"value":"/ would take it back using `into_parts`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16894169,"byte_end":16894211,"line_start":462,"line_end":462,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16894216,"byte_end":16894219,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ Use [`poll_fn`](https://docs.rs/futures/0.1.25/futures/future/fn.poll_fn.html)","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16894224,"byte_end":16894306,"line_start":464,"line_end":464,"column_start":5,"column_end":87}},{"value":"/ and [`try_ready!`](https://docs.rs/futures/0.1.25/futures/macro.try_ready.html)","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16894311,"byte_end":16894394,"line_start":465,"line_end":465,"column_start":5,"column_end":88}},{"value":"/ to work with this function; or use the `without_shutdown` wrapper.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16894399,"byte_end":16894469,"line_start":466,"line_end":466,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":4334},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16895298,"byte_end":16895314,"line_start":483,"line_end":483,"column_start":12,"column_end":28},"name":"without_shutdown","qualname":"<Connection<T, B>>::without_shutdown","value":"pub fn without_shutdown(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Prevent shutdown of the underlying IO object at the end of service the request,\n instead run `into_parts`. This is a convenience wrapper over `poll_without_shutdown`.\n","sig":null,"attributes":[{"value":"/ Prevent shutdown of the underlying IO object at the end of service the request,","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16895109,"byte_end":16895192,"line_start":481,"line_end":481,"column_start":5,"column_end":88}},{"value":"/ instead run `into_parts`. This is a convenience wrapper over `poll_without_shutdown`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16895197,"byte_end":16895286,"line_start":482,"line_end":482,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":4337},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16896146,"byte_end":16896188,"line_start":501,"line_end":501,"column_start":12,"column_end":54},"name":"http2_is_extended_connect_protocol_enabled","qualname":"<Connection<T, B>>::http2_is_extended_connect_protocol_enabled","value":"pub fn http2_is_extended_connect_protocol_enabled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the [extended CONNECT protocol][1] is enabled or not.","sig":null,"attributes":[{"value":"/ Returns whether the [extended CONNECT protocol][1] is enabled or not.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16895632,"byte_end":16895705,"line_start":491,"line_end":491,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16895710,"byte_end":16895713,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ This setting is configured by the server peer by sending the","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16895718,"byte_end":16895782,"line_start":493,"line_end":493,"column_start":5,"column_end":69}},{"value":"/ [`SETTINGS_ENABLE_CONNECT_PROTOCOL` parameter][2] in a `SETTINGS` frame.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16895787,"byte_end":16895863,"line_start":494,"line_end":494,"column_start":5,"column_end":81}},{"value":"/ This method returns the currently acknowledged value recieved from the","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16895868,"byte_end":16895942,"line_start":495,"line_end":495,"column_start":5,"column_end":79}},{"value":"/ remote.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16895947,"byte_end":16895958,"line_start":496,"line_end":496,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16895963,"byte_end":16895966,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ [1]: https://datatracker.ietf.org/doc/html/rfc8441#section-4","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16895971,"byte_end":16896035,"line_start":498,"line_end":498,"column_start":5,"column_end":69}},{"value":"/ [2]: https://datatracker.ietf.org/doc/html/rfc8441#section-3","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16896040,"byte_end":16896104,"line_start":499,"line_end":499,"column_start":5,"column_end":69}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16896109,"byte_end":16896134,"line_start":500,"line_end":500,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4348},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16897738,"byte_end":16897741,"line_start":552,"line_end":552,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new connection builder.\n","sig":null,"attributes":[{"value":"/ Creates a new connection builder.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16897675,"byte_end":16897712,"line_start":550,"line_end":550,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16897717,"byte_end":16897726,"line_start":551,"line_end":551,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4349},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16898479,"byte_end":16898487,"line_start":574,"line_end":574,"column_start":12,"column_end":20},"name":"executor","qualname":"<Builder>::executor","value":"pub fn executor<E>(&mut Self, E) -> &mut Builder where\nE: Executor<BoxSendFuture> + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Provide an executor to execute background HTTP2 tasks.\n","sig":null,"attributes":[{"value":"/ Provide an executor to execute background HTTP2 tasks.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16898409,"byte_end":16898467,"line_start":573,"line_end":573,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":4351},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16898780,"byte_end":16898796,"line_start":585,"line_end":585,"column_start":12,"column_end":28},"name":"http09_responses","qualname":"<Builder>::http09_responses","value":"pub fn http09_responses(&mut Self, bool) -> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/0.9 responses should be tolerated.","sig":null,"attributes":[{"value":"/ Set whether HTTP/0.9 responses should be tolerated.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16898679,"byte_end":16898734,"line_start":582,"line_end":582,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16898739,"byte_end":16898742,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16898747,"byte_end":16898768,"line_start":584,"line_end":584,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":4352},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16899891,"byte_end":16899940,"line_start":609,"line_end":609,"column_start":12,"column_end":61},"name":"http1_allow_spaces_after_header_name_in_responses","qualname":"<Builder>::http1_allow_spaces_after_header_name_in_responses","value":"pub fn http1_allow_spaces_after_header_name_in_responses(&mut Self, bool)\n-> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/1 connections will accept spaces between header names\n and the colon that follow them in responses.","sig":null,"attributes":[{"value":"/ Set whether HTTP/1 connections will accept spaces between header names","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16898903,"byte_end":16898977,"line_start":590,"line_end":590,"column_start":5,"column_end":79}},{"value":"/ and the colon that follow them in responses.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16898982,"byte_end":16899030,"line_start":591,"line_end":591,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16899035,"byte_end":16899038,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ You probably don't need this, here is what [RFC 7230 Section 3.2.4.] has","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16899043,"byte_end":16899119,"line_start":593,"line_end":593,"column_start":5,"column_end":81}},{"value":"/ to say about it:","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16899124,"byte_end":16899144,"line_start":594,"line_end":594,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16899149,"byte_end":16899152,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ > No whitespace is allowed between the header field-name and colon. In","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16899157,"byte_end":16899231,"line_start":596,"line_end":596,"column_start":5,"column_end":79}},{"value":"/ > the past, differences in the handling of such whitespace have led to","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16899236,"byte_end":16899310,"line_start":597,"line_end":597,"column_start":5,"column_end":79}},{"value":"/ > security vulnerabilities in request routing and response handling. A","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16899315,"byte_end":16899389,"line_start":598,"line_end":598,"column_start":5,"column_end":79}},{"value":"/ > server MUST reject any received request message that contains","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16899394,"byte_end":16899461,"line_start":599,"line_end":599,"column_start":5,"column_end":72}},{"value":"/ > whitespace between a header field-name and colon with a response code","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16899466,"byte_end":16899541,"line_start":600,"line_end":600,"column_start":5,"column_end":80}},{"value":"/ > of 400 (Bad Request). A proxy MUST remove any such whitespace from a","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16899546,"byte_end":16899620,"line_start":601,"line_end":601,"column_start":5,"column_end":79}},{"value":"/ > response message before forwarding the message downstream.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16899625,"byte_end":16899689,"line_start":602,"line_end":602,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16899694,"byte_end":16899697,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ Note that this setting does not affect HTTP/2.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16899702,"byte_end":16899752,"line_start":604,"line_end":604,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16899757,"byte_end":16899760,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16899765,"byte_end":16899786,"line_start":606,"line_end":606,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16899791,"byte_end":16899794,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ [RFC 7230 Section 3.2.4.]: https://tools.ietf.org/html/rfc7230#section-3.2.4","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16899799,"byte_end":16899879,"line_start":608,"line_end":608,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4353},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16901851,"byte_end":16901902,"line_start":652,"line_end":652,"column_start":12,"column_end":63},"name":"http1_allow_obsolete_multiline_headers_in_responses","qualname":"<Builder>::http1_allow_obsolete_multiline_headers_in_responses","value":"pub fn http1_allow_obsolete_multiline_headers_in_responses(&mut Self, bool)\n-> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/1 connections will accept obsolete line folding for\n header values.","sig":null,"attributes":[{"value":"/ Set whether HTTP/1 connections will accept obsolete line folding for","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16900129,"byte_end":16900201,"line_start":618,"line_end":618,"column_start":5,"column_end":77}},{"value":"/ header values.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16900206,"byte_end":16900224,"line_start":619,"line_end":619,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16900229,"byte_end":16900232,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ Newline codepoints (`\\r` and `\\n`) will be transformed to spaces when","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16900237,"byte_end":16900310,"line_start":621,"line_end":621,"column_start":5,"column_end":78}},{"value":"/ parsing.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16900315,"byte_end":16900327,"line_start":622,"line_end":622,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16900332,"byte_end":16900335,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ You probably don't need this, here is what [RFC 7230 Section 3.2.4.] has","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16900340,"byte_end":16900416,"line_start":624,"line_end":624,"column_start":5,"column_end":81}},{"value":"/ to say about it:","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16900421,"byte_end":16900441,"line_start":625,"line_end":625,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16900446,"byte_end":16900449,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ > A server that receives an obs-fold in a request message that is not","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16900454,"byte_end":16900527,"line_start":627,"line_end":627,"column_start":5,"column_end":78}},{"value":"/ > within a message/http container MUST either reject the message by","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16900532,"byte_end":16900603,"line_start":628,"line_end":628,"column_start":5,"column_end":76}},{"value":"/ > sending a 400 (Bad Request), preferably with a representation","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16900608,"byte_end":16900675,"line_start":629,"line_end":629,"column_start":5,"column_end":72}},{"value":"/ > explaining that obsolete line folding is unacceptable, or replace","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16900680,"byte_end":16900751,"line_start":630,"line_end":630,"column_start":5,"column_end":76}},{"value":"/ > each received obs-fold with one or more SP octets prior to","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16900756,"byte_end":16900820,"line_start":631,"line_end":631,"column_start":5,"column_end":69}},{"value":"/ > interpreting the field value or forwarding the message downstream.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16900825,"byte_end":16900897,"line_start":632,"line_end":632,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16900902,"byte_end":16900905,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ > A proxy or gateway that receives an obs-fold in a response message","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16900910,"byte_end":16900982,"line_start":634,"line_end":634,"column_start":5,"column_end":77}},{"value":"/ > that is not within a message/http container MUST either discard the","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16900987,"byte_end":16901060,"line_start":635,"line_end":635,"column_start":5,"column_end":78}},{"value":"/ > message and replace it with a 502 (Bad Gateway) response, preferably","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16901065,"byte_end":16901139,"line_start":636,"line_end":636,"column_start":5,"column_end":79}},{"value":"/ > with a representation explaining that unacceptable line folding was","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16901144,"byte_end":16901217,"line_start":637,"line_end":637,"column_start":5,"column_end":78}},{"value":"/ > received, or replace each received obs-fold with one or more SP","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16901222,"byte_end":16901291,"line_start":638,"line_end":638,"column_start":5,"column_end":74}},{"value":"/ > octets prior to interpreting the field value or forwarding the","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16901296,"byte_end":16901364,"line_start":639,"line_end":639,"column_start":5,"column_end":73}},{"value":"/ > message downstream.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16901369,"byte_end":16901394,"line_start":640,"line_end":640,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16901399,"byte_end":16901402,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ > A user agent that receives an obs-fold in a response message that is","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16901407,"byte_end":16901481,"line_start":642,"line_end":642,"column_start":5,"column_end":79}},{"value":"/ > not within a message/http container MUST replace each received","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16901486,"byte_end":16901554,"line_start":643,"line_end":643,"column_start":5,"column_end":73}},{"value":"/ > obs-fold with one or more SP octets prior to interpreting the field","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16901559,"byte_end":16901632,"line_start":644,"line_end":644,"column_start":5,"column_end":78}},{"value":"/ > value.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16901637,"byte_end":16901649,"line_start":645,"line_end":645,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16901654,"byte_end":16901657,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ Note that this setting does not affect HTTP/2.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16901662,"byte_end":16901712,"line_start":647,"line_end":647,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16901717,"byte_end":16901720,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16901725,"byte_end":16901746,"line_start":649,"line_end":649,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16901751,"byte_end":16901754,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ [RFC 7230 Section 3.2.4.]: https://tools.ietf.org/html/rfc7230#section-3.2.4","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16901759,"byte_end":16901839,"line_start":651,"line_end":651,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4354},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16902691,"byte_end":16902703,"line_start":673,"line_end":673,"column_start":12,"column_end":24},"name":"http1_writev","qualname":"<Builder>::http1_writev","value":"pub fn http1_writev(&mut Self, bool) -> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/1 connections should try to use vectored writes,\n or always flatten into a single buffer.","sig":null,"attributes":[{"value":"/ Set whether HTTP/1 connections should try to use vectored writes,","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16902093,"byte_end":16902162,"line_start":661,"line_end":661,"column_start":5,"column_end":74}},{"value":"/ or always flatten into a single buffer.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16902167,"byte_end":16902210,"line_start":662,"line_end":662,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16902215,"byte_end":16902218,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ Note that setting this to false may mean more copies of body data,","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16902223,"byte_end":16902293,"line_start":664,"line_end":664,"column_start":5,"column_end":75}},{"value":"/ but may also improve performance when an IO transport doesn't","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16902298,"byte_end":16902363,"line_start":665,"line_end":665,"column_start":5,"column_end":70}},{"value":"/ support vectored writes well, such as most TLS implementations.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16902368,"byte_end":16902435,"line_start":666,"line_end":666,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16902440,"byte_end":16902443,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ Setting this to true will force hyper to use queued strategy","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16902448,"byte_end":16902512,"line_start":668,"line_end":668,"column_start":5,"column_end":69}},{"value":"/ which may eliminate unnecessary cloning on some TLS backends","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16902517,"byte_end":16902581,"line_start":669,"line_end":669,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16902586,"byte_end":16902589,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ Default is `auto`. In this mode hyper will try to guess which","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16902594,"byte_end":16902659,"line_start":671,"line_end":671,"column_start":5,"column_end":70}},{"value":"/ mode to use","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16902664,"byte_end":16902679,"line_start":672,"line_end":672,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4355},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16903022,"byte_end":16903046,"line_start":684,"line_end":684,"column_start":12,"column_end":36},"name":"http1_title_case_headers","qualname":"<Builder>::http1_title_case_headers","value":"pub fn http1_title_case_headers(&mut Self, bool) -> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/1 connections will write header names as title case at\n the socket level.","sig":null,"attributes":[{"value":"/ Set whether HTTP/1 connections will write header names as title case at","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16902812,"byte_end":16902887,"line_start":678,"line_end":678,"column_start":5,"column_end":80}},{"value":"/ the socket level.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16902892,"byte_end":16902913,"line_start":679,"line_end":679,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16902918,"byte_end":16902921,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ Note that this setting does not affect HTTP/2.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16902926,"byte_end":16902976,"line_start":681,"line_end":681,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16902981,"byte_end":16902984,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16902989,"byte_end":16903010,"line_start":683,"line_end":683,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":4356},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16903766,"byte_end":16903792,"line_start":702,"line_end":702,"column_start":12,"column_end":38},"name":"http1_preserve_header_case","qualname":"<Builder>::http1_preserve_header_case","value":"pub fn http1_preserve_header_case(&mut Self, bool) -> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Set whether to support preserving original header cases.","sig":null,"attributes":[{"value":"/ Set whether to support preserving original header cases.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16903161,"byte_end":16903221,"line_start":689,"line_end":689,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16903226,"byte_end":16903229,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ Currently, this will record the original cases received, and store them","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16903234,"byte_end":16903309,"line_start":691,"line_end":691,"column_start":5,"column_end":80}},{"value":"/ in a private extension on the `Response`. It will also look for and use","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16903314,"byte_end":16903389,"line_start":692,"line_end":692,"column_start":5,"column_end":80}},{"value":"/ such an extension in any provided `Request`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16903394,"byte_end":16903442,"line_start":693,"line_end":693,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16903447,"byte_end":16903450,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ Since the relevant extension is still private, there is no way to","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16903455,"byte_end":16903524,"line_start":695,"line_end":695,"column_start":5,"column_end":74}},{"value":"/ interact with the original cases. The only effect this can have now is","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16903529,"byte_end":16903603,"line_start":696,"line_end":696,"column_start":5,"column_end":79}},{"value":"/ to forward the cases in a proxy-like fashion.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16903608,"byte_end":16903657,"line_start":697,"line_end":697,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16903662,"byte_end":16903665,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ Note that this setting does not affect HTTP/2.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16903670,"byte_end":16903720,"line_start":699,"line_end":699,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16903725,"byte_end":16903728,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16903733,"byte_end":16903754,"line_start":701,"line_end":701,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":4357},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16904118,"byte_end":16904143,"line_start":712,"line_end":712,"column_start":12,"column_end":37},"name":"http1_read_buf_exact_size","qualname":"<Builder>::http1_read_buf_exact_size","value":"pub fn http1_read_buf_exact_size(&mut Self, Option<usize>) -> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Sets the exact size of the read buffer to *always* use.","sig":null,"attributes":[{"value":"/ Sets the exact size of the read buffer to *always* use.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16903909,"byte_end":16903968,"line_start":707,"line_end":707,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16903973,"byte_end":16903976,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ Note that setting this option unsets the `http1_max_buf_size` option.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16903981,"byte_end":16904054,"line_start":709,"line_end":709,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16904059,"byte_end":16904062,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ Default is an adaptive read buffer.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16904067,"byte_end":16904106,"line_start":711,"line_end":711,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":4358},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16904710,"byte_end":16904728,"line_start":729,"line_end":729,"column_start":12,"column_end":30},"name":"http1_max_buf_size","qualname":"<Builder>::http1_max_buf_size","value":"pub fn http1_max_buf_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum buffer size for the connection.","sig":null,"attributes":[{"value":"/ Set the maximum buffer size for the connection.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16904295,"byte_end":16904346,"line_start":718,"line_end":718,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16904351,"byte_end":16904354,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ Default is ~400kb.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16904359,"byte_end":16904381,"line_start":720,"line_end":720,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16904386,"byte_end":16904389,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ Note that setting this option unsets the `http1_read_exact_buf_size` option.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16904394,"byte_end":16904474,"line_start":722,"line_end":722,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16904479,"byte_end":16904482,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16904487,"byte_end":16904499,"line_start":724,"line_end":724,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16904504,"byte_end":16904507,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ The minimum value allowed is 8192. This method panics if the passed `max` is less than the minimum.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16904512,"byte_end":16904615,"line_start":726,"line_end":726,"column_start":5,"column_end":108}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16904620,"byte_end":16904645,"line_start":727,"line_end":727,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4359},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16905374,"byte_end":16905384,"line_start":751,"line_end":751,"column_start":12,"column_end":22},"name":"http2_only","qualname":"<Builder>::http2_only","value":"pub fn http2_only(&mut Self, bool) -> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Sets whether HTTP2 is required.","sig":null,"attributes":[{"value":"/ Sets whether HTTP2 is required.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16905210,"byte_end":16905245,"line_start":746,"line_end":746,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16905250,"byte_end":16905253,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16905258,"byte_end":16905279,"line_start":748,"line_end":748,"column_start":5,"column_end":26}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16905284,"byte_end":16905309,"line_start":749,"line_end":749,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4360},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16905913,"byte_end":16905945,"line_start":768,"line_end":768,"column_start":12,"column_end":44},"name":"http2_initial_stream_window_size","qualname":"<Builder>::http2_initial_stream_window_size","value":"pub fn http2_initial_stream_window_size<impl Into<Option<u32>>: Into<Option<u32>>>(&mut Self,\n                                                                                   impl Into<Option<u32>>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for HTTP2\n stream-level flow control.","sig":null,"attributes":[{"value":"/ Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for HTTP2","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16905524,"byte_end":16905592,"line_start":758,"line_end":758,"column_start":5,"column_end":73}},{"value":"/ stream-level flow control.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16905597,"byte_end":16905627,"line_start":759,"line_end":759,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16905632,"byte_end":16905635,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ Passing `None` will do nothing.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16905640,"byte_end":16905675,"line_start":761,"line_end":761,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16905680,"byte_end":16905683,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ If not set, hyper will use a default.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16905688,"byte_end":16905729,"line_start":763,"line_end":763,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16905734,"byte_end":16905737,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://http2.github.io/http2-spec/#SETTINGS_INITIAL_WINDOW_SIZE","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16905742,"byte_end":16905818,"line_start":765,"line_end":765,"column_start":5,"column_end":81}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16905823,"byte_end":16905848,"line_start":766,"line_end":766,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4362},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16906439,"byte_end":16906475,"line_start":783,"line_end":783,"column_start":12,"column_end":48},"name":"http2_initial_connection_window_size","qualname":"<Builder>::http2_initial_connection_window_size","value":"pub fn http2_initial_connection_window_size<impl Into<Option<u32>>: Into<Option<u32>>>(&mut Self,\n                                                                                       impl Into<Option<u32>>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max connection-level flow control for HTTP2","sig":null,"attributes":[{"value":"/ Sets the max connection-level flow control for HTTP2","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16906186,"byte_end":16906242,"line_start":776,"line_end":776,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16906247,"byte_end":16906250,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ Passing `None` will do nothing.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16906255,"byte_end":16906290,"line_start":778,"line_end":778,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16906295,"byte_end":16906298,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ If not set, hyper will use a default.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16906303,"byte_end":16906344,"line_start":780,"line_end":780,"column_start":5,"column_end":46}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16906349,"byte_end":16906374,"line_start":781,"line_end":781,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4364},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16907038,"byte_end":16907059,"line_start":801,"line_end":801,"column_start":12,"column_end":33},"name":"http2_adaptive_window","qualname":"<Builder>::http2_adaptive_window","value":"pub fn http2_adaptive_window(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether to use an adaptive flow control.","sig":null,"attributes":[{"value":"/ Sets whether to use an adaptive flow control.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16906737,"byte_end":16906786,"line_start":794,"line_end":794,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16906791,"byte_end":16906794,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ Enabling this will override the limits set in","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16906799,"byte_end":16906848,"line_start":796,"line_end":796,"column_start":5,"column_end":54}},{"value":"/ `http2_initial_stream_window_size` and","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16906853,"byte_end":16906895,"line_start":797,"line_end":797,"column_start":5,"column_end":47}},{"value":"/ `http2_initial_connection_window_size`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16906900,"byte_end":16906943,"line_start":798,"line_end":798,"column_start":5,"column_end":48}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16906948,"byte_end":16906973,"line_start":799,"line_end":799,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4368},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16907643,"byte_end":16907663,"line_start":819,"line_end":819,"column_start":12,"column_end":32},"name":"http2_max_frame_size","qualname":"<Builder>::http2_max_frame_size","value":"pub fn http2_max_frame_size<impl Into<Option<u32>>: Into<Option<u32>>>(&mut Self,\n                                                                       impl Into<Option<u32>>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum frame size to use for HTTP2.","sig":null,"attributes":[{"value":"/ Sets the maximum frame size to use for HTTP2.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16907397,"byte_end":16907446,"line_start":812,"line_end":812,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16907451,"byte_end":16907454,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ Passing `None` will do nothing.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16907459,"byte_end":16907494,"line_start":814,"line_end":814,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16907499,"byte_end":16907502,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ If not set, hyper will use a default.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16907507,"byte_end":16907548,"line_start":816,"line_end":816,"column_start":5,"column_end":46}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16907553,"byte_end":16907578,"line_start":817,"line_end":817,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4370},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16908263,"byte_end":16908288,"line_start":839,"line_end":839,"column_start":12,"column_end":37},"name":"http2_keep_alive_interval","qualname":"<Builder>::http2_keep_alive_interval","value":"pub fn http2_keep_alive_interval<impl Into<Option<Duration>>: Into<Option<Duration>>>(&mut Self,\n                                                                                      impl Into<Option<Duration>>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets an interval for HTTP2 Ping frames should be sent to keep a\n connection alive.","sig":null,"attributes":[{"value":"/ Sets an interval for HTTP2 Ping frames should be sent to keep a","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16907839,"byte_end":16907906,"line_start":826,"line_end":826,"column_start":5,"column_end":72}},{"value":"/ connection alive.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16907911,"byte_end":16907932,"line_start":827,"line_end":827,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16907937,"byte_end":16907940,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ Pass `None` to disable HTTP2 keep-alive.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16907945,"byte_end":16907989,"line_start":829,"line_end":829,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16907994,"byte_end":16907997,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ Default is currently disabled.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16908002,"byte_end":16908036,"line_start":831,"line_end":831,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16908041,"byte_end":16908044,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ # Cargo Feature","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16908049,"byte_end":16908068,"line_start":833,"line_end":833,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16908073,"byte_end":16908076,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ Requires the `runtime` cargo feature to be enabled.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16908081,"byte_end":16908136,"line_start":835,"line_end":835,"column_start":5,"column_end":60}},{"value":"cfg(feature = \"runtime\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16908141,"byte_end":16908168,"line_start":836,"line_end":836,"column_start":5,"column_end":32}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16908173,"byte_end":16908198,"line_start":837,"line_end":837,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4372},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16908969,"byte_end":16908993,"line_start":860,"line_end":860,"column_start":12,"column_end":36},"name":"http2_keep_alive_timeout","qualname":"<Builder>::http2_keep_alive_timeout","value":"pub fn http2_keep_alive_timeout(&mut Self, Duration) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a timeout for receiving an acknowledgement of the keep-alive ping.","sig":null,"attributes":[{"value":"/ Sets a timeout for receiving an acknowledgement of the keep-alive ping.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16908464,"byte_end":16908539,"line_start":847,"line_end":847,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16908544,"byte_end":16908547,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ If the ping is not acknowledged within the timeout, the connection will","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16908552,"byte_end":16908627,"line_start":849,"line_end":849,"column_start":5,"column_end":80}},{"value":"/ be closed. Does nothing if `http2_keep_alive_interval` is disabled.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16908632,"byte_end":16908703,"line_start":850,"line_end":850,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16908708,"byte_end":16908711,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ Default is 20 seconds.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16908716,"byte_end":16908742,"line_start":852,"line_end":852,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16908747,"byte_end":16908750,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ # Cargo Feature","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16908755,"byte_end":16908774,"line_start":854,"line_end":854,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16908779,"byte_end":16908782,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ Requires the `runtime` cargo feature to be enabled.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16908787,"byte_end":16908842,"line_start":856,"line_end":856,"column_start":5,"column_end":60}},{"value":"cfg(feature = \"runtime\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16908847,"byte_end":16908874,"line_start":857,"line_end":857,"column_start":5,"column_end":32}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16908879,"byte_end":16908904,"line_start":858,"line_end":858,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4373},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16909705,"byte_end":16909732,"line_start":880,"line_end":880,"column_start":12,"column_end":39},"name":"http2_keep_alive_while_idle","qualname":"<Builder>::http2_keep_alive_while_idle","value":"pub fn http2_keep_alive_while_idle(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether HTTP2 keep-alive should apply while the connection is idle.","sig":null,"attributes":[{"value":"/ Sets whether HTTP2 keep-alive should apply while the connection is idle.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16909117,"byte_end":16909193,"line_start":865,"line_end":865,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16909198,"byte_end":16909201,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ If disabled, keep-alive pings are only sent while there are open","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16909206,"byte_end":16909274,"line_start":867,"line_end":867,"column_start":5,"column_end":73}},{"value":"/ request/responses streams. If enabled, pings are also sent when no","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16909279,"byte_end":16909349,"line_start":868,"line_end":868,"column_start":5,"column_end":75}},{"value":"/ streams are active. Does nothing if `http2_keep_alive_interval` is","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16909354,"byte_end":16909424,"line_start":869,"line_end":869,"column_start":5,"column_end":75}},{"value":"/ disabled.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16909429,"byte_end":16909442,"line_start":870,"line_end":870,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16909447,"byte_end":16909450,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ Default is `false`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16909455,"byte_end":16909478,"line_start":872,"line_end":872,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16909483,"byte_end":16909486,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ # Cargo Feature","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16909491,"byte_end":16909510,"line_start":874,"line_end":874,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16909515,"byte_end":16909518,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ Requires the `runtime` cargo feature to be enabled.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16909523,"byte_end":16909578,"line_start":876,"line_end":876,"column_start":5,"column_end":60}},{"value":"cfg(feature = \"runtime\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16909583,"byte_end":16909610,"line_start":877,"line_end":877,"column_start":5,"column_end":32}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16909615,"byte_end":16909640,"line_start":878,"line_end":878,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4374},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16910361,"byte_end":16910395,"line_start":895,"line_end":895,"column_start":12,"column_end":46},"name":"http2_max_concurrent_reset_streams","qualname":"<Builder>::http2_max_concurrent_reset_streams","value":"pub fn http2_max_concurrent_reset_streams(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of HTTP2 concurrent locally reset streams.","sig":null,"attributes":[{"value":"/ Sets the maximum number of HTTP2 concurrent locally reset streams.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16909855,"byte_end":16909925,"line_start":885,"line_end":885,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16909930,"byte_end":16909933,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ See the documentation of [`h2::client::Builder::max_concurrent_reset_streams`] for more","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16909938,"byte_end":16910029,"line_start":887,"line_end":887,"column_start":5,"column_end":96}},{"value":"/ details.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16910034,"byte_end":16910046,"line_start":888,"line_end":888,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16910051,"byte_end":16910054,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ The default value is determined by the `h2` crate.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16910059,"byte_end":16910113,"line_start":890,"line_end":890,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16910118,"byte_end":16910121,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ [`h2::client::Builder::max_concurrent_reset_streams`]: https://docs.rs/h2/client/struct.Builder.html#method.max_concurrent_reset_streams","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16910126,"byte_end":16910266,"line_start":892,"line_end":892,"column_start":5,"column_end":145}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16910271,"byte_end":16910296,"line_start":893,"line_end":893,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4375},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16910824,"byte_end":16910847,"line_start":909,"line_end":909,"column_start":12,"column_end":35},"name":"http2_max_send_buf_size","qualname":"<Builder>::http2_max_send_buf_size","value":"pub fn http2_max_send_buf_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum write buffer size for each HTTP/2 stream.","sig":null,"attributes":[{"value":"/ Set the maximum write buffer size for each HTTP/2 stream.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16910524,"byte_end":16910585,"line_start":900,"line_end":900,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16910590,"byte_end":16910593,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ Default is currently 1MB, but may change.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16910598,"byte_end":16910643,"line_start":902,"line_end":902,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16910648,"byte_end":16910651,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16910656,"byte_end":16910668,"line_start":904,"line_end":904,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16910673,"byte_end":16910676,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ The value must be no larger than `u32::MAX`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16910681,"byte_end":16910729,"line_start":906,"line_end":906,"column_start":5,"column_end":53}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16910734,"byte_end":16910759,"line_start":907,"line_end":907,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4376},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16911245,"byte_end":16911254,"line_start":920,"line_end":920,"column_start":12,"column_end":21},"name":"handshake","qualname":"<Builder>::handshake","value":"pub fn handshake<T, B>(&Self, T) -> /*impl Trait*/ where T: AsyncRead +\nAsyncWrite + Unpin + Send + 'static, B: HttpBody + 'static, B::Data: Send,\nB::Error: Into<Box<dyn StdError + Send + Sync>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a connection with the configured options and IO.\n See [`client::conn`](crate::client::conn) for more.","sig":null,"attributes":[{"value":"/ Constructs a connection with the configured options and IO.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16911010,"byte_end":16911073,"line_start":915,"line_end":915,"column_start":5,"column_end":68}},{"value":"/ See [`client::conn`](crate::client::conn) for more.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16911078,"byte_end":16911133,"line_start":916,"line_end":916,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16911138,"byte_end":16911141,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ Note, if [`Connection`] is not `await`-ed, [`SendRequest`] will","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16911146,"byte_end":16911213,"line_start":918,"line_end":918,"column_start":5,"column_end":72}},{"value":"/ do nothing.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16911218,"byte_end":16911233,"line_start":919,"line_end":919,"column_start":5,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":4747},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/service.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"service","qualname":"::client::service","value":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/service.rs","parent":null,"children":[{"krate":0,"index":4748},{"krate":0,"index":4751},{"krate":0,"index":4754},{"krate":0,"index":4755},{"krate":0,"index":4757},{"krate":0,"index":4760},{"krate":0,"index":4761},{"krate":0,"index":4764},{"krate":0,"index":4767},{"krate":0,"index":4768},{"krate":0,"index":4771},{"krate":0,"index":4772},{"krate":0,"index":4775},{"krate":0,"index":4778},{"krate":0,"index":4781},{"krate":0,"index":4782},{"krate":0,"index":4785},{"krate":0,"index":4924},{"krate":0,"index":4931},{"krate":0,"index":4788},{"krate":0,"index":4793}],"decl_id":null,"docs":" Utilities used to interact with the Tower ecosystem.","sig":null,"attributes":[{"value":"cfg(any(feature = \"http1\", feature = \"http2\"))","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/cfg.rs","byte_start":3218,"byte_end":3231,"line_start":7,"line_end":7,"column_start":13,"column_end":26}},{"value":"/ Utilities used to interact with the Tower ecosystem.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/service.rs","byte_start":16961834,"byte_end":16961890,"line_start":1,"line_end":1,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/service.rs","byte_start":16961891,"byte_end":16961894,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides `Connect` which hook-ins into the Tower ecosystem.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/service.rs","byte_start":16961895,"byte_end":16961970,"line_start":3,"line_end":3,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":4924},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/service.rs","byte_start":16962455,"byte_end":16962462,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"name":"Connect","qualname":"::client::service::Connect","value":"Connect {  }","parent":null,"children":[{"krate":0,"index":4928},{"krate":0,"index":4929},{"krate":0,"index":4930}],"decl_id":null,"docs":" Creates a connection via `SendRequest`.","sig":null,"attributes":[{"value":"/ Creates a connection via `SendRequest`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/service.rs","byte_start":16962233,"byte_end":16962276,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/service.rs","byte_start":16962277,"byte_end":16962280,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This accepts a `hyper::client::conn::Builder` and provides","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/service.rs","byte_start":16962281,"byte_end":16962343,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/ a `MakeService` implementation to create connections from some","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/service.rs","byte_start":16962344,"byte_end":16962410,"line_start":21,"line_end":21,"column_start":1,"column_end":67}},{"value":"/ target `T`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/service.rs","byte_start":16962411,"byte_end":16962426,"line_start":22,"line_end":22,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4792},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/service.rs","byte_start":16962684,"byte_end":16962687,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<Connect<C, B, T>>::new","value":"pub fn new(C, Builder) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Connect` with some inner connector `C` and a connection\n builder.\n","sig":null,"attributes":[{"value":"/ Create a new `Connect` with some inner connector `C` and a connection","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/service.rs","byte_start":16962582,"byte_end":16962655,"line_start":31,"line_end":31,"column_start":5,"column_end":78}},{"value":"/ builder.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/service.rs","byte_start":16962660,"byte_end":16962672,"line_start":32,"line_end":32,"column_start":5,"column_end":17}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/common/buf.rs","byte_start":5354,"byte_end":5361,"line_start":10,"line_end":10,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/common/buf.rs","byte_start":5763,"byte_end":5770,"line_start":30,"line_end":30,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/common/exec.rs","byte_start":10492,"byte_end":10496,"line_start":40,"line_end":40,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/common/exec.rs","byte_start":11121,"byte_end":11125,"line_start":64,"line_end":64,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/common/io/rewind.rs","byte_start":13744,"byte_end":13750,"line_start":16,"line_end":16,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/common/io/rewind.rs","byte_start":14528,"byte_end":14534,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/common/io/rewind.rs","byte_start":15432,"byte_end":15438,"line_start":75,"line_end":75,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/common/lazy.rs","byte_start":18553,"byte_end":18557,"line_start":38,"line_end":38,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/common/lazy.rs","byte_start":18804,"byte_end":18808,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":190},{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/common/never.rs","byte_start":19762,"byte_end":19767,"line_start":11,"line_end":11,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/common/never.rs","byte_start":19880,"byte_end":19885,"line_start":17,"line_end":17,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/common/sync_wrapper.rs","byte_start":21827,"byte_end":21838,"line_start":46,"line_end":46,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/common/sync_wrapper.rs","byte_start":24137,"byte_end":24148,"line_start":110,"line_end":110,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/common/watch.rs","byte_start":25482,"byte_end":25488,"line_start":50,"line_end":50,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/common/watch.rs","byte_start":25682,"byte_end":25688,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/common/watch.rs","byte_start":25757,"byte_end":25765,"line_start":64,"line_end":64,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":33306,"byte_end":33310,"line_start":118,"line_end":118,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":424},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":41062,"byte_end":41066,"line_start":351,"line_end":351,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":41192,"byte_end":41196,"line_start":359,"line_end":359,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":44082,"byte_end":44086,"line_start":440,"line_end":440,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":45402,"byte_end":45406,"line_start":487,"line_end":487,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":45621,"byte_end":45625,"line_start":498,"line_end":498,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":45753,"byte_end":45757,"line_start":505,"line_end":505,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":45900,"byte_end":45904,"line_start":512,"line_end":512,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":46120,"byte_end":46124,"line_start":522,"line_end":522,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":46259,"byte_end":46263,"line_start":529,"line_end":529,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":46415,"byte_end":46419,"line_start":536,"line_end":536,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":46617,"byte_end":46623,"line_start":546,"line_end":546,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":456},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":463},{"krate":0,"index":467},{"krate":0,"index":471},{"krate":0,"index":473},{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":49151,"byte_end":49157,"line_start":619,"line_end":619,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/length.rs","byte_start":53954,"byte_end":53967,"line_start":7,"line_end":7,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/length.rs","byte_start":54318,"byte_end":54331,"line_start":20,"line_end":20,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":495},{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/length.rs","byte_start":56372,"byte_end":56385,"line_start":83,"line_end":83,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/length.rs","byte_start":56737,"byte_end":56750,"line_start":93,"line_end":93,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":64410,"byte_end":64415,"line_start":149,"line_end":149,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":563},{"krate":0,"index":565},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":578},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":589},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":77195,"byte_end":77200,"line_start":492,"line_end":492,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":77492,"byte_end":77497,"line_start":503,"line_end":503,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":77772,"byte_end":77777,"line_start":513,"line_end":513,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":78009,"byte_end":78014,"line_start":523,"line_end":523,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":78129,"byte_end":78134,"line_start":530,"line_end":530,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":606},{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":78579,"byte_end":78584,"line_start":545,"line_end":545,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":79080,"byte_end":79085,"line_start":559,"line_end":559,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":79221,"byte_end":79226,"line_start":565,"line_end":565,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":79356,"byte_end":79361,"line_start":571,"line_end":571,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":79483,"byte_end":79488,"line_start":577,"line_end":577,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":79674,"byte_end":79679,"line_start":586,"line_end":586,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":79735,"byte_end":79743,"line_start":590,"line_end":590,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":79879,"byte_end":79887,"line_start":596,"line_end":596,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/ext.rs","byte_start":81363,"byte_end":81371,"line_start":21,"line_end":21,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/ext.rs","byte_start":81933,"byte_end":81941,"line_start":44,"line_end":44,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/ext.rs","byte_start":82114,"byte_end":82122,"line_start":53,"line_end":53,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/ext.rs","byte_start":82240,"byte_end":82248,"line_start":60,"line_end":60,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/ext.rs","byte_start":83094,"byte_end":83107,"line_start":91,"line_end":91,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":656},{"krate":0,"index":660},{"krate":0,"index":662},{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/http.rs","byte_start":87655,"byte_end":87656,"line_start":29,"line_end":29,"column_start":37,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/http.rs","byte_start":88193,"byte_end":88194,"line_start":49,"line_end":49,"column_start":40,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":89038,"byte_end":89039,"line_start":21,"line_end":21,"column_start":53,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":89112,"byte_end":89113,"line_start":23,"line_end":23,"column_start":44,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":770},{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":90751,"byte_end":90752,"line_start":66,"line_end":66,"column_start":69,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":91519,"byte_end":91520,"line_start":93,"line_end":93,"column_start":67,"column_end":68},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":92996,"byte_end":93009,"line_start":152,"line_end":152,"column_start":62,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":93466,"byte_end":93479,"line_start":171,"line_end":171,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":93820,"byte_end":93828,"line_start":186,"line_end":186,"column_start":23,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/oneshot.rs","byte_start":94831,"byte_end":94838,"line_start":44,"line_end":44,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":859},{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/util.rs","byte_start":96859,"byte_end":96868,"line_start":45,"line_end":45,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/util.rs","byte_start":97415,"byte_end":97424,"line_start":66,"line_end":66,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":914}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/util.rs","byte_start":97574,"byte_end":97583,"line_start":72,"line_end":72,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":918}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/util.rs","byte_start":97763,"byte_end":97772,"line_start":84,"line_end":84,"column_start":21,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":101877,"byte_end":101885,"line_start":121,"line_end":121,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1002},{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":102813,"byte_end":102821,"line_start":151,"line_end":151,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1007}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":103054,"byte_end":103062,"line_start":161,"line_end":161,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":103917,"byte_end":103925,"line_start":191,"line_end":191,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1015}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":104080,"byte_end":104089,"line_start":199,"line_end":199,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1017},{"krate":0,"index":1018}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":104289,"byte_end":104298,"line_start":210,"line_end":210,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1020},{"krate":0,"index":1021}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":104863,"byte_end":104872,"line_start":225,"line_end":225,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1024}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":105076,"byte_end":105083,"line_start":234,"line_end":234,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1026},{"krate":0,"index":1027}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":105812,"byte_end":105827,"line_start":258,"line_end":258,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1029}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":105978,"byte_end":105993,"line_start":264,"line_end":264,"column_start":19,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":106223,"byte_end":106224,"line_start":274,"line_end":274,"column_start":58,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":106895,"byte_end":106902,"line_start":302,"line_end":302,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1048}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":107363,"byte_end":107371,"line_start":318,"line_end":318,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1054}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/conn.rs","byte_start":16518493,"byte_end":16518497,"line_start":38,"line_end":38,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1991},{"krate":0,"index":1992},{"krate":0,"index":1993},{"krate":0,"index":1994},{"krate":0,"index":1995},{"krate":0,"index":1996},{"krate":0,"index":1997},{"krate":0,"index":1998},{"krate":0,"index":1999},{"krate":0,"index":2000},{"krate":0,"index":2001},{"krate":0,"index":2002},{"krate":0,"index":2003},{"krate":0,"index":2004},{"krate":0,"index":2005},{"krate":0,"index":2006},{"krate":0,"index":2007},{"krate":0,"index":2008},{"krate":0,"index":2009},{"krate":0,"index":2011},{"krate":0,"index":2012},{"krate":0,"index":2013},{"krate":0,"index":2014},{"krate":0,"index":2015},{"krate":0,"index":2016},{"krate":0,"index":2017},{"krate":0,"index":2019},{"krate":0,"index":2020},{"krate":0,"index":2021},{"krate":0,"index":2022},{"krate":0,"index":2023},{"krate":0,"index":2024},{"krate":0,"index":2025},{"krate":0,"index":2026},{"krate":0,"index":2027},{"krate":0,"index":2028},{"krate":0,"index":2029},{"krate":0,"index":2030},{"krate":0,"index":2031},{"krate":0,"index":2032},{"krate":0,"index":2033},{"krate":0,"index":2034},{"krate":0,"index":2035},{"krate":0,"index":2036},{"krate":0,"index":2037},{"krate":0,"index":2038},{"krate":0,"index":2039}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/conn.rs","byte_start":16545174,"byte_end":16545178,"line_start":795,"line_end":795,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2044}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/conn.rs","byte_start":16545450,"byte_end":16545454,"line_start":805,"line_end":805,"column_start":32,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/conn.rs","byte_start":16547349,"byte_end":16547354,"line_start":867,"line_end":867,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2075}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/conn.rs","byte_start":16547992,"byte_end":16547999,"line_start":890,"line_end":890,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2077}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/conn.rs","byte_start":16548389,"byte_end":16548391,"line_start":901,"line_end":901,"column_start":39,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2079}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/conn.rs","byte_start":16548663,"byte_end":16548665,"line_start":917,"line_end":917,"column_start":18,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2081}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/conn.rs","byte_start":16548724,"byte_end":16548726,"line_start":923,"line_end":923,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":2083},{"krate":0,"index":2084},{"krate":0,"index":2085},{"krate":0,"index":2086}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/conn.rs","byte_start":16548967,"byte_end":16548972,"line_start":941,"line_end":941,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2088},{"krate":0,"index":2089},{"krate":0,"index":2090},{"krate":0,"index":2091},{"krate":0,"index":2092},{"krate":0,"index":2094},{"krate":0,"index":2095},{"krate":0,"index":2096},{"krate":0,"index":2098},{"krate":0,"index":2099},{"krate":0,"index":2100},{"krate":0,"index":2101}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/decode.rs","byte_start":16567809,"byte_end":16567816,"line_start":66,"line_end":66,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2149},{"krate":0,"index":2150},{"krate":0,"index":2151},{"krate":0,"index":2152},{"krate":0,"index":2153},{"krate":0,"index":2154}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/decode.rs","byte_start":16571019,"byte_end":16571026,"line_start":164,"line_end":164,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2158}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/decode.rs","byte_start":16571496,"byte_end":16571508,"line_start":182,"line_end":182,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2161},{"krate":0,"index":2164},{"krate":0,"index":2167},{"krate":0,"index":2169},{"krate":0,"index":2171},{"krate":0,"index":2173},{"krate":0,"index":2175},{"krate":0,"index":2177},{"krate":0,"index":2179},{"krate":0,"index":2181},{"krate":0,"index":2183},{"krate":0,"index":2185}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/decode.rs","byte_start":16579672,"byte_end":16579686,"line_start":417,"line_end":417,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2188}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/decode.rs","byte_start":16579842,"byte_end":16579856,"line_start":423,"line_end":423,"column_start":19,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/dispatch.rs","byte_start":16592419,"byte_end":16592429,"line_start":60,"line_end":60,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2294},{"krate":0,"index":2295},{"krate":0,"index":2296},{"krate":0,"index":2298},{"krate":0,"index":2300},{"krate":0,"index":2301},{"krate":0,"index":2303},{"krate":0,"index":2304},{"krate":0,"index":2305},{"krate":0,"index":2308},{"krate":0,"index":2310},{"krate":0,"index":2311}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/dispatch.rs","byte_start":16605860,"byte_end":16605870,"line_start":407,"line_end":407,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2317},{"krate":0,"index":2318}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/dispatch.rs","byte_start":16606670,"byte_end":16606678,"line_start":434,"line_end":434,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2328},{"krate":0,"index":2329}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/dispatch.rs","byte_start":16606922,"byte_end":16606930,"line_start":444,"line_end":444,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2333}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/dispatch.rs","byte_start":16609852,"byte_end":16609858,"line_start":542,"line_end":542,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2901}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/dispatch.rs","byte_start":16610085,"byte_end":16610091,"line_start":552,"line_end":552,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2904},{"krate":0,"index":2905},{"krate":0,"index":2906},{"krate":0,"index":2907},{"krate":0,"index":2908},{"krate":0,"index":2909},{"krate":0,"index":2910},{"krate":0,"index":2911}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/encode.rs","byte_start":16618934,"byte_end":16618941,"line_start":51,"line_end":51,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2359},{"krate":0,"index":2360},{"krate":0,"index":2361},{"krate":0,"index":2362},{"krate":0,"index":2363},{"krate":0,"index":2364},{"krate":0,"index":2365},{"krate":0,"index":2367},{"krate":0,"index":2369},{"krate":0,"index":2374}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/encode.rs","byte_start":16624048,"byte_end":16624058,"line_start":218,"line_end":218,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2378},{"krate":0,"index":2379},{"krate":0,"index":2380},{"krate":0,"index":2381}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/encode.rs","byte_start":16625737,"byte_end":16625746,"line_start":279,"line_end":279,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2386}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/encode.rs","byte_start":16626083,"byte_end":16626092,"line_start":292,"line_end":292,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2392},{"krate":0,"index":2393},{"krate":0,"index":2394}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/encode.rs","byte_start":16626482,"byte_end":16626491,"line_start":310,"line_end":310,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2396}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/encode.rs","byte_start":16626742,"byte_end":16626751,"line_start":319,"line_end":319,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2398}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/encode.rs","byte_start":16627110,"byte_end":16627120,"line_start":330,"line_end":330,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2404}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/encode.rs","byte_start":16627266,"byte_end":16627276,"line_start":338,"line_end":338,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2407}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/encode.rs","byte_start":16627460,"byte_end":16627470,"line_start":346,"line_end":346,"column_start":62,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":2410}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/io.rs","byte_start":16631259,"byte_end":16631267,"line_start":48,"line_end":48,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2500}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/io.rs","byte_start":16631530,"byte_end":16631538,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2504},{"krate":0,"index":2505},{"krate":0,"index":2506},{"krate":0,"index":2507},{"krate":0,"index":2508},{"krate":0,"index":2509},{"krate":0,"index":2510},{"krate":0,"index":2511},{"krate":0,"index":2512},{"krate":0,"index":2513},{"krate":0,"index":2514},{"krate":0,"index":2516},{"krate":0,"index":2517},{"krate":0,"index":2518},{"krate":0,"index":2520},{"krate":0,"index":2521},{"krate":0,"index":2522},{"krate":0,"index":2523},{"krate":0,"index":2524},{"krate":0,"index":2527}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/io.rs","byte_start":16642795,"byte_end":16642803,"line_start":357,"line_end":357,"column_start":29,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/io.rs","byte_start":16643037,"byte_end":16643045,"line_start":364,"line_end":364,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2536}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/io.rs","byte_start":16643748,"byte_end":16643760,"line_start":391,"line_end":391,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2538},{"krate":0,"index":2539},{"krate":0,"index":2540},{"krate":0,"index":2541}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/io.rs","byte_start":16646005,"byte_end":16646017,"line_start":462,"line_end":462,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2545}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/io.rs","byte_start":16646221,"byte_end":16646227,"line_start":474,"line_end":474,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2548}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/io.rs","byte_start":16646341,"byte_end":16646347,"line_start":481,"line_end":481,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2550},{"krate":0,"index":2551}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/io.rs","byte_start":16647011,"byte_end":16647017,"line_start":506,"line_end":506,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2554}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/io.rs","byte_start":16647270,"byte_end":16647276,"line_start":515,"line_end":515,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2557},{"krate":0,"index":2558},{"krate":0,"index":2559}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/io.rs","byte_start":16647945,"byte_end":16647953,"line_start":543,"line_end":543,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2568}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/io.rs","byte_start":16648238,"byte_end":16648246,"line_start":554,"line_end":554,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2571},{"krate":0,"index":2572},{"krate":0,"index":2574},{"krate":0,"index":2575}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/io.rs","byte_start":16650130,"byte_end":16650138,"line_start":614,"line_end":614,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2578}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/io.rs","byte_start":16650392,"byte_end":16650400,"line_start":623,"line_end":623,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2581},{"krate":0,"index":2582},{"krate":0,"index":2583},{"krate":0,"index":2584}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/role.rs","byte_start":16695656,"byte_end":16695662,"line_start":890,"line_end":890,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2697},{"krate":0,"index":2698},{"krate":0,"index":2699},{"krate":0,"index":2700},{"krate":0,"index":2703},{"krate":0,"index":2704},{"krate":0,"index":2705}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/role.rs","byte_start":16704591,"byte_end":16704597,"line_start":1120,"line_end":1120,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2707},{"krate":0,"index":2708}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/role.rs","byte_start":16717072,"byte_end":16717081,"line_start":1442,"line_end":1442,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2721},{"krate":0,"index":2722}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/mod.rs","byte_start":16516908,"byte_end":16516913,"line_start":108,"line_end":108,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2753},{"krate":0,"index":2754},{"krate":0,"index":2755},{"krate":0,"index":2756},{"krate":0,"index":2757}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/ping.rs","byte_start":16503293,"byte_end":16503299,"line_start":198,"line_end":198,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1714}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/ping.rs","byte_start":16503640,"byte_end":16503648,"line_start":214,"line_end":214,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1716},{"krate":0,"index":1717},{"krate":0,"index":1718},{"krate":0,"index":1719}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/ping.rs","byte_start":16505666,"byte_end":16505672,"line_start":294,"line_end":294,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1721},{"krate":0,"index":1722}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/ping.rs","byte_start":16508322,"byte_end":16508328,"line_start":372,"line_end":372,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1724},{"krate":0,"index":1725},{"krate":0,"index":1726},{"krate":0,"index":1727}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/ping.rs","byte_start":16509220,"byte_end":16509223,"line_start":407,"line_end":407,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1730},{"krate":0,"index":1731}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/ping.rs","byte_start":16511146,"byte_end":16511155,"line_start":473,"line_end":473,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1735},{"krate":0,"index":1736},{"krate":0,"index":1737}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/ping.rs","byte_start":16513507,"byte_end":16513524,"line_start":537,"line_end":537,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1739}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/ping.rs","byte_start":16513704,"byte_end":16513721,"line_start":544,"line_end":544,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1741}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/ping.rs","byte_start":16513895,"byte_end":16513912,"line_start":551,"line_end":551,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1743}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/client.rs","byte_start":16759176,"byte_end":16759182,"line_start":58,"line_end":58,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3173}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/client.rs","byte_start":16763785,"byte_end":16763795,"line_start":208,"line_end":208,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3199}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/client.rs","byte_start":16763992,"byte_end":16764002,"line_start":217,"line_end":217,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3202},{"krate":0,"index":3203}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/mod.rs","byte_start":16486109,"byte_end":16486125,"line_start":99,"line_end":99,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1749}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/mod.rs","byte_start":16486375,"byte_end":16486391,"line_start":112,"line_end":112,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1752},{"krate":0,"index":1753}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/mod.rs","byte_start":16490999,"byte_end":16491009,"line_start":224,"line_end":224,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1760},{"krate":0,"index":1762}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/mod.rs","byte_start":16491628,"byte_end":16491635,"line_start":249,"line_end":249,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1775},{"krate":0,"index":1776},{"krate":0,"index":1777},{"krate":0,"index":1778}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/mod.rs","byte_start":16492721,"byte_end":16492731,"line_start":296,"line_end":296,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1788}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/mod.rs","byte_start":16494183,"byte_end":16494193,"line_start":336,"line_end":336,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1791},{"krate":0,"index":1793},{"krate":0,"index":1794}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/mod.rs","byte_start":16496495,"byte_end":16496513,"line_start":414,"line_end":414,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1802},{"krate":0,"index":1803},{"krate":0,"index":1804},{"krate":0,"index":1805},{"krate":0,"index":1806},{"krate":0,"index":1807}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/mod.rs","byte_start":16497741,"byte_end":16497749,"line_start":457,"line_end":457,"column_start":25,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/mod.rs","byte_start":16497773,"byte_end":16497781,"line_start":459,"line_end":459,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1817},{"krate":0,"index":1818},{"krate":0,"index":1819}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/mod.rs","byte_start":16482833,"byte_end":16482844,"line_start":62,"line_end":62,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1829}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16787213,"byte_end":16787217,"line_start":60,"line_end":60,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3437},{"krate":0,"index":3438}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16787425,"byte_end":16787429,"line_start":71,"line_end":71,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3440}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16787565,"byte_end":16787569,"line_start":77,"line_end":77,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3442}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16787702,"byte_end":16787706,"line_start":83,"line_end":83,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3444},{"krate":0,"index":3445}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16788023,"byte_end":16788039,"line_start":96,"line_end":96,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3447}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16788176,"byte_end":16788192,"line_start":102,"line_end":102,"column_start":16,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16788202,"byte_end":16788213,"line_start":104,"line_end":104,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3450}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16788348,"byte_end":16788359,"line_start":111,"line_end":111,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3452},{"krate":0,"index":3453},{"krate":0,"index":3454},{"krate":0,"index":3455},{"krate":0,"index":3456}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16788938,"byte_end":16788949,"line_start":132,"line_end":132,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3460}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16789069,"byte_end":16789078,"line_start":138,"line_end":138,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3462},{"krate":0,"index":3463}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16789706,"byte_end":16789715,"line_start":156,"line_end":156,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3466}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16789831,"byte_end":16789840,"line_start":162,"line_end":162,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3468}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16789923,"byte_end":16789931,"line_start":168,"line_end":168,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3470},{"krate":0,"index":3471}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16790065,"byte_end":16790073,"line_start":176,"line_end":176,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3473}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16790251,"byte_end":16790262,"line_start":186,"line_end":186,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3477},{"krate":0,"index":3478},{"krate":0,"index":3479},{"krate":0,"index":3481},{"krate":0,"index":3483},{"krate":0,"index":3484}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16792237,"byte_end":16792248,"line_start":248,"line_end":248,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3486},{"krate":0,"index":3487}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16794881,"byte_end":16794882,"line_start":335,"line_end":335,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3517},{"krate":0,"index":3518},{"krate":0,"index":3519},{"krate":0,"index":3520},{"krate":0,"index":3521}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16800216,"byte_end":16800229,"line_start":87,"line_end":87,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3626}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16800767,"byte_end":16800780,"line_start":106,"line_end":106,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3629},{"krate":0,"index":3630},{"krate":0,"index":3631},{"krate":0,"index":3632},{"krate":0,"index":3633},{"krate":0,"index":3634},{"krate":0,"index":3635},{"krate":0,"index":3636},{"krate":0,"index":3637},{"krate":0,"index":3638},{"krate":0,"index":3639},{"krate":0,"index":3640}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16805524,"byte_end":16805537,"line_start":247,"line_end":247,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3646}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16805704,"byte_end":16805717,"line_start":253,"line_end":253,"column_start":41,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3649},{"krate":0,"index":3650},{"krate":0,"index":3651},{"krate":0,"index":3652},{"krate":0,"index":3653}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16807445,"byte_end":16807458,"line_start":321,"line_end":321,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3659}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16808614,"byte_end":16808623,"line_start":360,"line_end":360,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3664}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16808876,"byte_end":16808884,"line_start":371,"line_end":371,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3666}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16809694,"byte_end":16809708,"line_start":396,"line_end":396,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3671},{"krate":0,"index":3672}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16810044,"byte_end":16810056,"line_start":410,"line_end":410,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3677},{"krate":0,"index":3680},{"krate":0,"index":3682}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16810700,"byte_end":16810712,"line_start":438,"line_end":438,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3688}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16811042,"byte_end":16811054,"line_start":451,"line_end":451,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3690}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16811292,"byte_end":16811304,"line_start":463,"line_end":463,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3692}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16811567,"byte_end":16811580,"line_start":475,"line_end":475,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3701}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16812976,"byte_end":16812995,"line_start":516,"line_end":516,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3709}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16813248,"byte_end":16813267,"line_start":527,"line_end":527,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3712}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16818295,"byte_end":16818308,"line_start":669,"line_end":669,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3746}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16777365,"byte_end":16777374,"line_start":126,"line_end":126,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3277},{"krate":0,"index":3278},{"krate":0,"index":3279},{"krate":0,"index":3280},{"krate":0,"index":3282},{"krate":0,"index":3283},{"krate":0,"index":3284},{"krate":0,"index":3285}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16779677,"byte_end":16779682,"line_start":206,"line_end":206,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3287}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16779787,"byte_end":16779792,"line_start":212,"line_end":212,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3289}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16779889,"byte_end":16779894,"line_start":218,"line_end":218,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3291}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16780425,"byte_end":16780438,"line_start":235,"line_end":235,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3297},{"krate":0,"index":3298}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16780734,"byte_end":16780744,"line_start":250,"line_end":250,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3306}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16780867,"byte_end":16780877,"line_start":256,"line_end":256,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3309},{"krate":0,"index":3310}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16782577,"byte_end":16782578,"line_start":307,"line_end":307,"column_start":28,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3346},{"krate":0,"index":3347}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16783032,"byte_end":16783033,"line_start":321,"line_end":321,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3351},{"krate":0,"index":3352},{"krate":0,"index":3353},{"krate":0,"index":3354}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16783556,"byte_end":16783557,"line_start":337,"line_end":337,"column_start":27,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16831775,"byte_end":16831781,"line_start":54,"line_end":54,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3995}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16832264,"byte_end":16832270,"line_start":69,"line_end":69,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3997}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16832380,"byte_end":16832386,"line_start":75,"line_end":75,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3999}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16832999,"byte_end":16833005,"line_start":101,"line_end":101,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4003},{"krate":0,"index":4004},{"krate":0,"index":4005},{"krate":0,"index":4008},{"krate":0,"index":4017},{"krate":0,"index":4023}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16849791,"byte_end":16849797,"line_start":523,"line_end":523,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4033},{"krate":0,"index":4034},{"krate":0,"index":4035},{"krate":0,"index":4036},{"krate":0,"index":4037}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16850865,"byte_end":16850871,"line_start":563,"line_end":563,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4049}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16851158,"byte_end":16851164,"line_start":574,"line_end":574,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4053}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16851328,"byte_end":16851342,"line_start":582,"line_end":582,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4055},{"krate":0,"index":4057}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16851812,"byte_end":16851826,"line_start":600,"line_end":600,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4059}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16851951,"byte_end":16851965,"line_start":606,"line_end":606,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4061},{"krate":0,"index":4062}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16852510,"byte_end":16852520,"line_start":629,"line_end":629,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4077},{"krate":0,"index":4078},{"krate":0,"index":4079},{"krate":0,"index":4080},{"krate":0,"index":4081}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16853523,"byte_end":16853533,"line_start":667,"line_end":667,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4084}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16854168,"byte_end":16854178,"line_start":686,"line_end":686,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4088},{"krate":0,"index":4089},{"krate":0,"index":4090}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16855497,"byte_end":16855508,"line_start":737,"line_end":737,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4102}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16860308,"byte_end":16860315,"line_start":900,"line_end":900,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4123}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16860762,"byte_end":16860769,"line_start":917,"line_end":917,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4125},{"krate":0,"index":4126},{"krate":0,"index":4128},{"krate":0,"index":4130},{"krate":0,"index":4131},{"krate":0,"index":4132},{"krate":0,"index":4133},{"krate":0,"index":4134},{"krate":0,"index":4135},{"krate":0,"index":4136},{"krate":0,"index":4137},{"krate":0,"index":4138},{"krate":0,"index":4139},{"krate":0,"index":4140},{"krate":0,"index":4141},{"krate":0,"index":4143},{"krate":0,"index":4145},{"krate":0,"index":4146},{"krate":0,"index":4148},{"krate":0,"index":4150},{"krate":0,"index":4151},{"krate":0,"index":4152},{"krate":0,"index":4153},{"krate":0,"index":4154},{"krate":0,"index":4155},{"krate":0,"index":4156},{"krate":0,"index":4158},{"krate":0,"index":4160}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16876413,"byte_end":16876420,"line_start":1348,"line_end":1348,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4164}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16886735,"byte_end":16886746,"line_start":222,"line_end":222,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4289},{"krate":0,"index":4290},{"krate":0,"index":4294},{"krate":0,"index":4295},{"krate":0,"index":4296}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16887678,"byte_end":16887689,"line_start":255,"line_end":255,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4299},{"krate":0,"index":4300}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16890620,"byte_end":16890631,"line_start":340,"line_end":340,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4305},{"krate":0,"index":4306},{"krate":0,"index":4307},{"krate":0,"index":4308},{"krate":0,"index":4309}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16891020,"byte_end":16891031,"line_start":357,"line_end":357,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4312}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16891222,"byte_end":16891238,"line_start":366,"line_end":366,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4315},{"krate":0,"index":4316}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16891450,"byte_end":16891466,"line_start":377,"line_end":377,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4319}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16892518,"byte_end":16892534,"line_start":409,"line_end":409,"column_start":24,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4324}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16892708,"byte_end":16892724,"line_start":416,"line_end":416,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4327}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16892888,"byte_end":16892898,"line_start":426,"line_end":426,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4331},{"krate":0,"index":4332},{"krate":0,"index":4334},{"krate":0,"index":4337}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16896418,"byte_end":16896428,"line_start":509,"line_end":509,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4341},{"krate":0,"index":4342}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16897402,"byte_end":16897412,"line_start":537,"line_end":537,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4346}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16897661,"byte_end":16897668,"line_start":549,"line_end":549,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4348},{"krate":0,"index":4349},{"krate":0,"index":4351},{"krate":0,"index":4352},{"krate":0,"index":4353},{"krate":0,"index":4354},{"krate":0,"index":4355},{"krate":0,"index":4356},{"krate":0,"index":4357},{"krate":0,"index":4358},{"krate":0,"index":4359},{"krate":0,"index":4360},{"krate":0,"index":4362},{"krate":0,"index":4364},{"krate":0,"index":4368},{"krate":0,"index":4370},{"krate":0,"index":4372},{"krate":0,"index":4373},{"krate":0,"index":4374},{"krate":0,"index":4375},{"krate":0,"index":4376}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16913764,"byte_end":16913778,"line_start":990,"line_end":990,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4382},{"krate":0,"index":4383}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16914549,"byte_end":16914563,"line_start":1010,"line_end":1010,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4386}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16914737,"byte_end":16914748,"line_start":1018,"line_end":1018,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4390},{"krate":0,"index":4391}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16915646,"byte_end":16915657,"line_start":1048,"line_end":1048,"column_start":34,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16915718,"byte_end":16915728,"line_start":1051,"line_end":1051,"column_start":39,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16915911,"byte_end":16915921,"line_start":1060,"line_end":1060,"column_start":57,"column_end":67},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16916089,"byte_end":16916096,"line_start":1069,"line_end":1069,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16916136,"byte_end":16916150,"line_start":1072,"line_end":1072,"column_start":21,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/dispatch.rs","byte_start":16918035,"byte_end":16918041,"line_start":55,"line_end":55,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4450},{"krate":0,"index":4452},{"krate":0,"index":4453},{"krate":0,"index":4454},{"krate":0,"index":4455},{"krate":0,"index":4458},{"krate":0,"index":4461}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/dispatch.rs","byte_start":16919854,"byte_end":16919869,"line_start":115,"line_end":115,"column_start":12,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4465},{"krate":0,"index":4466},{"krate":0,"index":4467}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/dispatch.rs","byte_start":16920417,"byte_end":16920432,"line_start":134,"line_end":134,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4473}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/dispatch.rs","byte_start":16920719,"byte_end":16920727,"line_start":148,"line_end":148,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4482},{"krate":0,"index":4484},{"krate":0,"index":4485}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/dispatch.rs","byte_start":16921567,"byte_end":16921575,"line_start":179,"line_end":179,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4489}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/dispatch.rs","byte_start":16921820,"byte_end":16921828,"line_start":189,"line_end":189,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4498}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/dispatch.rs","byte_start":16922240,"byte_end":16922248,"line_start":205,"line_end":205,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4511},{"krate":0,"index":4512},{"krate":0,"index":4513},{"krate":0,"index":4515}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16932026,"byte_end":16932032,"line_start":98,"line_end":98,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4633}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16932133,"byte_end":16932137,"line_start":104,"line_end":104,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4636},{"krate":0,"index":4637}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16933323,"byte_end":16933327,"line_start":142,"line_end":142,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4640},{"krate":0,"index":4641},{"krate":0,"index":4642},{"krate":0,"index":4643}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16938219,"byte_end":16938229,"line_start":281,"line_end":281,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4652}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16939772,"byte_end":16939781,"line_start":323,"line_end":323,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4655},{"krate":0,"index":4656},{"krate":0,"index":4657}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16943551,"byte_end":16943560,"line_start":429,"line_end":429,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4660}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16944211,"byte_end":16944220,"line_start":447,"line_end":447,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4664}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16945198,"byte_end":16945202,"line_start":478,"line_end":478,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4669}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16945608,"byte_end":16945614,"line_start":495,"line_end":495,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4678},{"krate":0,"index":4679},{"krate":0,"index":4680},{"krate":0,"index":4681}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16945993,"byte_end":16945999,"line_start":513,"line_end":513,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4684},{"krate":0,"index":4685}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16946116,"byte_end":16946122,"line_start":520,"line_end":520,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4688}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16946226,"byte_end":16946232,"line_start":526,"line_end":526,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4691}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16947020,"byte_end":16947026,"line_start":548,"line_end":548,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4694}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16947527,"byte_end":16947548,"line_start":570,"line_end":570,"column_start":19,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16947575,"byte_end":16947596,"line_start":572,"line_end":572,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4706}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16947746,"byte_end":16947754,"line_start":578,"line_end":578,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4709},{"krate":0,"index":4710}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16950632,"byte_end":16950640,"line_start":657,"line_end":657,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4716},{"krate":0,"index":4717}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16951316,"byte_end":16951324,"line_start":677,"line_end":677,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4720}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16951856,"byte_end":16951866,"line_start":695,"line_end":695,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4728}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16952143,"byte_end":16952153,"line_start":706,"line_end":706,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4731}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16952462,"byte_end":16952472,"line_start":719,"line_end":719,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4736},{"krate":0,"index":4737}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16953405,"byte_end":16953413,"line_start":748,"line_end":748,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4740},{"krate":0,"index":4741}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16954327,"byte_end":16954334,"line_start":777,"line_end":777,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4744},{"krate":0,"index":4745},{"krate":0,"index":4746}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/service.rs","byte_start":16962559,"byte_end":16962566,"line_start":30,"line_end":30,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4792}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/service.rs","byte_start":16962859,"byte_end":16962866,"line_start":42,"line_end":42,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4797},{"krate":0,"index":4798},{"krate":0,"index":4799},{"krate":0,"index":4800},{"krate":0,"index":4802}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":2619,"byte_end":2623,"line_start":77,"line_end":77,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":282}},{"kind":"Mod","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":2644,"byte_end":2647,"line_start":79,"line_end":79,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":623}},{"kind":"Mod","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":2680,"byte_end":2682,"line_start":82,"line_end":82,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":665}},{"kind":"Mod","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":2692,"byte_end":2699,"line_start":83,"line_end":83,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":669}},{"kind":"Mod","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":2709,"byte_end":2716,"line_start":84,"line_end":84,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":941}},{"kind":"Mod","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/lib.rs","byte_start":2860,"byte_end":2866,"line_start":97,"line_end":97,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":3260}},{"kind":"Mod","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16773770,"byte_end":16773777,"line_start":54,"line_end":54,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":3264}},{"kind":"Mod","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16776628,"byte_end":16776631,"line_start":91,"line_end":91,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":3371}},{"kind":"Mod","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16773986,"byte_end":16773990,"line_start":64,"line_end":64,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":4165}},{"kind":"Mod","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/mod.rs","byte_start":16774047,"byte_end":16774054,"line_start":67,"line_end":67,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":4747}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/common/buf.rs","byte_start":5354,"byte_end":5361,"line_start":10,"line_end":10,"column_start":14,"column_end":21},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":66},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/common/buf.rs","byte_start":5763,"byte_end":5770,"line_start":30,"line_end":30,"column_start":22,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":66},"to":{"krate":22,"index":42}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/common/exec.rs","byte_start":10492,"byte_end":10496,"line_start":40,"line_end":40,"column_start":6,"column_end":10},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/common/exec.rs","byte_start":11121,"byte_end":11125,"line_start":64,"line_end":64,"column_start":21,"column_end":25},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1060},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/common/io/rewind.rs","byte_start":13744,"byte_end":13750,"line_start":16,"line_end":16,"column_start":9,"column_end":15},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/common/io/rewind.rs","byte_start":14528,"byte_end":14534,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1068},"to":{"krate":24,"index":199}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/common/io/rewind.rs","byte_start":15432,"byte_end":15438,"line_start":75,"line_end":75,"column_start":24,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1068},"to":{"krate":24,"index":278}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/common/lazy.rs","byte_start":17921,"byte_end":17927,"line_start":5,"line_end":5,"column_start":27,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":12915},"to":{"krate":0,"index":178}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/common/lazy.rs","byte_start":18553,"byte_end":18557,"line_start":38,"line_end":38,"column_start":24,"column_end":28},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1075},"to":{"krate":0,"index":178}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/common/lazy.rs","byte_start":18804,"byte_end":18808,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1075},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/common/never.rs","byte_start":19762,"byte_end":19767,"line_start":11,"line_end":11,"column_start":23,"column_end":28},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1169},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/common/never.rs","byte_start":19880,"byte_end":19885,"line_start":17,"line_end":17,"column_start":16,"column_end":21},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1169},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/common/sync_wrapper.rs","byte_start":21827,"byte_end":21838,"line_start":46,"line_end":46,"column_start":9,"column_end":20},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":204},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/common/sync_wrapper.rs","byte_start":24137,"byte_end":24148,"line_start":110,"line_end":110,"column_start":31,"column_end":42},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":204},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/common/watch.rs","byte_start":25482,"byte_end":25488,"line_start":50,"line_end":50,"column_start":6,"column_end":12},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":248},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/common/watch.rs","byte_start":25682,"byte_end":25688,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":248},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/common/watch.rs","byte_start":25757,"byte_end":25765,"line_start":64,"line_end":64,"column_start":6,"column_end":14},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":250},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":33306,"byte_end":33310,"line_start":118,"line_end":118,"column_start":6,"column_end":10},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":41062,"byte_end":41066,"line_start":351,"line_end":351,"column_start":18,"column_end":22},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":383},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":41192,"byte_end":41196,"line_start":359,"line_end":359,"column_start":19,"column_end":23},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":383},"to":{"krate":36,"index":406}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":44082,"byte_end":44086,"line_start":440,"line_end":440,"column_start":21,"column_end":25},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":383},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":45402,"byte_end":45406,"line_start":487,"line_end":487,"column_start":22,"column_end":26},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":383},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":45621,"byte_end":45625,"line_start":498,"line_end":498,"column_start":24,"column_end":28},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":383},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":45753,"byte_end":45757,"line_start":505,"line_end":505,"column_start":30,"column_end":34},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":383},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":45900,"byte_end":45904,"line_start":512,"line_end":512,"column_start":35,"column_end":39},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":383},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":46120,"byte_end":46124,"line_start":522,"line_end":522,"column_start":23,"column_end":27},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":383},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":46259,"byte_end":46263,"line_start":529,"line_end":529,"column_start":29,"column_end":33},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":383},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":46415,"byte_end":46419,"line_start":536,"line_end":536,"column_start":34,"column_end":38},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":383},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":46617,"byte_end":46623,"line_start":546,"line_end":546,"column_start":6,"column_end":12},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":409},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/body.rs","byte_start":49151,"byte_end":49157,"line_start":619,"line_end":619,"column_start":21,"column_end":27},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":409},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/length.rs","byte_start":53954,"byte_end":53967,"line_start":7,"line_end":7,"column_start":28,"column_end":41},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1198},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/length.rs","byte_start":54318,"byte_end":54331,"line_start":20,"line_end":20,"column_start":6,"column_end":19},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1198},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/length.rs","byte_start":56372,"byte_end":56385,"line_start":83,"line_end":83,"column_start":21,"column_end":34},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1198},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/body/length.rs","byte_start":56737,"byte_end":56750,"line_start":93,"line_end":93,"column_start":23,"column_end":36},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1198},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":64410,"byte_end":64415,"line_start":149,"line_end":149,"column_start":6,"column_end":11},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":543},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":77195,"byte_end":77200,"line_start":492,"line_end":492,"column_start":21,"column_end":26},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":543},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":77492,"byte_end":77497,"line_start":503,"line_end":503,"column_start":23,"column_end":28},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":543},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":77772,"byte_end":77777,"line_start":513,"line_end":513,"column_start":19,"column_end":24},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":543},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":78009,"byte_end":78014,"line_start":523,"line_end":523,"column_start":22,"column_end":27},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":543},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":78129,"byte_end":78134,"line_start":530,"line_end":530,"column_start":6,"column_end":11},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1261},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":78579,"byte_end":78584,"line_start":545,"line_end":545,"column_start":32,"column_end":37},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1261},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":79080,"byte_end":79085,"line_start":559,"line_end":559,"column_start":44,"column_end":49},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1261},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":79221,"byte_end":79226,"line_start":565,"line_end":565,"column_start":48,"column_end":53},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1261},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":79356,"byte_end":79361,"line_start":571,"line_end":571,"column_start":38,"column_end":43},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1261},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":79483,"byte_end":79488,"line_start":577,"line_end":577,"column_start":43,"column_end":48},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1261},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":79610,"byte_end":79614,"line_start":584,"line_end":584,"column_start":23,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":3019},"to":{"krate":0,"index":618}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":79617,"byte_end":79621,"line_start":584,"line_end":584,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":3031},"to":{"krate":0,"index":618}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":79674,"byte_end":79679,"line_start":586,"line_end":586,"column_start":25,"column_end":30},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":543},"to":{"krate":0,"index":618}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":79735,"byte_end":79743,"line_start":590,"line_end":590,"column_start":23,"column_end":31},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1309},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/error.rs","byte_start":79879,"byte_end":79887,"line_start":596,"line_end":596,"column_start":19,"column_end":27},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1309},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/ext.rs","byte_start":81363,"byte_end":81371,"line_start":21,"line_end":21,"column_start":6,"column_end":14},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1313},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/ext.rs","byte_start":81933,"byte_end":81941,"line_start":44,"line_end":44,"column_start":28,"column_end":36},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1313},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/ext.rs","byte_start":82114,"byte_end":82122,"line_start":53,"line_end":53,"column_start":22,"column_end":30},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1313},"to":{"krate":2,"index":2916}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/ext.rs","byte_start":82240,"byte_end":82248,"line_start":60,"line_end":60,"column_start":21,"column_end":29},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1313},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/ext.rs","byte_start":83094,"byte_end":83107,"line_start":91,"line_end":91,"column_start":6,"column_end":19},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1324},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/http.rs","byte_start":86867,"byte_end":86873,"line_start":8,"line_end":8,"column_start":41,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":718},"to":{"krate":0,"index":697}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/http.rs","byte_start":87655,"byte_end":87656,"line_start":29,"line_end":29,"column_start":37,"column_end":38},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":705},"to":{"krate":0,"index":697}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/http.rs","byte_start":88193,"byte_end":88194,"line_start":49,"line_end":49,"column_start":40,"column_end":41},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":714},"to":{"krate":0,"index":718}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":88670,"byte_end":88676,"line_start":12,"line_end":12,"column_start":49,"column_end":55},"kind":"SuperTrait","from":{"krate":0,"index":828},"to":{"krate":0,"index":754}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":89038,"byte_end":89039,"line_start":21,"line_end":21,"column_start":53,"column_end":54},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":762},"to":{"krate":0,"index":828}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":89112,"byte_end":89113,"line_start":23,"line_end":23,"column_start":44,"column_end":45},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":765},"to":{"krate":0,"index":754}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":89693,"byte_end":89699,"line_start":43,"line_end":43,"column_start":58,"column_end":64},"kind":"SuperTrait","from":{"krate":0,"index":828},"to":{"krate":0,"index":772}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":90751,"byte_end":90752,"line_start":66,"line_end":66,"column_start":69,"column_end":70},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":784},"to":{"krate":0,"index":772}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":91519,"byte_end":91520,"line_start":93,"line_end":93,"column_start":67,"column_end":68},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":802},"to":{"krate":0,"index":828}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":92996,"byte_end":93009,"line_start":152,"line_end":152,"column_start":62,"column_end":75},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1331},"to":{"krate":41,"index":13}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":93466,"byte_end":93479,"line_start":171,"line_end":171,"column_start":24,"column_end":37},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1331},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/make.rs","byte_start":93820,"byte_end":93828,"line_start":186,"line_end":186,"column_start":23,"column_end":31},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":831},"to":{"krate":0,"index":830}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/oneshot.rs","byte_start":94831,"byte_end":94838,"line_start":44,"line_end":44,"column_start":25,"column_end":32},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1339},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/util.rs","byte_start":96859,"byte_end":96868,"line_start":45,"line_end":45,"column_start":9,"column_end":18},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":895},"to":{"krate":41,"index":13}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/util.rs","byte_start":97415,"byte_end":97424,"line_start":66,"line_end":66,"column_start":27,"column_end":36},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":895},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/util.rs","byte_start":97574,"byte_end":97583,"line_start":72,"line_end":72,"column_start":22,"column_end":31},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":895},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/service/util.rs","byte_start":97763,"byte_end":97772,"line_start":84,"line_end":84,"column_start":21,"column_end":30},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":895},"to":{"krate":2,"index":3029}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":101877,"byte_end":101885,"line_start":121,"line_end":121,"column_start":6,"column_end":14},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":992},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":102813,"byte_end":102821,"line_start":151,"line_end":151,"column_start":20,"column_end":28},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":992},"to":{"krate":24,"index":199}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":103054,"byte_end":103062,"line_start":161,"line_end":161,"column_start":21,"column_end":29},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":992},"to":{"krate":24,"index":278}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":103917,"byte_end":103925,"line_start":191,"line_end":191,"column_start":21,"column_end":29},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":992},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":104080,"byte_end":104089,"line_start":199,"line_end":199,"column_start":6,"column_end":15},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":994},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":104289,"byte_end":104298,"line_start":210,"line_end":210,"column_start":17,"column_end":26},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":994},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":104863,"byte_end":104872,"line_start":225,"line_end":225,"column_start":21,"column_end":30},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":994},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":105076,"byte_end":105083,"line_start":234,"line_end":234,"column_start":6,"column_end":13},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":998},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":105812,"byte_end":105827,"line_start":258,"line_end":258,"column_start":23,"column_end":38},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1482},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":105978,"byte_end":105993,"line_start":264,"line_end":264,"column_start":19,"column_end":34},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1482},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":106043,"byte_end":106052,"line_start":268,"line_end":268,"column_start":22,"column_end":31},"kind":"SuperTrait","from":{"krate":24,"index":199},"to":{"krate":0,"index":1031}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":106055,"byte_end":106065,"line_start":268,"line_end":268,"column_start":34,"column_end":44},"kind":"SuperTrait","from":{"krate":24,"index":278},"to":{"krate":0,"index":1031}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":106068,"byte_end":106073,"line_start":268,"line_end":268,"column_start":47,"column_end":52},"kind":"SuperTrait","from":{"krate":2,"index":3060},"to":{"krate":0,"index":1031}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":106223,"byte_end":106224,"line_start":274,"line_end":274,"column_start":58,"column_end":59},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1034},"to":{"krate":0,"index":1031}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":106895,"byte_end":106902,"line_start":302,"line_end":302,"column_start":34,"column_end":41},"kind":{"Impl":{"id":77}},"from":{"krate":20,"index":1358},"to":{"krate":0,"index":1044}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/upgrade.rs","byte_start":107363,"byte_end":107371,"line_start":318,"line_end":318,"column_start":34,"column_end":42},"kind":{"Impl":{"id":78}},"from":{"krate":20,"index":1491},"to":{"krate":0,"index":1044}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/conn.rs","byte_start":16518493,"byte_end":16518497,"line_start":38,"line_end":38,"column_start":15,"column_end":19},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1980},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/conn.rs","byte_start":16545174,"byte_end":16545178,"line_start":795,"line_end":795,"column_start":35,"column_end":39},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1980},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/conn.rs","byte_start":16545450,"byte_end":16545454,"line_start":805,"line_end":805,"column_start":32,"column_end":36},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1980},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/conn.rs","byte_start":16547349,"byte_end":16547354,"line_start":867,"line_end":867,"column_start":21,"column_end":26},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2049},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/conn.rs","byte_start":16547992,"byte_end":16547999,"line_start":890,"line_end":890,"column_start":21,"column_end":28},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2064},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/conn.rs","byte_start":16548389,"byte_end":16548391,"line_start":901,"line_end":901,"column_start":39,"column_end":41},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2779},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/conn.rs","byte_start":16548663,"byte_end":16548665,"line_start":917,"line_end":917,"column_start":18,"column_end":20},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2779},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/conn.rs","byte_start":16548724,"byte_end":16548726,"line_start":923,"line_end":923,"column_start":6,"column_end":8},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2779},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/conn.rs","byte_start":16548967,"byte_end":16548972,"line_start":941,"line_end":941,"column_start":6,"column_end":11},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2049},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/decode.rs","byte_start":16567809,"byte_end":16567816,"line_start":66,"line_end":66,"column_start":6,"column_end":13},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2791},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/decode.rs","byte_start":16571019,"byte_end":16571026,"line_start":164,"line_end":164,"column_start":21,"column_end":28},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2791},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/decode.rs","byte_start":16571496,"byte_end":16571508,"line_start":182,"line_end":182,"column_start":6,"column_end":18},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2819},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/decode.rs","byte_start":16579672,"byte_end":16579686,"line_start":417,"line_end":417,"column_start":23,"column_end":37},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2852},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/decode.rs","byte_start":16579842,"byte_end":16579856,"line_start":423,"line_end":423,"column_start":19,"column_end":33},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2852},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/dispatch.rs","byte_start":16592419,"byte_end":16592429,"line_start":60,"line_end":60,"column_start":19,"column_end":29},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2270},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/dispatch.rs","byte_start":16605860,"byte_end":16605870,"line_start":407,"line_end":407,"column_start":30,"column_end":40},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2270},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/dispatch.rs","byte_start":16606670,"byte_end":16606678,"line_start":434,"line_end":434,"column_start":13,"column_end":21},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/dispatch.rs","byte_start":16606922,"byte_end":16606930,"line_start":444,"line_end":444,"column_start":22,"column_end":30},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2319},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/dispatch.rs","byte_start":16609852,"byte_end":16609858,"line_start":542,"line_end":542,"column_start":13,"column_end":19},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2858},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/dispatch.rs","byte_start":16610085,"byte_end":16610091,"line_start":552,"line_end":552,"column_start":26,"column_end":32},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2858},"to":{"krate":0,"index":2280}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/encode.rs","byte_start":16618934,"byte_end":16618941,"line_start":51,"line_end":51,"column_start":6,"column_end":13},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2912},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/encode.rs","byte_start":16624048,"byte_end":16624058,"line_start":218,"line_end":218,"column_start":17,"column_end":27},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2923},"to":{"krate":22,"index":42}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/encode.rs","byte_start":16625737,"byte_end":16625746,"line_start":279,"line_end":279,"column_start":6,"column_end":15},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2964},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/encode.rs","byte_start":16626083,"byte_end":16626092,"line_start":292,"line_end":292,"column_start":14,"column_end":23},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2964},"to":{"krate":22,"index":42}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/encode.rs","byte_start":16626482,"byte_end":16626491,"line_start":310,"line_end":310,"column_start":21,"column_end":30},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2964},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/encode.rs","byte_start":16626742,"byte_end":16626751,"line_start":319,"line_end":319,"column_start":21,"column_end":30},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2964},"to":{"krate":2,"index":9504}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/encode.rs","byte_start":16627110,"byte_end":16627120,"line_start":330,"line_end":330,"column_start":26,"column_end":36},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2923},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/encode.rs","byte_start":16627266,"byte_end":16627276,"line_start":338,"line_end":338,"column_start":32,"column_end":42},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2923},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/encode.rs","byte_start":16627460,"byte_end":16627470,"line_start":346,"line_end":346,"column_start":62,"column_end":72},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2923},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/io.rs","byte_start":16631259,"byte_end":16631267,"line_start":48,"line_end":48,"column_start":27,"column_end":35},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2488},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/io.rs","byte_start":16631530,"byte_end":16631538,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2488},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/io.rs","byte_start":16642795,"byte_end":16642803,"line_start":357,"line_end":357,"column_start":29,"column_end":37},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2488},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/io.rs","byte_start":16643037,"byte_end":16643045,"line_start":364,"line_end":364,"column_start":24,"column_end":32},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2488},"to":{"krate":0,"index":2531}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/io.rs","byte_start":16643748,"byte_end":16643760,"line_start":391,"line_end":391,"column_start":6,"column_end":18},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2973},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/io.rs","byte_start":16646005,"byte_end":16646017,"line_start":462,"line_end":462,"column_start":18,"column_end":30},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2973},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/io.rs","byte_start":16646221,"byte_end":16646227,"line_start":474,"line_end":474,"column_start":22,"column_end":28},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2986},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/io.rs","byte_start":16646341,"byte_end":16646347,"line_start":481,"line_end":481,"column_start":6,"column_end":12},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2986},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/io.rs","byte_start":16647011,"byte_end":16647017,"line_start":506,"line_end":506,"column_start":37,"column_end":43},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2986},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/io.rs","byte_start":16647270,"byte_end":16647276,"line_start":515,"line_end":515,"column_start":30,"column_end":36},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2986},"to":{"krate":22,"index":42}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/io.rs","byte_start":16647945,"byte_end":16647953,"line_start":543,"line_end":543,"column_start":14,"column_end":22},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2560},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/io.rs","byte_start":16648238,"byte_end":16648246,"line_start":554,"line_end":554,"column_start":9,"column_end":17},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2560},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/io.rs","byte_start":16650130,"byte_end":16650138,"line_start":614,"line_end":614,"column_start":29,"column_end":37},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2560},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/io.rs","byte_start":16650392,"byte_end":16650400,"line_start":623,"line_end":623,"column_start":22,"column_end":30},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2560},"to":{"krate":22,"index":42}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/role.rs","byte_start":16695656,"byte_end":16695662,"line_start":890,"line_end":890,"column_start":27,"column_end":33},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2695},"to":{"krate":0,"index":2724}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/role.rs","byte_start":16704591,"byte_end":16704597,"line_start":1120,"line_end":1120,"column_start":6,"column_end":12},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2695},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/role.rs","byte_start":16717072,"byte_end":16717081,"line_start":1442,"line_end":1442,"column_start":25,"column_end":34},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2715},"to":{"krate":2,"index":9504}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h1/mod.rs","byte_start":16516908,"byte_end":16516913,"line_start":108,"line_end":108,"column_start":6,"column_end":11},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":3017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/ping.rs","byte_start":16503293,"byte_end":16503299,"line_start":198,"line_end":198,"column_start":6,"column_end":12},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":3025},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/ping.rs","byte_start":16503640,"byte_end":16503648,"line_start":214,"line_end":214,"column_start":6,"column_end":14},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":3032},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/ping.rs","byte_start":16505666,"byte_end":16505672,"line_start":294,"line_end":294,"column_start":6,"column_end":12},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1677},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/ping.rs","byte_start":16508322,"byte_end":16508328,"line_start":372,"line_end":372,"column_start":6,"column_end":12},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1681},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/ping.rs","byte_start":16509220,"byte_end":16509223,"line_start":407,"line_end":407,"column_start":6,"column_end":9},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1688},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/ping.rs","byte_start":16511146,"byte_end":16511155,"line_start":473,"line_end":473,"column_start":6,"column_end":15},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1694},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/ping.rs","byte_start":16513507,"byte_end":16513524,"line_start":537,"line_end":537,"column_start":6,"column_end":23},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":3036},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/ping.rs","byte_start":16513704,"byte_end":16513721,"line_start":544,"line_end":544,"column_start":23,"column_end":40},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":3036},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/ping.rs","byte_start":16513895,"byte_end":16513912,"line_start":551,"line_end":551,"column_start":28,"column_end":45},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":3036},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/client.rs","byte_start":16759176,"byte_end":16759182,"line_start":58,"line_end":58,"column_start":18,"column_end":24},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":3214},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/client.rs","byte_start":16763785,"byte_end":16763795,"line_start":208,"line_end":208,"column_start":9,"column_end":19},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":3189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/client.rs","byte_start":16763992,"byte_end":16764002,"line_start":217,"line_end":217,"column_start":20,"column_end":30},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":3189},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/mod.rs","byte_start":16486109,"byte_end":16486125,"line_start":99,"line_end":99,"column_start":9,"column_end":25},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":5961},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/mod.rs","byte_start":16486375,"byte_end":16486391,"line_start":112,"line_end":112,"column_start":20,"column_end":36},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":5961},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/mod.rs","byte_start":16490999,"byte_end":16491009,"line_start":224,"line_end":224,"column_start":32,"column_end":42},"kind":{"Impl":{"id":140}},"from":{"krate":42,"index":9746},"to":{"krate":0,"index":1754}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/mod.rs","byte_start":16491628,"byte_end":16491635,"line_start":249,"line_end":249,"column_start":22,"column_end":29},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1763},"to":{"krate":22,"index":42}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/mod.rs","byte_start":16492721,"byte_end":16492731,"line_start":296,"line_end":296,"column_start":23,"column_end":33},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1780},"to":{"krate":24,"index":199}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/mod.rs","byte_start":16494183,"byte_end":16494193,"line_start":336,"line_end":336,"column_start":24,"column_end":34},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1780},"to":{"krate":24,"index":278}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/mod.rs","byte_start":16496495,"byte_end":16496513,"line_start":414,"line_end":414,"column_start":9,"column_end":27},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1796},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/mod.rs","byte_start":16497741,"byte_end":16497749,"line_start":457,"line_end":457,"column_start":25,"column_end":33},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1808},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/h2/mod.rs","byte_start":16497773,"byte_end":16497781,"line_start":459,"line_end":459,"column_start":17,"column_end":25},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1808},"to":{"krate":22,"index":42}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/proto/mod.rs","byte_start":16482833,"byte_end":16482844,"line_start":62,"line_end":62,"column_start":6,"column_end":17},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":3228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16787213,"byte_end":16787217,"line_start":60,"line_end":60,"column_start":6,"column_end":10},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":3749},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16787425,"byte_end":16787429,"line_start":71,"line_end":71,"column_start":21,"column_end":25},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":3749},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16787565,"byte_end":16787569,"line_start":77,"line_end":77,"column_start":23,"column_end":27},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":3749},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16787702,"byte_end":16787706,"line_start":83,"line_end":83,"column_start":18,"column_end":22},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":3749},"to":{"krate":2,"index":12144}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16788023,"byte_end":16788039,"line_start":96,"line_end":96,"column_start":23,"column_end":39},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":3767},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16788176,"byte_end":16788192,"line_start":102,"line_end":102,"column_start":16,"column_end":32},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":3767},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16788202,"byte_end":16788213,"line_start":104,"line_end":104,"column_start":6,"column_end":17},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":3763},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16788348,"byte_end":16788359,"line_start":111,"line_end":111,"column_start":24,"column_end":35},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":3763},"to":{"krate":41,"index":13}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16788938,"byte_end":16788949,"line_start":132,"line_end":132,"column_start":21,"column_end":32},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":3763},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16789069,"byte_end":16789078,"line_start":138,"line_end":138,"column_start":17,"column_end":26},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":3434},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16789706,"byte_end":16789715,"line_start":156,"line_end":156,"column_start":21,"column_end":30},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":3434},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16789831,"byte_end":16789840,"line_start":162,"line_end":162,"column_start":15,"column_end":24},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":3434},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16789923,"byte_end":16789931,"line_start":168,"line_end":168,"column_start":19,"column_end":27},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":3432},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16790065,"byte_end":16790073,"line_start":176,"line_end":176,"column_start":21,"column_end":29},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":3432},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16790251,"byte_end":16790262,"line_start":186,"line_end":186,"column_start":6,"column_end":17},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":3474},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16792237,"byte_end":16792248,"line_start":248,"line_end":248,"column_start":19,"column_end":30},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":3474},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/dns.rs","byte_start":16794881,"byte_end":16794882,"line_start":335,"line_end":335,"column_start":25,"column_end":26},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":3516},"to":{"krate":0,"index":3509}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16800216,"byte_end":16800229,"line_start":87,"line_end":87,"column_start":6,"column_end":19},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":3772},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16800767,"byte_end":16800780,"line_start":106,"line_end":106,"column_start":9,"column_end":22},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":3772},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16805524,"byte_end":16805537,"line_start":247,"line_end":247,"column_start":36,"column_end":49},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":3772},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16805704,"byte_end":16805717,"line_start":253,"line_end":253,"column_start":41,"column_end":54},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3772},"to":{"krate":41,"index":13}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16807445,"byte_end":16807458,"line_start":321,"line_end":321,"column_start":9,"column_end":22},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3772},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16808614,"byte_end":16808623,"line_start":360,"line_end":360,"column_start":21,"column_end":30},"kind":{"Impl":{"id":170}},"from":{"krate":24,"index":5251},"to":{"krate":0,"index":3271}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16808876,"byte_end":16808884,"line_start":371,"line_end":371,"column_start":6,"column_end":14},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":3779},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16809694,"byte_end":16809708,"line_start":396,"line_end":396,"column_start":29,"column_end":43},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":5772},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16810044,"byte_end":16810056,"line_start":410,"line_end":410,"column_start":6,"column_end":18},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":3673},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16810700,"byte_end":16810712,"line_start":438,"line_end":438,"column_start":21,"column_end":33},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":3673},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16811042,"byte_end":16811054,"line_start":451,"line_end":451,"column_start":23,"column_end":35},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":3673},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16811292,"byte_end":16811304,"line_start":463,"line_end":463,"column_start":19,"column_end":31},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":3673},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16811567,"byte_end":16811580,"line_start":475,"line_end":475,"column_start":10,"column_end":23},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":3694},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16812976,"byte_end":16812995,"line_start":516,"line_end":516,"column_start":6,"column_end":25},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3705},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16813248,"byte_end":16813267,"line_start":527,"line_end":527,"column_start":6,"column_end":25},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3705},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/http.rs","byte_start":16818295,"byte_end":16818308,"line_start":669,"line_end":669,"column_start":6,"column_end":19},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3694},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16777365,"byte_end":16777374,"line_start":126,"line_end":126,"column_start":6,"column_end":15},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3801},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16779677,"byte_end":16779682,"line_start":206,"line_end":206,"column_start":6,"column_end":11},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":3273},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16779787,"byte_end":16779792,"line_start":212,"line_end":212,"column_start":16,"column_end":21},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":3273},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16779889,"byte_end":16779894,"line_start":218,"line_end":218,"column_start":21,"column_end":26},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":3273},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16780028,"byte_end":16780032,"line_start":224,"line_end":224,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":3019},"to":{"krate":0,"index":3292}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16780035,"byte_end":16780039,"line_start":224,"line_end":224,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":3031},"to":{"krate":0,"index":3292}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16780425,"byte_end":16780438,"line_start":235,"line_end":235,"column_start":24,"column_end":37},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":3820},"to":{"krate":0,"index":3292}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16780734,"byte_end":16780744,"line_start":250,"line_end":250,"column_start":26,"column_end":36},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":3299},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16780867,"byte_end":16780877,"line_start":256,"line_end":256,"column_start":24,"column_end":34},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":3299},"to":{"krate":0,"index":3292}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16781990,"byte_end":16781996,"line_start":292,"line_end":292,"column_start":24,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":3358},"to":{"krate":0,"index":3335}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16781999,"byte_end":16782004,"line_start":292,"line_end":292,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":3024},"to":{"krate":0,"index":3335}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16782577,"byte_end":16782578,"line_start":307,"line_end":307,"column_start":28,"column_end":29},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":3344},"to":{"krate":0,"index":3335}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16783032,"byte_end":16783033,"line_start":321,"line_end":321,"column_start":31,"column_end":32},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":3349},"to":{"krate":0,"index":3338}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/connect/mod.rs","byte_start":16783556,"byte_end":16783557,"line_start":337,"line_end":337,"column_start":27,"column_end":28},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":3356},"to":{"krate":0,"index":3358}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16831775,"byte_end":16831781,"line_start":54,"line_end":54,"column_start":6,"column_end":12},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":3985},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16832264,"byte_end":16832270,"line_start":69,"line_end":69,"column_start":18,"column_end":24},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":3985},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16832380,"byte_end":16832386,"line_start":75,"line_end":75,"column_start":6,"column_end":12},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":3985},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16832999,"byte_end":16833005,"line_start":101,"line_end":101,"column_start":12,"column_end":18},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":3985},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16849791,"byte_end":16849797,"line_start":523,"line_end":523,"column_start":51,"column_end":57},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":3985},"to":{"krate":41,"index":13}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16850865,"byte_end":16850871,"line_start":563,"line_end":563,"column_start":29,"column_end":35},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":3985},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16851158,"byte_end":16851164,"line_start":574,"line_end":574,"column_start":27,"column_end":33},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":3985},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16851328,"byte_end":16851342,"line_start":582,"line_end":582,"column_start":6,"column_end":20},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":3992},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16851812,"byte_end":16851826,"line_start":600,"line_end":600,"column_start":21,"column_end":35},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":3992},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16851951,"byte_end":16851965,"line_start":606,"line_end":606,"column_start":17,"column_end":31},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":3992},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16852510,"byte_end":16852520,"line_start":629,"line_end":629,"column_start":9,"column_end":19},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":4063},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16853523,"byte_end":16853533,"line_start":667,"line_end":667,"column_start":29,"column_end":39},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":4063},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16854168,"byte_end":16854178,"line_start":686,"line_end":686,"column_start":22,"column_end":32},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":4063},"to":{"krate":0,"index":4605}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16855497,"byte_end":16855508,"line_start":737,"line_end":737,"column_start":9,"column_end":20},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":4091},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16860308,"byte_end":16860315,"line_start":900,"line_end":900,"column_start":18,"column_end":25},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":4833},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16860762,"byte_end":16860769,"line_start":917,"line_end":917,"column_start":6,"column_end":13},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":4833},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/client.rs","byte_start":16876413,"byte_end":16876420,"line_start":1348,"line_end":1348,"column_start":21,"column_end":28},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":4833},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16886735,"byte_end":16886746,"line_start":222,"line_end":222,"column_start":9,"column_end":20},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":4268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16887678,"byte_end":16887689,"line_start":255,"line_end":255,"column_start":9,"column_end":20},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":4268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16890620,"byte_end":16890631,"line_start":340,"line_end":340,"column_start":33,"column_end":44},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":4268},"to":{"krate":41,"index":13}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16891020,"byte_end":16891031,"line_start":357,"line_end":357,"column_start":24,"column_end":35},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":4268},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16891222,"byte_end":16891238,"line_start":366,"line_end":366,"column_start":9,"column_end":25},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":4284},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16891450,"byte_end":16891466,"line_start":377,"line_end":377,"column_start":9,"column_end":25},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":4284},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16892518,"byte_end":16892534,"line_start":409,"line_end":409,"column_start":24,"column_end":40},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":4284},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16892708,"byte_end":16892724,"line_start":416,"line_end":416,"column_start":19,"column_end":35},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":4284},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16892888,"byte_end":16892898,"line_start":426,"line_end":426,"column_start":12,"column_end":22},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":4271},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16896418,"byte_end":16896428,"line_start":509,"line_end":509,"column_start":23,"column_end":33},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":4271},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16897402,"byte_end":16897412,"line_start":537,"line_end":537,"column_start":27,"column_end":37},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":4271},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16897661,"byte_end":16897668,"line_start":549,"line_end":549,"column_start":6,"column_end":13},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":4839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16913764,"byte_end":16913778,"line_start":990,"line_end":990,"column_start":17,"column_end":31},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":4275},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16914549,"byte_end":16914563,"line_start":1010,"line_end":1010,"column_start":21,"column_end":35},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":4275},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16914737,"byte_end":16914748,"line_start":1018,"line_end":1018,"column_start":23,"column_end":34},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":5392},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16915552,"byte_end":16915556,"line_start":1044,"line_end":1044,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":3019},"to":{"krate":0,"index":4392}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16915582,"byte_end":16915586,"line_start":1045,"line_end":1045,"column_start":23,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":3019},"to":{"krate":0,"index":4393}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16915589,"byte_end":16915593,"line_start":1045,"line_end":1045,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":3031},"to":{"krate":0,"index":4393}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16915646,"byte_end":16915657,"line_start":1048,"line_end":1048,"column_start":34,"column_end":45},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":4268},"to":{"krate":0,"index":4393}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16915718,"byte_end":16915728,"line_start":1051,"line_end":1051,"column_start":39,"column_end":49},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":4271},"to":{"krate":0,"index":4392}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16915911,"byte_end":16915921,"line_start":1060,"line_end":1060,"column_start":57,"column_end":67},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":4271},"to":{"krate":0,"index":4393}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16916089,"byte_end":16916096,"line_start":1069,"line_end":1069,"column_start":25,"column_end":32},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":4839},"to":{"krate":0,"index":4393}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/conn.rs","byte_start":16916136,"byte_end":16916150,"line_start":1072,"line_end":1072,"column_start":21,"column_end":35},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":4275},"to":{"krate":0,"index":4392}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/dispatch.rs","byte_start":16918035,"byte_end":16918041,"line_start":55,"line_end":55,"column_start":12,"column_end":18},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":4436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/dispatch.rs","byte_start":16919854,"byte_end":16919869,"line_start":115,"line_end":115,"column_start":12,"column_end":27},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":4442},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/dispatch.rs","byte_start":16920417,"byte_end":16920432,"line_start":134,"line_end":134,"column_start":22,"column_end":37},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":4442},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/dispatch.rs","byte_start":16920719,"byte_end":16920727,"line_start":148,"line_end":148,"column_start":12,"column_end":20},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":4474},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/dispatch.rs","byte_start":16921567,"byte_end":16921575,"line_start":179,"line_end":179,"column_start":21,"column_end":29},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":4474},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/dispatch.rs","byte_start":16921820,"byte_end":16921828,"line_start":189,"line_end":189,"column_start":21,"column_end":29},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":4490},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/dispatch.rs","byte_start":16922240,"byte_end":16922248,"line_start":205,"line_end":205,"column_start":12,"column_end":20},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":4499},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16929294,"byte_end":16929299,"line_start":30,"line_end":30,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":3060},"to":{"krate":0,"index":4605}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16929302,"byte_end":16929306,"line_start":30,"line_end":30,"column_start":36,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":3019},"to":{"krate":0,"index":4605}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16929309,"byte_end":16929314,"line_start":30,"line_end":30,"column_start":43,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":3024},"to":{"krate":0,"index":4605}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16932026,"byte_end":16932032,"line_start":98,"line_end":98,"column_start":6,"column_end":12},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":4871},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16932133,"byte_end":16932137,"line_start":104,"line_end":104,"column_start":9,"column_end":13},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":4602},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16933323,"byte_end":16933327,"line_start":142,"line_end":142,"column_start":19,"column_end":23},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":4602},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16938219,"byte_end":16938229,"line_start":281,"line_end":281,"column_start":28,"column_end":38},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":4644},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16939772,"byte_end":16939781,"line_start":323,"line_end":323,"column_start":19,"column_end":28},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":4619},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16943551,"byte_end":16943560,"line_start":429,"line_end":429,"column_start":9,"column_end":18},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":4619},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16944211,"byte_end":16944220,"line_start":447,"line_end":447,"column_start":19,"column_end":28},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":4619},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16945198,"byte_end":16945202,"line_start":478,"line_end":478,"column_start":19,"column_end":23},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":4602},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16945608,"byte_end":16945614,"line_start":495,"line_end":495,"column_start":19,"column_end":25},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":4670},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16945993,"byte_end":16945999,"line_start":513,"line_end":513,"column_start":29,"column_end":35},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":4670},"to":{"krate":2,"index":3234}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16946116,"byte_end":16946122,"line_start":520,"line_end":520,"column_start":32,"column_end":38},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":4670},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16946226,"byte_end":16946232,"line_start":526,"line_end":526,"column_start":28,"column_end":34},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":4670},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16947020,"byte_end":16947026,"line_start":548,"line_end":548,"column_start":34,"column_end":40},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":4670},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16947527,"byte_end":16947548,"line_start":570,"line_end":570,"column_start":19,"column_end":40},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":4879},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16947575,"byte_end":16947596,"line_start":572,"line_end":572,"column_start":23,"column_end":44},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":4879},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16947746,"byte_end":16947754,"line_start":578,"line_end":578,"column_start":19,"column_end":27},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":4699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16950632,"byte_end":16950640,"line_start":657,"line_end":657,"column_start":30,"column_end":38},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":4699},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16951316,"byte_end":16951324,"line_start":677,"line_end":677,"column_start":18,"column_end":26},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":4699},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16951856,"byte_end":16951866,"line_start":695,"line_end":695,"column_start":19,"column_end":29},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":4722},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16952143,"byte_end":16952153,"line_start":706,"line_end":706,"column_start":28,"column_end":38},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":4722},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16952462,"byte_end":16952472,"line_start":719,"line_end":719,"column_start":6,"column_end":16},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":4732},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16953405,"byte_end":16953413,"line_start":748,"line_end":748,"column_start":40,"column_end":48},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":4883},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/pool.rs","byte_start":16954327,"byte_end":16954334,"line_start":777,"line_end":777,"column_start":9,"column_end":16},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":4628},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/service.rs","byte_start":16962559,"byte_end":16962566,"line_start":30,"line_end":30,"column_start":15,"column_end":22},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":4924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.17/src/client/service.rs","byte_start":16962859,"byte_end":16962866,"line_start":42,"line_end":42,"column_start":30,"column_end":37},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":4924},"to":{"krate":41,"index":13}}]}