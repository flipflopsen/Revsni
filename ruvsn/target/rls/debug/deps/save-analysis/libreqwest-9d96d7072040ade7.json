{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9","program":"/home/shorida/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","reqwest","--edition=2018","/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","--json=diagnostic-rendered-ansi,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"__tls\"","--cfg","feature=\"default\"","--cfg","feature=\"default-tls\"","--cfg","feature=\"hyper-tls\"","--cfg","feature=\"json\"","--cfg","feature=\"native-tls-crate\"","--cfg","feature=\"serde_json\"","--cfg","feature=\"tokio-native-tls\"","-C","metadata=9d96d7072040ade7","-C","extra-filename=-9d96d7072040ade7","--out-dir","/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps","-L","dependency=/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps","--extern","base64=/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps/libbase64-f91e443953601d03.rmeta","--extern","bytes=/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps/libbytes-1cc7c62e6b906e91.rmeta","--extern","encoding_rs=/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps/libencoding_rs-4cddb7f0ca925701.rmeta","--extern","futures_core=/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps/libfutures_core-ca7084b85b3c71ac.rmeta","--extern","futures_util=/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps/libfutures_util-269028fbf40d153f.rmeta","--extern","h2=/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps/libh2-e626ee41a1aa4e3a.rmeta","--extern","http=/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps/libhttp-b084bfa8338d41ba.rmeta","--extern","http_body=/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps/libhttp_body-2004b3ce324c6594.rmeta","--extern","hyper=/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps/libhyper-77974d1aa32050f6.rmeta","--extern","hyper_tls=/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps/libhyper_tls-824ffb4980b73b44.rmeta","--extern","ipnet=/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps/libipnet-13b7cfadd0b84c37.rmeta","--extern","lazy_static=/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps/liblazy_static-ae46812994b3b675.rmeta","--extern","log=/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps/liblog-f9639f24ab4fa829.rmeta","--extern","mime=/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps/libmime-084079912e1d16ef.rmeta","--extern","native_tls_crate=/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps/libnative_tls-a8a0a16d3d213479.rmeta","--extern","percent_encoding=/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps/libpercent_encoding-5f48eccb12382397.rmeta","--extern","pin_project_lite=/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps/libpin_project_lite-a998cf3a0c0f2ffc.rmeta","--extern","serde=/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps/libserde-3af96252a16129f7.rmeta","--extern","serde_json=/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps/libserde_json-f8cd58b30dd059ba.rmeta","--extern","serde_urlencoded=/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps/libserde_urlencoded-f77841dc848d0570.rmeta","--extern","tokio=/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps/libtokio-ece40d630573241d.rmeta","--extern","tokio_native_tls=/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps/libtokio_native_tls-4e5a055809047aca.rmeta","--extern","url=/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps/liburl-1c37cf9fde31b678.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/shorida/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/shorida/Projekte/Revsni/ruvsn/target/rls/debug/deps/libreqwest-9d96d7072040ade7.rmeta"},"prelude":{"crate_id":{"name":"reqwest","disambiguator":[18199837131796531259,0]},"crate_root":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src","external_crates":[{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14026078687029744792,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5443730852259234579,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4162025702538114948,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17612152343462746361,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5560808256873132085,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[135160560163186024,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5800521777261530329,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7095478770525139037,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17225897750877482818,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15613653607383163471,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[12428323400248712701,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[11893279639181573711,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[13583305032161054644,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16609837797022023111,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[18098459435141129808,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[15244551393771456017,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[6576340271055396708,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[15284510821186066958,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12982807908830018159,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","num":20,"id":{"name":"http","disambiguator":[6283784705270819427,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","num":21,"id":{"name":"fnv","disambiguator":[8330082054751851692,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs","num":22,"id":{"name":"bytes","disambiguator":[7314794341678089032,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","num":23,"id":{"name":"itoa","disambiguator":[5510977470187001259,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","num":24,"id":{"name":"url","disambiguator":[5130968738849569552,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","num":25,"id":{"name":"matches","disambiguator":[17559381657887043569,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","num":26,"id":{"name":"form_urlencoded","disambiguator":[5545231989891156423,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","num":27,"id":{"name":"percent_encoding","disambiguator":[11254479402654397554,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","num":28,"id":{"name":"idna","disambiguator":[17995540573413430226,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","num":29,"id":{"name":"unicode_bidi","disambiguator":[7756352600518232450,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","num":30,"id":{"name":"unicode_normalization","disambiguator":[8572445395585319772,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","num":31,"id":{"name":"tinyvec","disambiguator":[8064269026507476469,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","num":32,"id":{"name":"tinyvec_macros","disambiguator":[8357728634698462789,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","num":33,"id":{"name":"lazy_static","disambiguator":[9708727071027780738,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs","num":34,"id":{"name":"futures_core","disambiguator":[1591406731620905623,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","num":35,"id":{"name":"log","disambiguator":[776761502000636621,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs","num":36,"id":{"name":"cfg_if","disambiguator":[1004283514336169005,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs","num":37,"id":{"name":"http_body","disambiguator":[10345245459362249452,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs","num":38,"id":{"name":"pin_project_lite","disambiguator":[10864849255587560100,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs","num":39,"id":{"name":"tokio","disambiguator":[2083491362801612674,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs","num":40,"id":{"name":"mio","disambiguator":[5244721319522553482,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs","num":41,"id":{"name":"libc","disambiguator":[15967550852856567583,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs","num":42,"id":{"name":"memchr","disambiguator":[7480610296841804772,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs","num":43,"id":{"name":"socket2","disambiguator":[7287264656507871292,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs","num":44,"id":{"name":"futures_util","disambiguator":[11696672590482649169,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs","num":45,"id":{"name":"pin_utils","disambiguator":[12498854107001860550,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs","num":46,"id":{"name":"futures_task","disambiguator":[5312922015445378390,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","num":47,"id":{"name":"hyper","disambiguator":[5524582466481696352,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","num":48,"id":{"name":"futures_channel","disambiguator":[6883385506186365939,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","num":49,"id":{"name":"tracing","disambiguator":[10611824624856974296,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","num":50,"id":{"name":"tracing_core","disambiguator":[18153404294366702238,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","num":51,"id":{"name":"tower_service","disambiguator":[9303431542951732763,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","num":52,"id":{"name":"h2","disambiguator":[8296353990973465085,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","num":53,"id":{"name":"tokio_util","disambiguator":[5196393153687813591,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","num":54,"id":{"name":"futures_sink","disambiguator":[11806979643220771367,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","num":55,"id":{"name":"slab","disambiguator":[13380692357016131026,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","num":56,"id":{"name":"indexmap","disambiguator":[5854379845269088973,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","num":57,"id":{"name":"hashbrown","disambiguator":[7515097708316050833,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","num":58,"id":{"name":"httparse","disambiguator":[7749972693634645296,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","num":59,"id":{"name":"want","disambiguator":[11386109480153803130,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","num":60,"id":{"name":"try_lock","disambiguator":[5048979015683420269,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","num":61,"id":{"name":"native_tls","disambiguator":[11401944521104530986,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","num":62,"id":{"name":"openssl","disambiguator":[2140807955870301217,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","num":63,"id":{"name":"openssl_sys","disambiguator":[16140577373877368364,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","num":64,"id":{"name":"foreign_types","disambiguator":[16560480366605936440,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","num":65,"id":{"name":"foreign_types_shared","disambiguator":[16056456116608247417,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","num":66,"id":{"name":"bitflags","disambiguator":[15917436305182542096,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","num":67,"id":{"name":"once_cell","disambiguator":[6856981414050524038,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","num":68,"id":{"name":"openssl_probe","disambiguator":[16022242334975855630,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","num":69,"id":{"name":"base64","disambiguator":[4959395263352034544,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","num":70,"id":{"name":"serde","disambiguator":[705552359977099754,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","num":71,"id":{"name":"serde_json","disambiguator":[13370269169623959250,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","num":72,"id":{"name":"ryu","disambiguator":[3374997887390214652,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","num":73,"id":{"name":"encoding_rs","disambiguator":[8399213871462013685,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","num":74,"id":{"name":"mime","disambiguator":[5747845700149389491,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","num":75,"id":{"name":"tokio_native_tls","disambiguator":[12164642168322428891,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","num":76,"id":{"name":"ipnet","disambiguator":[2021129177149442411,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","num":77,"id":{"name":"serde_urlencoded","disambiguator":[5364025328069544484,0]}},{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","num":78,"id":{"name":"hyper_tls","disambiguator":[17004611508819281,0]}}],"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":0,"byte_end":10380,"line_start":1,"line_end":331,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":20,"index":5},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":7790,"byte_end":7796,"line_start":220,"line_end":220,"column_start":15,"column_end":21},"alias_span":null,"name":"header","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":3000},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":7812,"byte_end":7818,"line_start":221,"line_end":221,"column_start":15,"column_end":21},"alias_span":null,"name":"Method","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":3093},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":7835,"byte_end":7845,"line_start":222,"line_end":222,"column_start":16,"column_end":26},"alias_span":null,"name":"StatusCode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":3274},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":7847,"byte_end":7854,"line_start":222,"line_end":222,"column_start":28,"column_end":35},"alias_span":null,"name":"Version","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":908},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":7870,"byte_end":7873,"line_start":223,"line_end":223,"column_start":14,"column_end":17},"alias_span":null,"name":"Url","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":40},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":7969,"byte_end":7974,"line_start":231,"line_end":231,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":38},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":7976,"byte_end":7982,"line_start":231,"line_end":231,"column_start":30,"column_end":36},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":97},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":8009,"byte_end":8016,"line_start":232,"line_end":232,"column_start":25,"column_end":32},"alias_span":null,"name":"IntoUrl","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":126},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":8042,"byte_end":8060,"line_start":233,"line_end":233,"column_start":25,"column_end":43},"alias_span":null,"name":"ResponseBuilderExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":270},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":9583,"byte_end":9587,"line_start":299,"line_end":299,"column_start":9,"column_end":13},"alias_span":null,"name":"Body","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1599},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":9589,"byte_end":9595,"line_start":299,"line_end":299,"column_start":15,"column_end":21},"alias_span":null,"name":"Client","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":518},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":9597,"byte_end":9610,"line_start":299,"line_end":299,"column_start":23,"column_end":36},"alias_span":null,"name":"ClientBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":831},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":9612,"byte_end":9619,"line_start":299,"line_end":299,"column_start":38,"column_end":45},"alias_span":null,"name":"Request","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":838},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":9621,"byte_end":9635,"line_start":299,"line_end":299,"column_start":47,"column_end":61},"alias_span":null,"name":"RequestBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":975},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":9637,"byte_end":9645,"line_start":299,"line_end":299,"column_start":63,"column_end":71},"alias_span":null,"name":"Response","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1652},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":9679,"byte_end":9684,"line_start":301,"line_end":301,"column_start":26,"column_end":31},"alias_span":null,"name":"Proxy","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1768},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":9787,"byte_end":9798,"line_start":304,"line_end":304,"column_start":19,"column_end":30},"alias_span":null,"name":"Certificate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1772},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":9800,"byte_end":9808,"line_start":304,"line_end":304,"column_start":32,"column_end":40},"alias_span":null,"name":"Identity","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":0,"byte_end":10380,"line_start":1,"line_end":331,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":93},{"krate":0,"index":122},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":137},{"krate":0,"index":140},{"krate":0,"index":143},{"krate":0,"index":147},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":198},{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":207},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":214},{"krate":0,"index":217},{"krate":0,"index":1025},{"krate":0,"index":1346},{"krate":0,"index":1475},{"krate":0,"index":1542},{"krate":0,"index":1568}],"decl_id":null,"docs":" # reqwest","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":23,"byte_end":62,"line_start":2,"line_end":2,"column_start":1,"column_end":40}},{"value":"/ # reqwest","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":196,"byte_end":209,"line_start":7,"line_end":7,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":210,"byte_end":213,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The `reqwest` crate provides a convenient, higher-level HTTP","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":214,"byte_end":278,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/ [`Client`][client].","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":279,"byte_end":302,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":303,"byte_end":306,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ It handles many of the things that most people just expect an HTTP client","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":307,"byte_end":384,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ to do for them.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":385,"byte_end":404,"line_start":13,"line_end":13,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":405,"byte_end":408,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ - Async and [blocking](blocking) Clients","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":409,"byte_end":453,"line_start":15,"line_end":15,"column_start":1,"column_end":45}},{"value":"/ - Plain bodies, [JSON](#json), [urlencoded](#forms), [multipart](multipart)","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":454,"byte_end":533,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ - Customizable [redirect policy](#redirect-policies)","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":534,"byte_end":590,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/ - HTTP [Proxies](#proxies)","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":591,"byte_end":621,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ - Uses system-native [TLS](#tls)","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":622,"byte_end":658,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/ - Cookies","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":659,"byte_end":672,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":673,"byte_end":676,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The [`reqwest::Client`][client] is asynchronous. For applications wishing","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":677,"byte_end":754,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ to only make a few HTTP requests, the [`reqwest::blocking`](blocking) API","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":755,"byte_end":832,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/ may be more convenient.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":833,"byte_end":860,"line_start":24,"line_end":24,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":861,"byte_end":864,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Additional learning resources include:","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":865,"byte_end":907,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":908,"byte_end":911,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ - [The Rust Cookbook](https://rust-lang-nursery.github.io/rust-cookbook/web/clients.html)","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":912,"byte_end":1005,"line_start":28,"line_end":28,"column_start":1,"column_end":94}},{"value":"/ - [Reqwest Repository Examples](https://github.com/seanmonstar/reqwest/tree/master/examples)","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":1006,"byte_end":1102,"line_start":29,"line_end":29,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":1103,"byte_end":1106,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ## Making a GET request","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":1107,"byte_end":1134,"line_start":31,"line_end":31,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":1135,"byte_end":1138,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ For a single request, you can use the [`get`][get] shortcut method.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":1139,"byte_end":1210,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":1211,"byte_end":1214,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":1215,"byte_end":1226,"line_start":35,"line_end":35,"column_start":1,"column_end":12}},{"value":"/ # async fn run() -> Result<(), reqwest::Error> {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":1227,"byte_end":1279,"line_start":36,"line_end":36,"column_start":1,"column_end":53}},{"value":"/ let body = reqwest::get(\"https://www.rust-lang.org\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":1280,"byte_end":1336,"line_start":37,"line_end":37,"column_start":1,"column_end":57}},{"value":"/     .await?","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":1337,"byte_end":1352,"line_start":38,"line_end":38,"column_start":1,"column_end":16}},{"value":"/     .text()","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":1353,"byte_end":1368,"line_start":39,"line_end":39,"column_start":1,"column_end":16}},{"value":"/     .await?;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":1369,"byte_end":1385,"line_start":40,"line_end":40,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":1386,"byte_end":1389,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ println!(\"body = {:?}\", body);","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":1390,"byte_end":1424,"line_start":42,"line_end":42,"column_start":1,"column_end":35}},{"value":"/ # Ok(())","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":1425,"byte_end":1437,"line_start":43,"line_end":43,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":1438,"byte_end":1445,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":1446,"byte_end":1453,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":1454,"byte_end":1457,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ **NOTE**: If you plan to perform multiple requests, it is best to create a","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":1458,"byte_end":1536,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"/ [`Client`][client] and reuse it, taking advantage of keep-alive connection","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":1537,"byte_end":1615,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ pooling.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":1616,"byte_end":1628,"line_start":49,"line_end":49,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":1629,"byte_end":1632,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ## Making POST requests (or setting request bodies)","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":1633,"byte_end":1688,"line_start":51,"line_end":51,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":1689,"byte_end":1692,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ There are several ways you can set the body of a request. The basic one is","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":1693,"byte_end":1771,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"/ by using the `body()` method of a [`RequestBuilder`][builder]. This lets you set the","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":1772,"byte_end":1860,"line_start":54,"line_end":54,"column_start":1,"column_end":89}},{"value":"/ exact raw bytes of what the body should be. It accepts various types,","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":1861,"byte_end":1934,"line_start":55,"line_end":55,"column_start":1,"column_end":74}},{"value":"/ including `String` and `Vec<u8>`. If you wish to pass a custom","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":1935,"byte_end":2001,"line_start":56,"line_end":56,"column_start":1,"column_end":67}},{"value":"/ type, you can use the `reqwest::Body` constructors.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":2002,"byte_end":2057,"line_start":57,"line_end":57,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":2058,"byte_end":2061,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":2062,"byte_end":2073,"line_start":59,"line_end":59,"column_start":1,"column_end":12}},{"value":"/ # use reqwest::Error;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":2074,"byte_end":2099,"line_start":60,"line_end":60,"column_start":1,"column_end":26}},{"value":"/ #","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":2100,"byte_end":2105,"line_start":61,"line_end":61,"column_start":1,"column_end":6}},{"value":"/ # async fn run() -> Result<(), Error> {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":2106,"byte_end":2149,"line_start":62,"line_end":62,"column_start":1,"column_end":44}},{"value":"/ let client = reqwest::Client::new();","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":2150,"byte_end":2190,"line_start":63,"line_end":63,"column_start":1,"column_end":41}},{"value":"/ let res = client.post(\"http://httpbin.org/post\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":2191,"byte_end":2243,"line_start":64,"line_end":64,"column_start":1,"column_end":53}},{"value":"/     .body(\"the exact body that is sent\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":2244,"byte_end":2288,"line_start":65,"line_end":65,"column_start":1,"column_end":45}},{"value":"/     .send()","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":2289,"byte_end":2304,"line_start":66,"line_end":66,"column_start":1,"column_end":16}},{"value":"/     .await?;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":2305,"byte_end":2321,"line_start":67,"line_end":67,"column_start":1,"column_end":17}},{"value":"/ # Ok(())","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":2322,"byte_end":2334,"line_start":68,"line_end":68,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":2335,"byte_end":2342,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":2343,"byte_end":2350,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":2351,"byte_end":2354,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ### Forms","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":2355,"byte_end":2368,"line_start":72,"line_end":72,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":2369,"byte_end":2372,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ It's very common to want to send form data in a request body. This can be","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":2373,"byte_end":2450,"line_start":74,"line_end":74,"column_start":1,"column_end":78}},{"value":"/ done with any type that can be serialized into form data.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":2451,"byte_end":2512,"line_start":75,"line_end":75,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":2513,"byte_end":2516,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ This can be an array of tuples, or a `HashMap`, or a custom type that","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":2517,"byte_end":2590,"line_start":77,"line_end":77,"column_start":1,"column_end":74}},{"value":"/ implements [`Serialize`][serde].","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":2591,"byte_end":2627,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":2628,"byte_end":2631,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":2632,"byte_end":2643,"line_start":80,"line_end":80,"column_start":1,"column_end":12}},{"value":"/ # use reqwest::Error;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":2644,"byte_end":2669,"line_start":81,"line_end":81,"column_start":1,"column_end":26}},{"value":"/ #","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":2670,"byte_end":2675,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"/ # async fn run() -> Result<(), Error> {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":2676,"byte_end":2719,"line_start":83,"line_end":83,"column_start":1,"column_end":44}},{"value":"/ // This will POST a body of `foo=bar&baz=quux`","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":2720,"byte_end":2770,"line_start":84,"line_end":84,"column_start":1,"column_end":51}},{"value":"/ let params = [(\"foo\", \"bar\"), (\"baz\", \"quux\")];","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":2771,"byte_end":2822,"line_start":85,"line_end":85,"column_start":1,"column_end":52}},{"value":"/ let client = reqwest::Client::new();","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":2823,"byte_end":2863,"line_start":86,"line_end":86,"column_start":1,"column_end":41}},{"value":"/ let res = client.post(\"http://httpbin.org/post\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":2864,"byte_end":2916,"line_start":87,"line_end":87,"column_start":1,"column_end":53}},{"value":"/     .form(&params)","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":2917,"byte_end":2939,"line_start":88,"line_end":88,"column_start":1,"column_end":23}},{"value":"/     .send()","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":2940,"byte_end":2955,"line_start":89,"line_end":89,"column_start":1,"column_end":16}},{"value":"/     .await?;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":2956,"byte_end":2972,"line_start":90,"line_end":90,"column_start":1,"column_end":17}},{"value":"/ # Ok(())","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":2973,"byte_end":2985,"line_start":91,"line_end":91,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":2986,"byte_end":2993,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":2994,"byte_end":3001,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":3002,"byte_end":3005,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ ### JSON","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":3006,"byte_end":3018,"line_start":95,"line_end":95,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":3019,"byte_end":3022,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ There is also a `json` method helper on the [`RequestBuilder`][builder] that works in","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":3023,"byte_end":3112,"line_start":97,"line_end":97,"column_start":1,"column_end":90}},{"value":"/ a similar fashion the `form` method. It can take any value that can be","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":3113,"byte_end":3187,"line_start":98,"line_end":98,"column_start":1,"column_end":75}},{"value":"/ serialized into JSON. The feature `json` is required.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":3188,"byte_end":3245,"line_start":99,"line_end":99,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":3246,"byte_end":3249,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":3250,"byte_end":3261,"line_start":101,"line_end":101,"column_start":1,"column_end":12}},{"value":"/ # use reqwest::Error;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":3262,"byte_end":3287,"line_start":102,"line_end":102,"column_start":1,"column_end":26}},{"value":"/ # use std::collections::HashMap;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":3288,"byte_end":3324,"line_start":103,"line_end":103,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":3325,"byte_end":3330,"line_start":104,"line_end":104,"column_start":1,"column_end":6}},{"value":"/ # #[cfg(feature = \"json\")]","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":3331,"byte_end":3361,"line_start":105,"line_end":105,"column_start":1,"column_end":31}},{"value":"/ # async fn run() -> Result<(), Error> {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":3362,"byte_end":3405,"line_start":106,"line_end":106,"column_start":1,"column_end":44}},{"value":"/ // This will POST a body of `{\"lang\":\"rust\",\"body\":\"json\"}`","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":3406,"byte_end":3469,"line_start":107,"line_end":107,"column_start":1,"column_end":64}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":3470,"byte_end":3503,"line_start":108,"line_end":108,"column_start":1,"column_end":34}},{"value":"/ map.insert(\"lang\", \"rust\");","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":3504,"byte_end":3535,"line_start":109,"line_end":109,"column_start":1,"column_end":32}},{"value":"/ map.insert(\"body\", \"json\");","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":3536,"byte_end":3567,"line_start":110,"line_end":110,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":3568,"byte_end":3571,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ let client = reqwest::Client::new();","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":3572,"byte_end":3612,"line_start":112,"line_end":112,"column_start":1,"column_end":41}},{"value":"/ let res = client.post(\"http://httpbin.org/post\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":3613,"byte_end":3665,"line_start":113,"line_end":113,"column_start":1,"column_end":53}},{"value":"/     .json(&map)","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":3666,"byte_end":3685,"line_start":114,"line_end":114,"column_start":1,"column_end":20}},{"value":"/     .send()","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":3686,"byte_end":3701,"line_start":115,"line_end":115,"column_start":1,"column_end":16}},{"value":"/     .await?;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":3702,"byte_end":3718,"line_start":116,"line_end":116,"column_start":1,"column_end":17}},{"value":"/ # Ok(())","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":3719,"byte_end":3731,"line_start":117,"line_end":117,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":3732,"byte_end":3739,"line_start":118,"line_end":118,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":3740,"byte_end":3747,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":3748,"byte_end":3751,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ ## Redirect Policies","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":3752,"byte_end":3776,"line_start":121,"line_end":121,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":3777,"byte_end":3780,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ By default, a `Client` will automatically handle HTTP redirects, having a","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":3781,"byte_end":3858,"line_start":123,"line_end":123,"column_start":1,"column_end":78}},{"value":"/ maximum redirect chain of 10 hops. To customize this behavior, a","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":3859,"byte_end":3927,"line_start":124,"line_end":124,"column_start":1,"column_end":69}},{"value":"/ [`redirect::Policy`][redirect] can be used with a `ClientBuilder`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":3928,"byte_end":3998,"line_start":125,"line_end":125,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":3999,"byte_end":4002,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ ## Cookies","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":4003,"byte_end":4017,"line_start":127,"line_end":127,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":4018,"byte_end":4021,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The automatic storing and sending of session cookies can be enabled with","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":4022,"byte_end":4098,"line_start":129,"line_end":129,"column_start":1,"column_end":77}},{"value":"/ the [`cookie_store`][ClientBuilder::cookie_store] method on `ClientBuilder`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":4099,"byte_end":4179,"line_start":130,"line_end":130,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":4180,"byte_end":4183,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ ## Proxies","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":4184,"byte_end":4198,"line_start":132,"line_end":132,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":4199,"byte_end":4202,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ **NOTE**: System proxies are enabled by default.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":4203,"byte_end":4255,"line_start":134,"line_end":134,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":4256,"byte_end":4259,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ System proxies look in environment variables to set HTTP or HTTPS proxies.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":4260,"byte_end":4338,"line_start":136,"line_end":136,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":4339,"byte_end":4342,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ `HTTP_PROXY` or `http_proxy` provide http proxies for http connections while","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":4343,"byte_end":4423,"line_start":138,"line_end":138,"column_start":1,"column_end":81}},{"value":"/ `HTTPS_PROXY` or `https_proxy` provide HTTPS proxies for HTTPS connections.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":4424,"byte_end":4503,"line_start":139,"line_end":139,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":4504,"byte_end":4507,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ These can be overwritten by adding a [`Proxy`](Proxy) to `ClientBuilder`","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":4508,"byte_end":4584,"line_start":141,"line_end":141,"column_start":1,"column_end":77}},{"value":"/ i.e. `let proxy = reqwest::Proxy::http(\"https://secure.example\")?;`","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":4585,"byte_end":4656,"line_start":142,"line_end":142,"column_start":1,"column_end":72}},{"value":"/ or disabled by calling `ClientBuilder::no_proxy()`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":4657,"byte_end":4712,"line_start":143,"line_end":143,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":4713,"byte_end":4716,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ `socks` feature is required if you have configured socks proxy like this:","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":4717,"byte_end":4794,"line_start":145,"line_end":145,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":4795,"byte_end":4798,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```bash","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":4799,"byte_end":4810,"line_start":147,"line_end":147,"column_start":1,"column_end":12}},{"value":"/ export https_proxy=socks5://127.0.0.1:1086","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":4811,"byte_end":4857,"line_start":148,"line_end":148,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":4858,"byte_end":4865,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":4866,"byte_end":4869,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ ## TLS","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":4870,"byte_end":4880,"line_start":151,"line_end":151,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":4881,"byte_end":4884,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ By default, a `Client` will make use of system-native transport layer","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":4885,"byte_end":4958,"line_start":153,"line_end":153,"column_start":1,"column_end":74}},{"value":"/ security to connect to HTTPS destinations. This means schannel on Windows,","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":4959,"byte_end":5037,"line_start":154,"line_end":154,"column_start":1,"column_end":79}},{"value":"/ Security-Framework on macOS, and OpenSSL on Linux.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":5038,"byte_end":5092,"line_start":155,"line_end":155,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":5093,"byte_end":5096,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ - Additional X509 certificates can be configured on a `ClientBuilder` with the","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":5097,"byte_end":5179,"line_start":157,"line_end":157,"column_start":1,"column_end":83}},{"value":"/   [`Certificate`](Certificate) type.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":5180,"byte_end":5220,"line_start":158,"line_end":158,"column_start":1,"column_end":41}},{"value":"/ - Client certificates can be add to a `ClientBuilder` with the","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":5221,"byte_end":5287,"line_start":159,"line_end":159,"column_start":1,"column_end":67}},{"value":"/   [`Identity`][Identity] type.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":5288,"byte_end":5322,"line_start":160,"line_end":160,"column_start":1,"column_end":35}},{"value":"/ - Various parts of TLS can also be configured or even disabled on the","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":5323,"byte_end":5396,"line_start":161,"line_end":161,"column_start":1,"column_end":74}},{"value":"/   `ClientBuilder`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":5397,"byte_end":5419,"line_start":162,"line_end":162,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":5420,"byte_end":5423,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ ## Optional Features","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":5424,"byte_end":5448,"line_start":164,"line_end":164,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":5449,"byte_end":5452,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ The following are a list of [Cargo features][cargo-features] that can be","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":5453,"byte_end":5529,"line_start":166,"line_end":166,"column_start":1,"column_end":77}},{"value":"/ enabled or disabled:","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":5530,"byte_end":5554,"line_start":167,"line_end":167,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":5555,"byte_end":5558,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ - **default-tls** *(enabled by default)*: Provides TLS support to connect","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":5559,"byte_end":5636,"line_start":169,"line_end":169,"column_start":1,"column_end":78}},{"value":"/   over HTTPS.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":5637,"byte_end":5654,"line_start":170,"line_end":170,"column_start":1,"column_end":18}},{"value":"/ - **native-tls**: Enables TLS functionality provided by `native-tls`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":5655,"byte_end":5728,"line_start":171,"line_end":171,"column_start":1,"column_end":74}},{"value":"/ - **native-tls-vendored**: Enables the `vendored` feature of `native-tls`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":5729,"byte_end":5807,"line_start":172,"line_end":172,"column_start":1,"column_end":79}},{"value":"/ - **native-tls-alpn**: Enables the `alpn` feature of `native-tls`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":5808,"byte_end":5878,"line_start":173,"line_end":173,"column_start":1,"column_end":71}},{"value":"/ - **rustls-tls**: Enables TLS functionality provided by `rustls`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":5879,"byte_end":5948,"line_start":174,"line_end":174,"column_start":1,"column_end":70}},{"value":"/   Equivalent to `rustls-tls-webpki-roots`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":5949,"byte_end":5995,"line_start":175,"line_end":175,"column_start":1,"column_end":47}},{"value":"/ - **rustls-tls-manual-roots**: Enables TLS functionality provided by `rustls`,","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":5996,"byte_end":6078,"line_start":176,"line_end":176,"column_start":1,"column_end":83}},{"value":"/   without setting any root certificates. Roots have to be specified manually.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":6079,"byte_end":6160,"line_start":177,"line_end":177,"column_start":1,"column_end":82}},{"value":"/ - **rustls-tls-webpki-roots**: Enables TLS functionality provided by `rustls`,","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":6161,"byte_end":6243,"line_start":178,"line_end":178,"column_start":1,"column_end":83}},{"value":"/   while using root certificates from the `webpki-roots` crate.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":6244,"byte_end":6310,"line_start":179,"line_end":179,"column_start":1,"column_end":67}},{"value":"/ - **rustls-tls-native-roots**: Enables TLS functionality provided by `rustls`,","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":6311,"byte_end":6393,"line_start":180,"line_end":180,"column_start":1,"column_end":83}},{"value":"/   while using root certificates from the `rustls-native-certs` crate.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":6394,"byte_end":6467,"line_start":181,"line_end":181,"column_start":1,"column_end":74}},{"value":"/ - **blocking**: Provides the [blocking][] client API.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":6468,"byte_end":6525,"line_start":182,"line_end":182,"column_start":1,"column_end":58}},{"value":"/ - **cookies**: Provides cookie session support.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":6526,"byte_end":6577,"line_start":183,"line_end":183,"column_start":1,"column_end":52}},{"value":"/ - **gzip**: Provides response body gzip decompression.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":6578,"byte_end":6636,"line_start":184,"line_end":184,"column_start":1,"column_end":59}},{"value":"/ - **brotli**: Provides response body brotli decompression.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":6637,"byte_end":6699,"line_start":185,"line_end":185,"column_start":1,"column_end":63}},{"value":"/ - **deflate**: Provides response body deflate decompression.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":6700,"byte_end":6764,"line_start":186,"line_end":186,"column_start":1,"column_end":65}},{"value":"/ - **json**: Provides serialization and deserialization for JSON bodies.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":6765,"byte_end":6840,"line_start":187,"line_end":187,"column_start":1,"column_end":76}},{"value":"/ - **multipart**: Provides functionality for multipart forms.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":6841,"byte_end":6905,"line_start":188,"line_end":188,"column_start":1,"column_end":65}},{"value":"/ - **stream**: Adds support for `futures::Stream`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":6906,"byte_end":6959,"line_start":189,"line_end":189,"column_start":1,"column_end":54}},{"value":"/ - **socks**: Provides SOCKS5 proxy support.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":6960,"byte_end":7007,"line_start":190,"line_end":190,"column_start":1,"column_end":48}},{"value":"/ - **trust-dns**: Enables a trust-dns async resolver instead of default","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":7008,"byte_end":7082,"line_start":191,"line_end":191,"column_start":1,"column_end":75}},{"value":"/   threadpool using `getaddrinfo`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":7083,"byte_end":7120,"line_start":192,"line_end":192,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":7121,"byte_end":7124,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":7125,"byte_end":7128,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ [hyper]: http://hyper.rs","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":7129,"byte_end":7157,"line_start":195,"line_end":195,"column_start":1,"column_end":29}},{"value":"/ [blocking]: ./blocking/index.html","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":7158,"byte_end":7195,"line_start":196,"line_end":196,"column_start":1,"column_end":38}},{"value":"/ [client]: ./struct.Client.html","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":7196,"byte_end":7230,"line_start":197,"line_end":197,"column_start":1,"column_end":35}},{"value":"/ [response]: ./struct.Response.html","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":7231,"byte_end":7269,"line_start":198,"line_end":198,"column_start":1,"column_end":39}},{"value":"/ [get]: ./fn.get.html","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":7270,"byte_end":7294,"line_start":199,"line_end":199,"column_start":1,"column_end":25}},{"value":"/ [builder]: ./struct.RequestBuilder.html","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":7295,"byte_end":7338,"line_start":200,"line_end":200,"column_start":1,"column_end":44}},{"value":"/ [serde]: http://serde.rs","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":7339,"byte_end":7367,"line_start":201,"line_end":201,"column_start":1,"column_end":29}},{"value":"/ [redirect]: crate::redirect","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":7368,"byte_end":7399,"line_start":202,"line_end":202,"column_start":1,"column_end":32}},{"value":"/ [Proxy]: ./struct.Proxy.html","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":7400,"byte_end":7432,"line_start":203,"line_end":203,"column_start":1,"column_end":33}},{"value":"/ [cargo-features]: https://doc.rust-lang.org/stable/cargo/reference/manifest.html#the-features-section","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":7433,"byte_end":7538,"line_start":204,"line_end":204,"column_start":1,"column_end":106}}]},{"kind":"Type","id":{"krate":0,"index":38},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":10600,"byte_end":10606,"line_start":9,"line_end":9,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A `Result` alias where the `Err` case is `reqwest::Error`.\n","sig":null,"attributes":[{"value":"/ A `Result` alias where the `Err` case is `reqwest::Error`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":10528,"byte_end":10590,"line_start":8,"line_end":8,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":40},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":10714,"byte_end":10719,"line_start":12,"line_end":12,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":41}],"decl_id":null,"docs":" The Errors that may occur when processing a `Request`.\n","sig":null,"attributes":[{"value":"/ The Errors that may occur when processing a `Request`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":10644,"byte_end":10702,"line_start":11,"line_end":11,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":11714,"byte_end":11717,"line_start":55,"line_end":55,"column_start":12,"column_end":15},"name":"url","qualname":"<Error>::url","value":"pub fn url(&Self) -> Option<&Url>","parent":null,"children":[],"decl_id":null,"docs":" Returns a possible URL related to this error.","sig":null,"attributes":[{"value":"/ Returns a possible URL related to this error.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":11202,"byte_end":11251,"line_start":38,"line_end":38,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":11256,"byte_end":11259,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":11264,"byte_end":11278,"line_start":40,"line_end":40,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":11283,"byte_end":11286,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":11291,"byte_end":11298,"line_start":42,"line_end":42,"column_start":5,"column_end":12}},{"value":"/ # async fn run() {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":11303,"byte_end":11325,"line_start":43,"line_end":43,"column_start":5,"column_end":27}},{"value":"/ // displays last stop of a redirect loop","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":11330,"byte_end":11374,"line_start":44,"line_end":44,"column_start":5,"column_end":49}},{"value":"/ let response = reqwest::get(\"http://site.with.redirect.loop\").await;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":11379,"byte_end":11451,"line_start":45,"line_end":45,"column_start":5,"column_end":77}},{"value":"/ if let Err(e) = response {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":11456,"byte_end":11486,"line_start":46,"line_end":46,"column_start":5,"column_end":35}},{"value":"/     if e.is_redirect() {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":11491,"byte_end":11519,"line_start":47,"line_end":47,"column_start":5,"column_end":33}},{"value":"/         if let Some(final_stop) = e.url() {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":11524,"byte_end":11571,"line_start":48,"line_end":48,"column_start":5,"column_end":52}},{"value":"/             println!(\"redirect loop at {}\", final_stop);","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":11576,"byte_end":11636,"line_start":49,"line_end":49,"column_start":5,"column_end":65}},{"value":"/         }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":11641,"byte_end":11654,"line_start":50,"line_end":50,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":11659,"byte_end":11668,"line_start":51,"line_end":51,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":11673,"byte_end":11678,"line_start":52,"line_end":52,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":11683,"byte_end":11690,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":11695,"byte_end":11702,"line_start":54,"line_end":54,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":11851,"byte_end":11861,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"is_builder","qualname":"<Error>::is_builder","value":"pub fn is_builder(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error is from a type Builder.\n","sig":null,"attributes":[{"value":"/ Returns true if the error is from a type Builder.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":11786,"byte_end":11839,"line_start":59,"line_end":59,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":12008,"byte_end":12019,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"is_redirect","qualname":"<Error>::is_redirect","value":"pub fn is_redirect(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error is from a `RedirectPolicy`.\n","sig":null,"attributes":[{"value":"/ Returns true if the error is from a `RedirectPolicy`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":11939,"byte_end":11996,"line_start":64,"line_end":64,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":12177,"byte_end":12186,"line_start":70,"line_end":70,"column_start":12,"column_end":21},"name":"is_status","qualname":"<Error>::is_status","value":"pub fn is_status(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error is from `Response::error_for_status`.\n","sig":null,"attributes":[{"value":"/ Returns true if the error is from `Response::error_for_status`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":12098,"byte_end":12165,"line_start":69,"line_end":69,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":12332,"byte_end":12342,"line_start":75,"line_end":75,"column_start":12,"column_end":22},"name":"is_timeout","qualname":"<Error>::is_timeout","value":"pub fn is_timeout(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error is related to a timeout.\n","sig":null,"attributes":[{"value":"/ Returns true if the error is related to a timeout.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":12266,"byte_end":12320,"line_start":74,"line_end":74,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":12659,"byte_end":12669,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"is_request","qualname":"<Error>::is_request","value":"pub fn is_request(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error is related to the request\n","sig":null,"attributes":[{"value":"/ Returns true if the error is related to the request","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":12592,"byte_end":12647,"line_start":88,"line_end":88,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":12850,"byte_end":12860,"line_start":95,"line_end":95,"column_start":12,"column_end":22},"name":"is_connect","qualname":"<Error>::is_connect","value":"pub fn is_connect(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error is related to connect\n","sig":null,"attributes":[{"value":"cfg(not(target_arch = \"wasm32\"))","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":12747,"byte_end":12782,"line_start":93,"line_end":93,"column_start":5,"column_end":40}},{"value":"/ Returns true if the error is related to connect","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":12787,"byte_end":12838,"line_start":94,"line_end":94,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":13297,"byte_end":13304,"line_start":112,"line_end":112,"column_start":12,"column_end":19},"name":"is_body","qualname":"<Error>::is_body","value":"pub fn is_body(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error is related to the request or response body\n","sig":null,"attributes":[{"value":"/ Returns true if the error is related to the request or response body","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":13213,"byte_end":13285,"line_start":111,"line_end":111,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":13463,"byte_end":13472,"line_start":117,"line_end":117,"column_start":12,"column_end":21},"name":"is_decode","qualname":"<Error>::is_decode","value":"pub fn is_decode(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error is related to decoding the response's body\n","sig":null,"attributes":[{"value":"/ Returns true if the error is related to decoding the response's body","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":13379,"byte_end":13451,"line_start":116,"line_end":116,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":13633,"byte_end":13639,"line_start":122,"line_end":122,"column_start":12,"column_end":18},"name":"status","qualname":"<Error>::status","value":"pub fn status(&Self) -> Option<StatusCode>","parent":null,"children":[],"decl_id":null,"docs":" Returns the status code, if the error was generated from a response.\n","sig":null,"attributes":[{"value":"/ Returns the status code, if the error was generated from a response.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":13549,"byte_end":13621,"line_start":121,"line_end":121,"column_start":5,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":97},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/into_url.rs","byte_start":19826,"byte_end":19833,"line_start":7,"line_end":7,"column_start":11,"column_end":18},"name":"IntoUrl","qualname":"::into_url::IntoUrl","value":"IntoUrl: IntoUrlSealed","parent":null,"children":[],"decl_id":null,"docs":" A trait to try to convert some type into a `Url`.","sig":null,"attributes":[{"value":"/ A trait to try to convert some type into a `Url`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/into_url.rs","byte_start":19672,"byte_end":19725,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/into_url.rs","byte_start":19726,"byte_end":19729,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This trait is \"sealed\", such that only types within reqwest can","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/into_url.rs","byte_start":19730,"byte_end":19797,"line_start":5,"line_end":5,"column_start":1,"column_end":68}},{"value":"/ implement it.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/into_url.rs","byte_start":19798,"byte_end":19815,"line_start":6,"line_end":6,"column_start":1,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":104},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/into_url.rs","byte_start":19982,"byte_end":19995,"line_start":14,"line_end":14,"column_start":11,"column_end":24},"name":"IntoUrlSealed","qualname":"::into_url::IntoUrlSealed","value":"IntoUrlSealed","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/into_url.rs","byte_start":20144,"byte_end":20152,"line_start":17,"line_end":17,"column_start":8,"column_end":16},"name":"into_url","qualname":"::into_url::IntoUrlSealed::into_url","value":"pub fn into_url(Self) -> crate::Result<Url>","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/into_url.rs","byte_start":20190,"byte_end":20196,"line_start":19,"line_end":19,"column_start":8,"column_end":14},"name":"as_str","qualname":"::into_url::IntoUrlSealed::as_str","value":"pub fn as_str(&Self) -> &str","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":126},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/response.rs","byte_start":21868,"byte_end":21886,"line_start":9,"line_end":9,"column_start":11,"column_end":29},"name":"ResponseBuilderExt","qualname":"::response::ResponseBuilderExt","value":"ResponseBuilderExt","parent":null,"children":[{"krate":0,"index":127}],"decl_id":null,"docs":" Extension trait for http::response::Builder objects","sig":null,"attributes":[{"value":"/ Extension trait for http::response::Builder objects","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/response.rs","byte_start":21741,"byte_end":21796,"line_start":6,"line_end":6,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/response.rs","byte_start":21797,"byte_end":21800,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Allows the user to add a `Url` to the http::Response","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/response.rs","byte_start":21801,"byte_end":21857,"line_start":8,"line_end":8,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/response.rs","byte_start":22028,"byte_end":22031,"line_start":12,"line_end":12,"column_start":8,"column_end":11},"name":"url","qualname":"::response::ResponseBuilderExt::url","value":"pub fn url(Self, Url) -> Self","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" A builder method for the `http::response::Builder` type that allows the user to add a `Url`\n to the `http::Response`\n","sig":null,"attributes":[{"value":"/ A builder method for the `http::response::Builder` type that allows the user to add a `Url`","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/response.rs","byte_start":21893,"byte_end":21988,"line_start":10,"line_end":10,"column_start":5,"column_end":100}},{"value":"/ to the `http::Response`","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/response.rs","byte_start":21993,"byte_end":22020,"line_start":11,"line_end":11,"column_start":5,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":143},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":8834,"byte_end":8837,"line_start":262,"line_end":262,"column_start":14,"column_end":17},"name":"get","qualname":"::get","value":"pub async fn get<T: IntoUrl>(T) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Shortcut method to quickly make a `GET` request.","sig":null,"attributes":[{"value":"/ Shortcut method to quickly make a `GET` request.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":8063,"byte_end":8115,"line_start":235,"line_end":235,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":8116,"byte_end":8119,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ See also the methods on the [`reqwest::Response`](./struct.Response.html)","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":8120,"byte_end":8197,"line_start":237,"line_end":237,"column_start":1,"column_end":78}},{"value":"/ type.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":8198,"byte_end":8207,"line_start":238,"line_end":238,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":8208,"byte_end":8211,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ **NOTE**: This function creates a new internal `Client` on each call,","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":8212,"byte_end":8285,"line_start":240,"line_end":240,"column_start":1,"column_end":74}},{"value":"/ and so should not be used if making many requests. Create a","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":8286,"byte_end":8349,"line_start":241,"line_end":241,"column_start":1,"column_end":64}},{"value":"/ [`Client`](./struct.Client.html) instead.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":8350,"byte_end":8395,"line_start":242,"line_end":242,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":8396,"byte_end":8399,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":8400,"byte_end":8414,"line_start":244,"line_end":244,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":8415,"byte_end":8418,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":8419,"byte_end":8430,"line_start":246,"line_end":246,"column_start":1,"column_end":12}},{"value":"/ # async fn run() -> Result<(), reqwest::Error> {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":8431,"byte_end":8483,"line_start":247,"line_end":247,"column_start":1,"column_end":53}},{"value":"/ let body = reqwest::get(\"https://www.rust-lang.org\").await?","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":8484,"byte_end":8547,"line_start":248,"line_end":248,"column_start":1,"column_end":64}},{"value":"/     .text().await?;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":8548,"byte_end":8571,"line_start":249,"line_end":249,"column_start":1,"column_end":24}},{"value":"/ # Ok(())","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":8572,"byte_end":8584,"line_start":250,"line_end":250,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":8585,"byte_end":8592,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":8593,"byte_end":8600,"line_start":252,"line_end":252,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":8601,"byte_end":8604,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":8605,"byte_end":8617,"line_start":254,"line_end":254,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":8618,"byte_end":8621,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ This function fails if:","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":8622,"byte_end":8649,"line_start":256,"line_end":256,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":8650,"byte_end":8653,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ - native TLS backend cannot be initialized","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":8654,"byte_end":8700,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"/ - supplied `Url` cannot be parsed","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":8701,"byte_end":8738,"line_start":259,"line_end":259,"column_start":1,"column_end":38}},{"value":"/ - there was an error while sending request","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":8739,"byte_end":8785,"line_start":260,"line_end":260,"column_start":1,"column_end":47}},{"value":"/ - redirect limit was exhausted","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":8786,"byte_end":8820,"line_start":261,"line_end":261,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":270},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs","byte_start":13850198,"byte_end":13850202,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"Body","qualname":"::async_impl::body::Body","value":"Body {  }","parent":null,"children":[{"krate":0,"index":271}],"decl_id":null,"docs":" An asynchronous request body.\n","sig":null,"attributes":[{"value":"/ An asynchronous request body.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs","byte_start":13850153,"byte_end":13850186,"line_start":16,"line_end":16,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs","byte_start":13850912,"byte_end":13850920,"line_start":51,"line_end":51,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Body>::as_bytes","value":"pub fn as_bytes(&Self) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internal data of the `Body`.","sig":null,"attributes":[{"value":"/ Returns a reference to the internal data of the `Body`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs","byte_start":13850769,"byte_end":13850828,"line_start":48,"line_end":48,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs","byte_start":13850833,"byte_end":13850836,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ `None` is returned, if the underlying data is a stream.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs","byte_start":13850841,"byte_end":13850900,"line_start":50,"line_end":50,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1599},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13860915,"byte_end":13860921,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"name":"Client","qualname":"::async_impl::client::Client","value":"Client {  }","parent":null,"children":[{"krate":0,"index":1600}],"decl_id":null,"docs":" An asynchronous `Client` to make Requests with.","sig":null,"attributes":[{"value":"/ An asynchronous `Client` to make Requests with.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13860353,"byte_end":13860404,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13860405,"byte_end":13860408,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ The Client has various configuration values to tweak, but the defaults","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13860409,"byte_end":13860483,"line_start":47,"line_end":47,"column_start":1,"column_end":75}},{"value":"/ are set to what is usually the most commonly desired value. To configure a","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13860484,"byte_end":13860562,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ `Client`, use `Client::builder()`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13860563,"byte_end":13860601,"line_start":49,"line_end":49,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13860602,"byte_end":13860605,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The `Client` holds a connection pool internally, so it is advised that","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13860606,"byte_end":13860680,"line_start":51,"line_end":51,"column_start":1,"column_end":75}},{"value":"/ you create one and **reuse** it.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13860681,"byte_end":13860717,"line_start":52,"line_end":52,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13860718,"byte_end":13860721,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ You do **not** have to wrap the `Client` in an [`Rc`] or [`Arc`] to **reuse** it,","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13860722,"byte_end":13860807,"line_start":54,"line_end":54,"column_start":1,"column_end":86}},{"value":"/ because it already uses an [`Arc`] internally.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13860808,"byte_end":13860858,"line_start":55,"line_end":55,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13860859,"byte_end":13860862,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`Rc`]: std::rc::Rc","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13860863,"byte_end":13860886,"line_start":57,"line_end":57,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":518},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13861059,"byte_end":13861072,"line_start":65,"line_end":65,"column_start":12,"column_end":25},"name":"ClientBuilder","qualname":"::async_impl::client::ClientBuilder","value":"ClientBuilder {  }","parent":null,"children":[{"krate":0,"index":519}],"decl_id":null,"docs":" A `ClientBuilder` can be used to create a `Client` with custom configuration.\n","sig":null,"attributes":[{"value":"/ A `ClientBuilder` can be used to create a `Client` with custom configuration.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13860954,"byte_end":13861035,"line_start":63,"line_end":63,"column_start":1,"column_end":82}},{"value":"must_use","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13861036,"byte_end":13861047,"line_start":64,"line_end":64,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13862934,"byte_end":13862937,"line_start":132,"line_end":132,"column_start":12,"column_end":15},"name":"new","qualname":"<ClientBuilder>::new","value":"pub fn new() -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `ClientBuilder`.","sig":null,"attributes":[{"value":"/ Constructs a new `ClientBuilder`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13862828,"byte_end":13862865,"line_start":129,"line_end":129,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13862870,"byte_end":13862873,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ This is the same as `Client::builder()`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13862878,"byte_end":13862922,"line_start":131,"line_end":131,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13865495,"byte_end":13865500,"line_start":193,"line_end":193,"column_start":12,"column_end":17},"name":"build","qualname":"<ClientBuilder>::build","value":"pub fn build(Self) -> crate::Result<Client>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Client` that uses this `ClientBuilder` configuration.","sig":null,"attributes":[{"value":"/ Returns a `Client` that uses this `ClientBuilder` configuration.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13865254,"byte_end":13865322,"line_start":187,"line_end":187,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13865327,"byte_end":13865330,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13865335,"byte_end":13865347,"line_start":189,"line_end":189,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13865352,"byte_end":13865355,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ This method fails if a TLS backend cannot be initialized, or the resolver","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13865360,"byte_end":13865437,"line_start":191,"line_end":191,"column_start":5,"column_end":82}},{"value":"/ cannot load the system configuration.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13865442,"byte_end":13865483,"line_start":192,"line_end":192,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13878524,"byte_end":13878534,"line_start":514,"line_end":514,"column_start":12,"column_end":22},"name":"user_agent","qualname":"<ClientBuilder>::user_agent","value":"pub fn user_agent<V>(Self, V) -> ClientBuilder where V: TryInto<HeaderValue>,\nV::Error: Into<http::Error>","parent":null,"children":[],"decl_id":null,"docs":" Sets the `User-Agent` header to be used by this client.","sig":null,"attributes":[{"value":"/ Sets the `User-Agent` header to be used by this client.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13877915,"byte_end":13877974,"line_start":494,"line_end":494,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13877979,"byte_end":13877982,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13877987,"byte_end":13878000,"line_start":496,"line_end":496,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13878005,"byte_end":13878008,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13878013,"byte_end":13878024,"line_start":498,"line_end":498,"column_start":5,"column_end":16}},{"value":"/ # async fn doc() -> Result<(), reqwest::Error> {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13878029,"byte_end":13878081,"line_start":499,"line_end":499,"column_start":5,"column_end":57}},{"value":"/ // Name your user agent after your app?","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13878086,"byte_end":13878129,"line_start":500,"line_end":500,"column_start":5,"column_end":48}},{"value":"/ static APP_USER_AGENT: &str = concat!(","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13878134,"byte_end":13878176,"line_start":501,"line_end":501,"column_start":5,"column_end":47}},{"value":"/     env!(\"CARGO_PKG_NAME\"),","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13878181,"byte_end":13878212,"line_start":502,"line_end":502,"column_start":5,"column_end":36}},{"value":"/     \"/\",","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13878217,"byte_end":13878229,"line_start":503,"line_end":503,"column_start":5,"column_end":17}},{"value":"/     env!(\"CARGO_PKG_VERSION\"),","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13878234,"byte_end":13878268,"line_start":504,"line_end":504,"column_start":5,"column_end":39}},{"value":"/ );","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13878273,"byte_end":13878279,"line_start":505,"line_end":505,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13878284,"byte_end":13878287,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ let client = reqwest::Client::builder()","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13878292,"byte_end":13878335,"line_start":507,"line_end":507,"column_start":5,"column_end":48}},{"value":"/     .user_agent(APP_USER_AGENT)","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13878340,"byte_end":13878375,"line_start":508,"line_end":508,"column_start":5,"column_end":40}},{"value":"/     .build()?;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13878380,"byte_end":13878398,"line_start":509,"line_end":509,"column_start":5,"column_end":23}},{"value":"/ let res = client.get(\"https://www.rust-lang.org\").send().await?;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13878403,"byte_end":13878471,"line_start":510,"line_end":510,"column_start":5,"column_end":73}},{"value":"/ # Ok(())","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13878476,"byte_end":13878488,"line_start":511,"line_end":511,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13878493,"byte_end":13878500,"line_start":512,"line_end":512,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13878505,"byte_end":13878512,"line_start":513,"line_end":513,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13880434,"byte_end":13880449,"line_start":573,"line_end":573,"column_start":12,"column_end":27},"name":"default_headers","qualname":"<ClientBuilder>::default_headers","value":"pub fn default_headers(Self, HeaderMap) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the default headers for every request.","sig":null,"attributes":[{"value":"/ Sets the default headers for every request.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13878945,"byte_end":13878992,"line_start":529,"line_end":529,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13878997,"byte_end":13879000,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13879005,"byte_end":13879018,"line_start":531,"line_end":531,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13879023,"byte_end":13879026,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13879031,"byte_end":13879042,"line_start":533,"line_end":533,"column_start":5,"column_end":16}},{"value":"/ use reqwest::header;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13879047,"byte_end":13879071,"line_start":534,"line_end":534,"column_start":5,"column_end":29}},{"value":"/ # async fn doc() -> Result<(), reqwest::Error> {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13879076,"byte_end":13879128,"line_start":535,"line_end":535,"column_start":5,"column_end":57}},{"value":"/ let mut headers = header::HeaderMap::new();","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13879133,"byte_end":13879180,"line_start":536,"line_end":536,"column_start":5,"column_end":52}},{"value":"/ headers.insert(\"X-MY-HEADER\", header::HeaderValue::from_static(\"value\"));","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13879185,"byte_end":13879262,"line_start":537,"line_end":537,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13879267,"byte_end":13879270,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ // Consider marking security-sensitive headers with `set_sensitive`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13879275,"byte_end":13879347,"line_start":539,"line_end":539,"column_start":5,"column_end":77}},{"value":"/ let mut auth_value = header::HeaderValue::from_static(\"secret\");","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13879352,"byte_end":13879420,"line_start":540,"line_end":540,"column_start":5,"column_end":73}},{"value":"/ auth_value.set_sensitive(true);","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13879425,"byte_end":13879460,"line_start":541,"line_end":541,"column_start":5,"column_end":40}},{"value":"/ headers.insert(header::AUTHORIZATION, auth_value);","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13879465,"byte_end":13879519,"line_start":542,"line_end":542,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13879524,"byte_end":13879527,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ // get a client builder","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13879532,"byte_end":13879559,"line_start":544,"line_end":544,"column_start":5,"column_end":32}},{"value":"/ let client = reqwest::Client::builder()","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13879564,"byte_end":13879607,"line_start":545,"line_end":545,"column_start":5,"column_end":48}},{"value":"/     .default_headers(headers)","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13879612,"byte_end":13879645,"line_start":546,"line_end":546,"column_start":5,"column_end":38}},{"value":"/     .build()?;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13879650,"byte_end":13879668,"line_start":547,"line_end":547,"column_start":5,"column_end":23}},{"value":"/ let res = client.get(\"https://www.rust-lang.org\").send().await?;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13879673,"byte_end":13879741,"line_start":548,"line_end":548,"column_start":5,"column_end":73}},{"value":"/ # Ok(())","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13879746,"byte_end":13879758,"line_start":549,"line_end":549,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13879763,"byte_end":13879770,"line_start":550,"line_end":550,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13879775,"byte_end":13879782,"line_start":551,"line_end":551,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13879787,"byte_end":13879790,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ Override the default headers:","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13879795,"byte_end":13879828,"line_start":553,"line_end":553,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13879833,"byte_end":13879836,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13879841,"byte_end":13879852,"line_start":555,"line_end":555,"column_start":5,"column_end":16}},{"value":"/ use reqwest::header;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13879857,"byte_end":13879881,"line_start":556,"line_end":556,"column_start":5,"column_end":29}},{"value":"/ # async fn doc() -> Result<(), reqwest::Error> {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13879886,"byte_end":13879938,"line_start":557,"line_end":557,"column_start":5,"column_end":57}},{"value":"/ let mut headers = header::HeaderMap::new();","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13879943,"byte_end":13879990,"line_start":558,"line_end":558,"column_start":5,"column_end":52}},{"value":"/ headers.insert(\"X-MY-HEADER\", header::HeaderValue::from_static(\"value\"));","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13879995,"byte_end":13880072,"line_start":559,"line_end":559,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13880077,"byte_end":13880080,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ // get a client builder","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13880085,"byte_end":13880112,"line_start":561,"line_end":561,"column_start":5,"column_end":32}},{"value":"/ let client = reqwest::Client::builder()","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13880117,"byte_end":13880160,"line_start":562,"line_end":562,"column_start":5,"column_end":48}},{"value":"/     .default_headers(headers)","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13880165,"byte_end":13880198,"line_start":563,"line_end":563,"column_start":5,"column_end":38}},{"value":"/     .build()?;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13880203,"byte_end":13880221,"line_start":564,"line_end":564,"column_start":5,"column_end":23}},{"value":"/ let res = client","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13880226,"byte_end":13880246,"line_start":565,"line_end":565,"column_start":5,"column_end":25}},{"value":"/     .get(\"https://www.rust-lang.org\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13880251,"byte_end":13880292,"line_start":566,"line_end":566,"column_start":5,"column_end":46}},{"value":"/     .header(\"X-MY-HEADER\", \"new_value\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13880297,"byte_end":13880340,"line_start":567,"line_end":567,"column_start":5,"column_end":48}},{"value":"/     .send()","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13880345,"byte_end":13880360,"line_start":568,"line_end":568,"column_start":5,"column_end":20}},{"value":"/     .await?;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13880365,"byte_end":13880381,"line_start":569,"line_end":569,"column_start":5,"column_end":21}},{"value":"/ # Ok(())","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13880386,"byte_end":13880398,"line_start":570,"line_end":570,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13880403,"byte_end":13880410,"line_start":571,"line_end":571,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13880415,"byte_end":13880422,"line_start":572,"line_end":572,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13885438,"byte_end":13885445,"line_start":695,"line_end":695,"column_start":12,"column_end":19},"name":"no_gzip","qualname":"<ClientBuilder>::no_gzip","value":"pub fn no_gzip(Self) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Disable auto response body gzip decompression.","sig":null,"attributes":[{"value":"/ Disable auto response body gzip decompression.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13885133,"byte_end":13885183,"line_start":690,"line_end":690,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13885188,"byte_end":13885191,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ This method exists even if the optional `gzip` feature is not enabled.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13885196,"byte_end":13885270,"line_start":692,"line_end":692,"column_start":5,"column_end":79}},{"value":"/ This can be used to ensure a `Client` doesn't use gzip decompression","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13885275,"byte_end":13885347,"line_start":693,"line_end":693,"column_start":5,"column_end":77}},{"value":"/ even if another dependency were to enable the optional `gzip` feature.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13885352,"byte_end":13885426,"line_start":694,"line_end":694,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13885953,"byte_end":13885962,"line_start":712,"line_end":712,"column_start":12,"column_end":21},"name":"no_brotli","qualname":"<ClientBuilder>::no_brotli","value":"pub fn no_brotli(Self) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Disable auto response body brotli decompression.","sig":null,"attributes":[{"value":"/ Disable auto response body brotli decompression.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13885640,"byte_end":13885692,"line_start":707,"line_end":707,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13885697,"byte_end":13885700,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ This method exists even if the optional `brotli` feature is not enabled.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13885705,"byte_end":13885781,"line_start":709,"line_end":709,"column_start":5,"column_end":81}},{"value":"/ This can be used to ensure a `Client` doesn't use brotli decompression","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13885786,"byte_end":13885860,"line_start":710,"line_end":710,"column_start":5,"column_end":79}},{"value":"/ even if another dependency were to enable the optional `brotli` feature.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13885865,"byte_end":13885941,"line_start":711,"line_end":711,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13886480,"byte_end":13886490,"line_start":729,"line_end":729,"column_start":12,"column_end":22},"name":"no_deflate","qualname":"<ClientBuilder>::no_deflate","value":"pub fn no_deflate(Self) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Disable auto response body deflate decompression.","sig":null,"attributes":[{"value":"/ Disable auto response body deflate decompression.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13886163,"byte_end":13886216,"line_start":724,"line_end":724,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13886221,"byte_end":13886224,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ This method exists even if the optional `deflate` feature is not enabled.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13886229,"byte_end":13886306,"line_start":726,"line_end":726,"column_start":5,"column_end":82}},{"value":"/ This can be used to ensure a `Client` doesn't use deflate decompression","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13886311,"byte_end":13886386,"line_start":727,"line_end":727,"column_start":5,"column_end":80}},{"value":"/ even if another dependency were to enable the optional `deflate` feature.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13886391,"byte_end":13886468,"line_start":728,"line_end":728,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13886843,"byte_end":13886851,"line_start":746,"line_end":746,"column_start":12,"column_end":20},"name":"redirect","qualname":"<ClientBuilder>::redirect","value":"pub fn redirect(Self, redirect::Policy) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set a `RedirectPolicy` for this client.","sig":null,"attributes":[{"value":"/ Set a `RedirectPolicy` for this client.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13886719,"byte_end":13886762,"line_start":743,"line_end":743,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13886767,"byte_end":13886770,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ Default will follow redirects up to a maximum of 10.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13886775,"byte_end":13886831,"line_start":745,"line_end":745,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13887088,"byte_end":13887095,"line_start":754,"line_end":754,"column_start":12,"column_end":19},"name":"referer","qualname":"<ClientBuilder>::referer","value":"pub fn referer(Self, bool) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable automatic setting of the `Referer` header.","sig":null,"attributes":[{"value":"/ Enable or disable automatic setting of the `Referer` header.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13886977,"byte_end":13887041,"line_start":751,"line_end":751,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13887046,"byte_end":13887049,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ Default is `true`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13887054,"byte_end":13887076,"line_start":753,"line_end":753,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13887408,"byte_end":13887413,"line_start":766,"line_end":766,"column_start":12,"column_end":17},"name":"proxy","qualname":"<ClientBuilder>::proxy","value":"pub fn proxy(Self, Proxy) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Add a `Proxy` to the list of proxies the `Client` will use.","sig":null,"attributes":[{"value":"/ Add a `Proxy` to the list of proxies the `Client` will use.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13887223,"byte_end":13887286,"line_start":761,"line_end":761,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13887291,"byte_end":13887294,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13887299,"byte_end":13887309,"line_start":763,"line_end":763,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13887314,"byte_end":13887317,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ Adding a proxy will disable the automatic usage of the \"system\" proxy.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13887322,"byte_end":13887396,"line_start":765,"line_end":765,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13887719,"byte_end":13887727,"line_start":775,"line_end":775,"column_start":12,"column_end":20},"name":"no_proxy","qualname":"<ClientBuilder>::no_proxy","value":"pub fn no_proxy(Self) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Clear all `Proxies`, so `Client` will use no proxy anymore.","sig":null,"attributes":[{"value":"/ Clear all `Proxies`, so `Client` will use no proxy anymore.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13887566,"byte_end":13887629,"line_start":772,"line_end":772,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13887634,"byte_end":13887637,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ This also disables the automatic usage of the \"system\" proxy.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13887642,"byte_end":13887707,"line_start":774,"line_end":774,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13888092,"byte_end":13888099,"line_start":789,"line_end":789,"column_start":12,"column_end":19},"name":"timeout","qualname":"<ClientBuilder>::timeout","value":"pub fn timeout(Self, Duration) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Enables a request timeout.","sig":null,"attributes":[{"value":"/ Enables a request timeout.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13887886,"byte_end":13887916,"line_start":783,"line_end":783,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13887921,"byte_end":13887924,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ The timeout is applied from when the request starts connecting until the","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13887929,"byte_end":13888005,"line_start":785,"line_end":785,"column_start":5,"column_end":81}},{"value":"/ response body has finished.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13888010,"byte_end":13888041,"line_start":786,"line_end":786,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13888046,"byte_end":13888049,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ Default is no timeout.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13888054,"byte_end":13888080,"line_start":788,"line_end":788,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13888459,"byte_end":13888474,"line_start":802,"line_end":802,"column_start":12,"column_end":27},"name":"connect_timeout","qualname":"<ClientBuilder>::connect_timeout","value":"pub fn connect_timeout(Self, Duration) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set a timeout for only the connect phase of a `Client`.","sig":null,"attributes":[{"value":"/ Set a timeout for only the connect phase of a `Client`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13888217,"byte_end":13888276,"line_start":794,"line_end":794,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13888281,"byte_end":13888284,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ Default is `None`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13888289,"byte_end":13888311,"line_start":796,"line_end":796,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13888316,"byte_end":13888319,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13888324,"byte_end":13888334,"line_start":798,"line_end":798,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13888339,"byte_end":13888342,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ This **requires** the futures be executed in a tokio runtime with","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13888347,"byte_end":13888416,"line_start":800,"line_end":800,"column_start":5,"column_end":74}},{"value":"/ a tokio timer enabled.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13888421,"byte_end":13888447,"line_start":801,"line_end":801,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13888856,"byte_end":13888874,"line_start":813,"line_end":813,"column_start":12,"column_end":30},"name":"connection_verbose","qualname":"<ClientBuilder>::connection_verbose","value":"pub fn connection_verbose(Self, bool) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set whether connections should emit verbose logs.","sig":null,"attributes":[{"value":"/ Set whether connections should emit verbose logs.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13888600,"byte_end":13888653,"line_start":807,"line_end":807,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13888658,"byte_end":13888661,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ Enabling this option will emit [log][] messages at the `TRACE` level","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13888666,"byte_end":13888738,"line_start":809,"line_end":809,"column_start":5,"column_end":77}},{"value":"/ for read and write operations on connections.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13888743,"byte_end":13888792,"line_start":810,"line_end":810,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13888797,"byte_end":13888800,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ [log]: https://crates.io/crates/log","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13888805,"byte_end":13888844,"line_start":812,"line_end":812,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13889175,"byte_end":13889192,"line_start":825,"line_end":825,"column_start":12,"column_end":29},"name":"pool_idle_timeout","qualname":"<ClientBuilder>::pool_idle_timeout","value":"pub fn pool_idle_timeout<D>(Self, D) -> ClientBuilder where\nD: Into<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Set an optional timeout for idle sockets being kept-alive.","sig":null,"attributes":[{"value":"/ Set an optional timeout for idle sockets being kept-alive.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13889014,"byte_end":13889076,"line_start":820,"line_end":820,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13889081,"byte_end":13889084,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ Pass `None` to disable timeout.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13889089,"byte_end":13889124,"line_start":822,"line_end":822,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13889129,"byte_end":13889132,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ Default is 90 seconds.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13889137,"byte_end":13889163,"line_start":824,"line_end":824,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13889436,"byte_end":13889458,"line_start":834,"line_end":834,"column_start":12,"column_end":34},"name":"pool_max_idle_per_host","qualname":"<ClientBuilder>::pool_max_idle_per_host","value":"pub fn pool_max_idle_per_host(Self, usize) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum idle connection per host allowed in the pool.\n","sig":null,"attributes":[{"value":"/ Sets the maximum idle connection per host allowed in the pool.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13889358,"byte_end":13889424,"line_start":833,"line_end":833,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13889638,"byte_end":13889662,"line_start":840,"line_end":840,"column_start":12,"column_end":36},"name":"http1_title_case_headers","qualname":"<ClientBuilder>::http1_title_case_headers","value":"pub fn http1_title_case_headers(Self) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Send headers as title case instead of lowercase.\n","sig":null,"attributes":[{"value":"/ Send headers as title case instead of lowercase.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13889574,"byte_end":13889626,"line_start":839,"line_end":839,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13889801,"byte_end":13889811,"line_start":846,"line_end":846,"column_start":12,"column_end":22},"name":"http1_only","qualname":"<ClientBuilder>::http1_only","value":"pub fn http1_only(Self) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Only use HTTP/1.\n","sig":null,"attributes":[{"value":"/ Only use HTTP/1.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13889769,"byte_end":13889789,"line_start":845,"line_end":845,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13889969,"byte_end":13889985,"line_start":852,"line_end":852,"column_start":12,"column_end":28},"name":"http09_responses","qualname":"<ClientBuilder>::http09_responses","value":"pub fn http09_responses(Self) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Allow HTTP/0.9 responses\n","sig":null,"attributes":[{"value":"/ Allow HTTP/0.9 responses","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13889929,"byte_end":13889957,"line_start":851,"line_end":851,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13890116,"byte_end":13890137,"line_start":858,"line_end":858,"column_start":12,"column_end":33},"name":"http2_prior_knowledge","qualname":"<ClientBuilder>::http2_prior_knowledge","value":"pub fn http2_prior_knowledge(Self) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Only use HTTP/2.\n","sig":null,"attributes":[{"value":"/ Only use HTTP/2.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13890084,"byte_end":13890104,"line_start":857,"line_end":857,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13890453,"byte_end":13890485,"line_start":866,"line_end":866,"column_start":12,"column_end":44},"name":"http2_initial_stream_window_size","qualname":"<ClientBuilder>::http2_initial_stream_window_size","value":"pub fn http2_initial_stream_window_size<impl Into<Option<u32>>: Into<Option<u32>>>(Self,\n                                                                                   impl Into<Option<u32>>)\n-> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the `SETTINGS_INITIAL_WINDOW_SIZE` option for HTTP2 stream-level flow control.","sig":null,"attributes":[{"value":"/ Sets the `SETTINGS_INITIAL_WINDOW_SIZE` option for HTTP2 stream-level flow control.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13890255,"byte_end":13890342,"line_start":863,"line_end":863,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13890347,"byte_end":13890350,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ Default is currently 65,535 but may change internally to optimize for common uses.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13890355,"byte_end":13890441,"line_start":865,"line_end":865,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13890800,"byte_end":13890836,"line_start":874,"line_end":874,"column_start":12,"column_end":48},"name":"http2_initial_connection_window_size","qualname":"<ClientBuilder>::http2_initial_connection_window_size","value":"pub fn http2_initial_connection_window_size<impl Into<Option<u32>>: Into<Option<u32>>>(Self,\n                                                                                       impl Into<Option<u32>>)\n-> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the max connection-level flow control for HTTP2","sig":null,"attributes":[{"value":"/ Sets the max connection-level flow control for HTTP2","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13890633,"byte_end":13890689,"line_start":871,"line_end":871,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13890694,"byte_end":13890697,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ Default is currently 65,535 but may change internally to optimize for common uses.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13890702,"byte_end":13890788,"line_start":873,"line_end":873,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13891221,"byte_end":13891242,"line_start":886,"line_end":886,"column_start":12,"column_end":33},"name":"http2_adaptive_window","qualname":"<ClientBuilder>::http2_adaptive_window","value":"pub fn http2_adaptive_window(Self, bool) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets whether to use an adaptive flow control.","sig":null,"attributes":[{"value":"/ Sets whether to use an adaptive flow control.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13891011,"byte_end":13891060,"line_start":882,"line_end":882,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13891065,"byte_end":13891068,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ Enabling this will override the limits set in `http2_initial_stream_window_size` and","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13891073,"byte_end":13891161,"line_start":884,"line_end":884,"column_start":5,"column_end":93}},{"value":"/ `http2_initial_connection_window_size`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13891166,"byte_end":13891209,"line_start":885,"line_end":885,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13891524,"byte_end":13891544,"line_start":894,"line_end":894,"column_start":12,"column_end":32},"name":"http2_max_frame_size","qualname":"<ClientBuilder>::http2_max_frame_size","value":"pub fn http2_max_frame_size<impl Into<Option<u32>>: Into<Option<u32>>>(Self,\n                                                                       impl Into<Option<u32>>)\n-> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum frame size to use for HTTP2.","sig":null,"attributes":[{"value":"/ Sets the maximum frame size to use for HTTP2.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13891364,"byte_end":13891413,"line_start":891,"line_end":891,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13891418,"byte_end":13891421,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ Default is currently 16,384 but may change internally to optimize for common uses.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13891426,"byte_end":13891512,"line_start":893,"line_end":893,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13891797,"byte_end":13891808,"line_start":904,"line_end":904,"column_start":12,"column_end":23},"name":"tcp_nodelay","qualname":"<ClientBuilder>::tcp_nodelay","value":"pub fn tcp_nodelay(Self, bool) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set whether sockets have `SO_NODELAY` enabled.","sig":null,"attributes":[{"value":"/ Set whether sockets have `SO_NODELAY` enabled.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13891700,"byte_end":13891750,"line_start":901,"line_end":901,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13891755,"byte_end":13891758,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ Default is `true`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13891763,"byte_end":13891785,"line_start":903,"line_end":903,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13892219,"byte_end":13892232,"line_start":920,"line_end":920,"column_start":12,"column_end":25},"name":"local_address","qualname":"<ClientBuilder>::local_address","value":"pub fn local_address<T>(Self, T) -> ClientBuilder where\nT: Into<Option<IpAddr>>","parent":null,"children":[],"decl_id":null,"docs":" Bind to a local IP Address.","sig":null,"attributes":[{"value":"/ Bind to a local IP Address.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13891916,"byte_end":13891947,"line_start":909,"line_end":909,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13891952,"byte_end":13891955,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13891960,"byte_end":13891973,"line_start":911,"line_end":911,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13891978,"byte_end":13891981,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13891986,"byte_end":13891993,"line_start":913,"line_end":913,"column_start":5,"column_end":12}},{"value":"/ use std::net::IpAddr;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13891998,"byte_end":13892023,"line_start":914,"line_end":914,"column_start":5,"column_end":30}},{"value":"/ let local_addr = IpAddr::from([12, 4, 1, 8]);","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13892028,"byte_end":13892077,"line_start":915,"line_end":915,"column_start":5,"column_end":54}},{"value":"/ let client = reqwest::Client::builder()","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13892082,"byte_end":13892125,"line_start":916,"line_end":916,"column_start":5,"column_end":48}},{"value":"/     .local_address(local_addr)","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13892130,"byte_end":13892164,"line_start":917,"line_end":917,"column_start":5,"column_end":39}},{"value":"/     .build().unwrap();","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13892169,"byte_end":13892195,"line_start":918,"line_end":918,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13892200,"byte_end":13892207,"line_start":919,"line_end":919,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13892537,"byte_end":13892550,"line_start":931,"line_end":931,"column_start":12,"column_end":25},"name":"tcp_keepalive","qualname":"<ClientBuilder>::tcp_keepalive","value":"pub fn tcp_keepalive<D>(Self, D) -> ClientBuilder where\nD: Into<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Set that all sockets have `SO_KEEPALIVE` set with the supplied duration.","sig":null,"attributes":[{"value":"/ Set that all sockets have `SO_KEEPALIVE` set with the supplied duration.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13892394,"byte_end":13892470,"line_start":928,"line_end":928,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13892475,"byte_end":13892478,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ If `None`, the option will not be set.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13892483,"byte_end":13892525,"line_start":930,"line_end":930,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13893252,"byte_end":13893272,"line_start":959,"line_end":959,"column_start":12,"column_end":32},"name":"add_root_certificate","qualname":"<ClientBuilder>::add_root_certificate","value":"pub fn add_root_certificate(Self, Certificate) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Add a custom root certificate.","sig":null,"attributes":[{"value":"/ Add a custom root certificate.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13892732,"byte_end":13892766,"line_start":941,"line_end":941,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13892771,"byte_end":13892774,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ This can be used to connect to a server that has a self-signed","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13892779,"byte_end":13892845,"line_start":943,"line_end":943,"column_start":5,"column_end":71}},{"value":"/ certificate for example.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13892850,"byte_end":13892878,"line_start":944,"line_end":944,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13892883,"byte_end":13892886,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ # Optional","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13892891,"byte_end":13892905,"line_start":946,"line_end":946,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13892910,"byte_end":13892913,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ This requires the optional `default-tls`, `native-tls`, or `rustls-tls(-...)`","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13892918,"byte_end":13892999,"line_start":948,"line_end":948,"column_start":5,"column_end":86}},{"value":"/ feature to be enabled.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13893004,"byte_end":13893030,"line_start":949,"line_end":949,"column_start":5,"column_end":31}},{"value":"cfg(feature = \"__tls\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13893035,"byte_end":13893060,"line_start":950,"line_end":950,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13893922,"byte_end":13893945,"line_start":981,"line_end":981,"column_start":12,"column_end":35},"name":"tls_built_in_root_certs","qualname":"<ClientBuilder>::tls_built_in_root_certs","value":"pub fn tls_built_in_root_certs(Self, bool) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Controls the use of built-in/preloaded certificates during certificate validation.","sig":null,"attributes":[{"value":"/ Controls the use of built-in/preloaded certificates during certificate validation.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13893388,"byte_end":13893474,"line_start":964,"line_end":964,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13893479,"byte_end":13893482,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ Defaults to `true` -- built-in system certs will be used.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13893487,"byte_end":13893548,"line_start":966,"line_end":966,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13893553,"byte_end":13893556,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ # Optional","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13893561,"byte_end":13893575,"line_start":968,"line_end":968,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13893580,"byte_end":13893583,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ This requires the optional `default-tls`, `native-tls`, or `rustls-tls(-...)`","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13893588,"byte_end":13893669,"line_start":970,"line_end":970,"column_start":5,"column_end":86}},{"value":"/ feature to be enabled.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13893674,"byte_end":13893700,"line_start":971,"line_end":971,"column_start":5,"column_end":31}},{"value":"cfg(feature = \"__tls\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13893705,"byte_end":13893730,"line_start":972,"line_end":972,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13896222,"byte_end":13896249,"line_start":1048,"line_end":1048,"column_start":12,"column_end":39},"name":"danger_accept_invalid_certs","qualname":"<ClientBuilder>::danger_accept_invalid_certs","value":"pub fn danger_accept_invalid_certs(Self, bool) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Controls the use of certificate validation.","sig":null,"attributes":[{"value":"/ Controls the use of certificate validation.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13895414,"byte_end":13895461,"line_start":1023,"line_end":1023,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13895466,"byte_end":13895469,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ Defaults to `false`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13895474,"byte_end":13895498,"line_start":1025,"line_end":1025,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13895503,"byte_end":13895506,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13895511,"byte_end":13895524,"line_start":1027,"line_end":1027,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13895529,"byte_end":13895532,"line_start":1028,"line_end":1028,"column_start":5,"column_end":8}},{"value":"/ You should think very carefully before using this method. If","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13895537,"byte_end":13895601,"line_start":1029,"line_end":1029,"column_start":5,"column_end":69}},{"value":"/ invalid certificates are trusted, *any* certificate for *any* site","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13895606,"byte_end":13895676,"line_start":1030,"line_end":1030,"column_start":5,"column_end":75}},{"value":"/ will be trusted for use. This includes expired certificates. This","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13895681,"byte_end":13895750,"line_start":1031,"line_end":1031,"column_start":5,"column_end":74}},{"value":"/ introduces significant vulnerabilities, and should only be used","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13895755,"byte_end":13895822,"line_start":1032,"line_end":1032,"column_start":5,"column_end":72}},{"value":"/ as a last resort.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13895827,"byte_end":13895848,"line_start":1033,"line_end":1033,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13895853,"byte_end":13895856,"line_start":1034,"line_end":1034,"column_start":5,"column_end":8}},{"value":"/ # Optional","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13895861,"byte_end":13895875,"line_start":1035,"line_end":1035,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13895880,"byte_end":13895883,"line_start":1036,"line_end":1036,"column_start":5,"column_end":8}},{"value":"/ This requires the optional `default-tls`, `native-tls`, or `rustls-tls(-...)`","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13895888,"byte_end":13895969,"line_start":1037,"line_end":1037,"column_start":5,"column_end":86}},{"value":"/ feature to be enabled.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13895974,"byte_end":13896000,"line_start":1038,"line_end":1038,"column_start":5,"column_end":31}},{"value":"cfg(feature = \"__tls\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13896005,"byte_end":13896030,"line_start":1039,"line_end":1039,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13897174,"byte_end":13897189,"line_start":1077,"line_end":1077,"column_start":12,"column_end":27},"name":"min_tls_version","qualname":"<ClientBuilder>::min_tls_version","value":"pub fn min_tls_version(Self, tls::Version) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set the minimum required TLS version for connections.","sig":null,"attributes":[{"value":"/ Set the minimum required TLS version for connections.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13896395,"byte_end":13896452,"line_start":1053,"line_end":1053,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13896457,"byte_end":13896460,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ By default the TLS backend's own default is used.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13896465,"byte_end":13896518,"line_start":1055,"line_end":1055,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13896523,"byte_end":13896526,"line_start":1056,"line_end":1056,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13896531,"byte_end":13896543,"line_start":1057,"line_end":1057,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13896548,"byte_end":13896551,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ A value of `tls::Version::TLS_1_3` will cause an error with the","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13896556,"byte_end":13896623,"line_start":1059,"line_end":1059,"column_start":5,"column_end":72}},{"value":"/ `native-tls`/`default-tls` backend. This does not mean the version","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13896628,"byte_end":13896698,"line_start":1060,"line_end":1060,"column_start":5,"column_end":75}},{"value":"/ isn't supported, just that it can't be set as a minimum due to","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13896703,"byte_end":13896769,"line_start":1061,"line_end":1061,"column_start":5,"column_end":71}},{"value":"/ technical limitations.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13896774,"byte_end":13896800,"line_start":1062,"line_end":1062,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13896805,"byte_end":13896808,"line_start":1063,"line_end":1063,"column_start":5,"column_end":8}},{"value":"/ # Optional","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13896813,"byte_end":13896827,"line_start":1064,"line_end":1064,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13896832,"byte_end":13896835,"line_start":1065,"line_end":1065,"column_start":5,"column_end":8}},{"value":"/ This requires the optional `default-tls`, `native-tls`, or `rustls-tls(-...)`","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13896840,"byte_end":13896921,"line_start":1066,"line_end":1066,"column_start":5,"column_end":86}},{"value":"/ feature to be enabled.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13896926,"byte_end":13896952,"line_start":1067,"line_end":1067,"column_start":5,"column_end":31}},{"value":"cfg(feature = \"__tls\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13896957,"byte_end":13896982,"line_start":1068,"line_end":1068,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13898078,"byte_end":13898093,"line_start":1106,"line_end":1106,"column_start":12,"column_end":27},"name":"max_tls_version","qualname":"<ClientBuilder>::max_tls_version","value":"pub fn max_tls_version(Self, tls::Version) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum allowed TLS version for connections.","sig":null,"attributes":[{"value":"/ Set the maximum allowed TLS version for connections.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13897319,"byte_end":13897375,"line_start":1082,"line_end":1082,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13897380,"byte_end":13897383,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ By default there's no maximum.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13897388,"byte_end":13897422,"line_start":1084,"line_end":1084,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13897427,"byte_end":13897430,"line_start":1085,"line_end":1085,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13897435,"byte_end":13897447,"line_start":1086,"line_end":1086,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13897452,"byte_end":13897455,"line_start":1087,"line_end":1087,"column_start":5,"column_end":8}},{"value":"/ A value of `tls::Version::TLS_1_3` will cause an error with the","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13897460,"byte_end":13897527,"line_start":1088,"line_end":1088,"column_start":5,"column_end":72}},{"value":"/ `native-tls`/`default-tls` backend. This does not mean the version","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13897532,"byte_end":13897602,"line_start":1089,"line_end":1089,"column_start":5,"column_end":75}},{"value":"/ isn't supported, just that it can't be set as a maximum due to","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13897607,"byte_end":13897673,"line_start":1090,"line_end":1090,"column_start":5,"column_end":71}},{"value":"/ technical limitations.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13897678,"byte_end":13897704,"line_start":1091,"line_end":1091,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13897709,"byte_end":13897712,"line_start":1092,"line_end":1092,"column_start":5,"column_end":8}},{"value":"/ # Optional","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13897717,"byte_end":13897731,"line_start":1093,"line_end":1093,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13897736,"byte_end":13897739,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ This requires the optional `default-tls`, `native-tls`, or `rustls-tls(-...)`","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13897744,"byte_end":13897825,"line_start":1095,"line_end":1095,"column_start":5,"column_end":86}},{"value":"/ feature to be enabled.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13897830,"byte_end":13897856,"line_start":1096,"line_end":1096,"column_start":5,"column_end":31}},{"value":"cfg(feature = \"__tls\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13897861,"byte_end":13897886,"line_start":1097,"line_end":1097,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13902081,"byte_end":13902093,"line_start":1210,"line_end":1210,"column_start":12,"column_end":24},"name":"no_trust_dns","qualname":"<ClientBuilder>::no_trust_dns","value":"pub fn no_trust_dns(Self) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Disables the trust-dns async resolver.","sig":null,"attributes":[{"value":"/ Disables the trust-dns async resolver.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13901764,"byte_end":13901806,"line_start":1205,"line_end":1205,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13901811,"byte_end":13901814,"line_start":1206,"line_end":1206,"column_start":5,"column_end":8}},{"value":"/ This method exists even if the optional `trust-dns` feature is not enabled.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13901819,"byte_end":13901898,"line_start":1207,"line_end":1207,"column_start":5,"column_end":84}},{"value":"/ This can be used to ensure a `Client` doesn't use the trust-dns async resolver","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13901903,"byte_end":13901985,"line_start":1208,"line_end":1208,"column_start":5,"column_end":87}},{"value":"/ even if another dependency were to enable the optional `trust-dns` feature.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13901990,"byte_end":13902069,"line_start":1209,"line_end":1209,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13902410,"byte_end":13902420,"line_start":1225,"line_end":1225,"column_start":12,"column_end":22},"name":"https_only","qualname":"<ClientBuilder>::https_only","value":"pub fn https_only(Self, bool) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Restrict the Client to be used with HTTPS only requests.","sig":null,"attributes":[{"value":"/ Restrict the Client to be used with HTTPS only requests.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13902303,"byte_end":13902363,"line_start":1222,"line_end":1222,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13902368,"byte_end":13902371,"line_start":1223,"line_end":1223,"column_start":5,"column_end":8}},{"value":"/ Defaults to false.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13902376,"byte_end":13902398,"line_start":1224,"line_end":1224,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13902956,"byte_end":13902963,"line_start":1238,"line_end":1238,"column_start":12,"column_end":19},"name":"resolve","qualname":"<ClientBuilder>::resolve","value":"pub fn resolve(Self, &str, SocketAddr) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Override DNS resolution for specific domains to particular IP addresses.","sig":null,"attributes":[{"value":"/ Override DNS resolution for specific domains to particular IP addresses.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13902531,"byte_end":13902607,"line_start":1230,"line_end":1230,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13902612,"byte_end":13902615,"line_start":1231,"line_end":1231,"column_start":5,"column_end":8}},{"value":"/ Warning","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13902620,"byte_end":13902631,"line_start":1232,"line_end":1232,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13902636,"byte_end":13902639,"line_start":1233,"line_end":1233,"column_start":5,"column_end":8}},{"value":"/ Since the DNS protocol has no notion of ports, if you wish to send","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13902644,"byte_end":13902714,"line_start":1234,"line_end":1234,"column_start":5,"column_end":75}},{"value":"/ traffic to a particular port you must include this port in the URL","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13902719,"byte_end":13902789,"line_start":1235,"line_end":1235,"column_start":5,"column_end":75}},{"value":"/ itself, any port in the overridden addr will be ignored and traffic sent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13902794,"byte_end":13902870,"line_start":1236,"line_end":1236,"column_start":5,"column_end":81}},{"value":"/ to the conventional port for the given scheme (e.g. 80 for http).","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13902875,"byte_end":13902944,"line_start":1237,"line_end":1237,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13903605,"byte_end":13903608,"line_start":1262,"line_end":1262,"column_start":12,"column_end":15},"name":"new","qualname":"<Client>::new","value":"pub fn new() -> Client","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Client`.","sig":null,"attributes":[{"value":"/ Constructs a new `Client`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13903286,"byte_end":13903316,"line_start":1253,"line_end":1253,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13903321,"byte_end":13903324,"line_start":1254,"line_end":1254,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13903329,"byte_end":13903341,"line_start":1255,"line_end":1255,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13903346,"byte_end":13903349,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ This method panics if a TLS backend cannot initialized, or the resolver","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13903354,"byte_end":13903429,"line_start":1257,"line_end":1257,"column_start":5,"column_end":80}},{"value":"/ cannot load the system configuration.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13903434,"byte_end":13903475,"line_start":1258,"line_end":1258,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13903480,"byte_end":13903483,"line_start":1259,"line_end":1259,"column_start":5,"column_end":8}},{"value":"/ Use `Client::builder()` if you wish to handle the failure as an `Error`","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13903488,"byte_end":13903563,"line_start":1260,"line_end":1260,"column_start":5,"column_end":80}},{"value":"/ instead of panicking.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13903568,"byte_end":13903593,"line_start":1261,"line_end":1261,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13903821,"byte_end":13903828,"line_start":1269,"line_end":1269,"column_start":12,"column_end":19},"name":"builder","qualname":"<Client>::builder","value":"pub fn builder() -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Creates a `ClientBuilder` to configure a `Client`.","sig":null,"attributes":[{"value":"/ Creates a `ClientBuilder` to configure a `Client`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13903695,"byte_end":13903749,"line_start":1266,"line_end":1266,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13903754,"byte_end":13903757,"line_start":1267,"line_end":1267,"column_start":5,"column_end":8}},{"value":"/ This is the same as `ClientBuilder::new()`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13903762,"byte_end":13903809,"line_start":1268,"line_end":1268,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13904063,"byte_end":13904066,"line_start":1278,"line_end":1278,"column_start":12,"column_end":15},"name":"get","qualname":"<Client>::get","value":"pub fn get<U: IntoUrl>(&Self, U) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to make a `GET` request to a URL.","sig":null,"attributes":[{"value":"/ Convenience method to make a `GET` request to a URL.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13903890,"byte_end":13903946,"line_start":1273,"line_end":1273,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13903951,"byte_end":13903954,"line_start":1274,"line_end":1274,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13903959,"byte_end":13903971,"line_start":1275,"line_end":1275,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13903976,"byte_end":13903979,"line_start":1276,"line_end":1276,"column_start":5,"column_end":8}},{"value":"/ This method fails whenever the supplied `Url` cannot be parsed.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13903984,"byte_end":13904051,"line_start":1277,"line_end":1277,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13904338,"byte_end":13904342,"line_start":1287,"line_end":1287,"column_start":12,"column_end":16},"name":"post","qualname":"<Client>::post","value":"pub fn post<U: IntoUrl>(&Self, U) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to make a `POST` request to a URL.","sig":null,"attributes":[{"value":"/ Convenience method to make a `POST` request to a URL.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13904164,"byte_end":13904221,"line_start":1282,"line_end":1282,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13904226,"byte_end":13904229,"line_start":1283,"line_end":1283,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13904234,"byte_end":13904246,"line_start":1284,"line_end":1284,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13904251,"byte_end":13904254,"line_start":1285,"line_end":1285,"column_start":5,"column_end":8}},{"value":"/ This method fails whenever the supplied `Url` cannot be parsed.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13904259,"byte_end":13904326,"line_start":1286,"line_end":1286,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13904614,"byte_end":13904617,"line_start":1296,"line_end":1296,"column_start":12,"column_end":15},"name":"put","qualname":"<Client>::put","value":"pub fn put<U: IntoUrl>(&Self, U) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to make a `PUT` request to a URL.","sig":null,"attributes":[{"value":"/ Convenience method to make a `PUT` request to a URL.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13904441,"byte_end":13904497,"line_start":1291,"line_end":1291,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13904502,"byte_end":13904505,"line_start":1292,"line_end":1292,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13904510,"byte_end":13904522,"line_start":1293,"line_end":1293,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13904527,"byte_end":13904530,"line_start":1294,"line_end":1294,"column_start":5,"column_end":8}},{"value":"/ This method fails whenever the supplied `Url` cannot be parsed.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13904535,"byte_end":13904602,"line_start":1295,"line_end":1295,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13904890,"byte_end":13904895,"line_start":1305,"line_end":1305,"column_start":12,"column_end":17},"name":"patch","qualname":"<Client>::patch","value":"pub fn patch<U: IntoUrl>(&Self, U) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to make a `PATCH` request to a URL.","sig":null,"attributes":[{"value":"/ Convenience method to make a `PATCH` request to a URL.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13904715,"byte_end":13904773,"line_start":1300,"line_end":1300,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13904778,"byte_end":13904781,"line_start":1301,"line_end":1301,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13904786,"byte_end":13904798,"line_start":1302,"line_end":1302,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13904803,"byte_end":13904806,"line_start":1303,"line_end":1303,"column_start":5,"column_end":8}},{"value":"/ This method fails whenever the supplied `Url` cannot be parsed.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13904811,"byte_end":13904878,"line_start":1304,"line_end":1304,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13905171,"byte_end":13905177,"line_start":1314,"line_end":1314,"column_start":12,"column_end":18},"name":"delete","qualname":"<Client>::delete","value":"pub fn delete<U: IntoUrl>(&Self, U) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to make a `DELETE` request to a URL.","sig":null,"attributes":[{"value":"/ Convenience method to make a `DELETE` request to a URL.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13904995,"byte_end":13905054,"line_start":1309,"line_end":1309,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13905059,"byte_end":13905062,"line_start":1310,"line_end":1310,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13905067,"byte_end":13905079,"line_start":1311,"line_end":1311,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13905084,"byte_end":13905087,"line_start":1312,"line_end":1312,"column_start":5,"column_end":8}},{"value":"/ This method fails whenever the supplied `Url` cannot be parsed.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13905092,"byte_end":13905159,"line_start":1313,"line_end":1313,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13905452,"byte_end":13905456,"line_start":1323,"line_end":1323,"column_start":12,"column_end":16},"name":"head","qualname":"<Client>::head","value":"pub fn head<U: IntoUrl>(&Self, U) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to make a `HEAD` request to a URL.","sig":null,"attributes":[{"value":"/ Convenience method to make a `HEAD` request to a URL.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13905278,"byte_end":13905335,"line_start":1318,"line_end":1318,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13905340,"byte_end":13905343,"line_start":1319,"line_end":1319,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13905348,"byte_end":13905360,"line_start":1320,"line_end":1320,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13905365,"byte_end":13905368,"line_start":1321,"line_end":1321,"column_start":5,"column_end":8}},{"value":"/ This method fails whenever the supplied `Url` cannot be parsed.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13905373,"byte_end":13905440,"line_start":1322,"line_end":1322,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13905853,"byte_end":13905860,"line_start":1335,"line_end":1335,"column_start":12,"column_end":19},"name":"request","qualname":"<Client>::request","value":"pub fn request<U: IntoUrl>(&Self, Method, U) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Start building a `Request` with the `Method` and `Url`.","sig":null,"attributes":[{"value":"/ Start building a `Request` with the `Method` and `Url`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13905555,"byte_end":13905614,"line_start":1327,"line_end":1327,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13905619,"byte_end":13905622,"line_start":1328,"line_end":1328,"column_start":5,"column_end":8}},{"value":"/ Returns a `RequestBuilder`, which will allow setting headers and","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13905627,"byte_end":13905695,"line_start":1329,"line_end":1329,"column_start":5,"column_end":73}},{"value":"/ the request body before sending.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13905700,"byte_end":13905736,"line_start":1330,"line_end":1330,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13905741,"byte_end":13905744,"line_start":1331,"line_end":1331,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13905749,"byte_end":13905761,"line_start":1332,"line_end":1332,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13905766,"byte_end":13905769,"line_start":1333,"line_end":1333,"column_start":5,"column_end":8}},{"value":"/ This method fails whenever the supplied `Url` cannot be parsed.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13905774,"byte_end":13905841,"line_start":1334,"line_end":1334,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13906513,"byte_end":13906520,"line_start":1352,"line_end":1352,"column_start":12,"column_end":19},"name":"execute","qualname":"<Client>::execute","value":"pub fn execute(&Self, Request) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Executes a `Request`.","sig":null,"attributes":[{"value":"/ Executes a `Request`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13906058,"byte_end":13906083,"line_start":1340,"line_end":1340,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13906088,"byte_end":13906091,"line_start":1341,"line_end":1341,"column_start":5,"column_end":8}},{"value":"/ A `Request` can be built manually with `Request::new()` or obtained","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13906096,"byte_end":13906167,"line_start":1342,"line_end":1342,"column_start":5,"column_end":76}},{"value":"/ from a RequestBuilder with `RequestBuilder::build()`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13906172,"byte_end":13906229,"line_start":1343,"line_end":1343,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13906234,"byte_end":13906237,"line_start":1344,"line_end":1344,"column_start":5,"column_end":8}},{"value":"/ You should prefer to use the `RequestBuilder` and","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13906242,"byte_end":13906295,"line_start":1345,"line_end":1345,"column_start":5,"column_end":58}},{"value":"/ `RequestBuilder::send()`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13906300,"byte_end":13906329,"line_start":1346,"line_end":1346,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13906334,"byte_end":13906337,"line_start":1347,"line_end":1347,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13906342,"byte_end":13906354,"line_start":1348,"line_end":1348,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13906359,"byte_end":13906362,"line_start":1349,"line_end":1349,"column_start":5,"column_end":8}},{"value":"/ This method fails if there was an error while sending request,","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13906367,"byte_end":13906433,"line_start":1350,"line_end":1350,"column_start":5,"column_end":71}},{"value":"/ redirect loop was detected or redirect limit was exhausted.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13906438,"byte_end":13906501,"line_start":1351,"line_end":1351,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":831},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13939394,"byte_end":13939401,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"name":"Request","qualname":"::async_impl::request::Request","value":"Request {  }","parent":null,"children":[{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837}],"decl_id":null,"docs":" A request which can be executed with `Client::execute()`.\n","sig":null,"attributes":[{"value":"/ A request which can be executed with `Client::execute()`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13939321,"byte_end":13939382,"line_start":23,"line_end":23,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":838},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13939753,"byte_end":13939767,"line_start":37,"line_end":37,"column_start":12,"column_end":26},"name":"RequestBuilder","qualname":"::async_impl::request::RequestBuilder","value":"RequestBuilder {  }","parent":null,"children":[{"krate":0,"index":839},{"krate":0,"index":840}],"decl_id":null,"docs":" A builder to construct the properties of a `Request`.","sig":null,"attributes":[{"value":"/ A builder to construct the properties of a `Request`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13939542,"byte_end":13939599,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13939600,"byte_end":13939603,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ To construct a `RequestBuilder`, refer to the `Client` documentation.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13939604,"byte_end":13939677,"line_start":35,"line_end":35,"column_start":1,"column_end":74}},{"value":"must_use = \"RequestBuilder does nothing until you 'send' it\"","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13939678,"byte_end":13939741,"line_start":36,"line_end":36,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13939904,"byte_end":13939907,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Request>::new","value":"pub fn new(Method, Url) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new request.\n","sig":null,"attributes":[{"value":"/ Constructs a new request.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13939849,"byte_end":13939878,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13939883,"byte_end":13939892,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13940196,"byte_end":13940202,"line_start":58,"line_end":58,"column_start":12,"column_end":18},"name":"method","qualname":"<Request>::method","value":"pub fn method(&Self) -> &Method","parent":null,"children":[],"decl_id":null,"docs":" Get the method.\n","sig":null,"attributes":[{"value":"/ Get the method.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13940151,"byte_end":13940170,"line_start":56,"line_end":56,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13940175,"byte_end":13940184,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13940323,"byte_end":13940333,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"method_mut","qualname":"<Request>::method_mut","value":"pub fn method_mut(&mut Self) -> &mut Method","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the method.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the method.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13940255,"byte_end":13940297,"line_start":62,"line_end":62,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13940302,"byte_end":13940311,"line_start":63,"line_end":63,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13940440,"byte_end":13940443,"line_start":70,"line_end":70,"column_start":12,"column_end":15},"name":"url","qualname":"<Request>::url","value":"pub fn url(&Self) -> &Url","parent":null,"children":[],"decl_id":null,"docs":" Get the url.\n","sig":null,"attributes":[{"value":"/ Get the url.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13940398,"byte_end":13940414,"line_start":68,"line_end":68,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13940419,"byte_end":13940428,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13940555,"byte_end":13940562,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"url_mut","qualname":"<Request>::url_mut","value":"pub fn url_mut(&mut Self) -> &mut Url","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the url.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the url.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13940490,"byte_end":13940529,"line_start":74,"line_end":74,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13940534,"byte_end":13940543,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13940667,"byte_end":13940674,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"headers","qualname":"<Request>::headers","value":"pub fn headers(&Self) -> &HeaderMap","parent":null,"children":[],"decl_id":null,"docs":" Get the headers.\n","sig":null,"attributes":[{"value":"/ Get the headers.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13940621,"byte_end":13940641,"line_start":80,"line_end":80,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13940646,"byte_end":13940655,"line_start":81,"line_end":81,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13940800,"byte_end":13940811,"line_start":88,"line_end":88,"column_start":12,"column_end":23},"name":"headers_mut","qualname":"<Request>::headers_mut","value":"pub fn headers_mut(&mut Self) -> &mut HeaderMap","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the headers.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the headers.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13940731,"byte_end":13940774,"line_start":86,"line_end":86,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13940779,"byte_end":13940788,"line_start":87,"line_end":87,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13940923,"byte_end":13940927,"line_start":94,"line_end":94,"column_start":12,"column_end":16},"name":"body","qualname":"<Request>::body","value":"pub fn body(&Self) -> Option<&Body>","parent":null,"children":[],"decl_id":null,"docs":" Get the body.\n","sig":null,"attributes":[{"value":"/ Get the body.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13940880,"byte_end":13940897,"line_start":92,"line_end":92,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13940902,"byte_end":13940911,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13941058,"byte_end":13941066,"line_start":100,"line_end":100,"column_start":12,"column_end":20},"name":"body_mut","qualname":"<Request>::body_mut","value":"pub fn body_mut(&mut Self) -> &mut Option<Body>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the body.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the body.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13940992,"byte_end":13941032,"line_start":98,"line_end":98,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13941037,"byte_end":13941046,"line_start":99,"line_end":99,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13941181,"byte_end":13941188,"line_start":106,"line_end":106,"column_start":12,"column_end":19},"name":"timeout","qualname":"<Request>::timeout","value":"pub fn timeout(&Self) -> Option<&Duration>","parent":null,"children":[],"decl_id":null,"docs":" Get the timeout.\n","sig":null,"attributes":[{"value":"/ Get the timeout.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13941135,"byte_end":13941155,"line_start":104,"line_end":104,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13941160,"byte_end":13941169,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13941329,"byte_end":13941340,"line_start":112,"line_end":112,"column_start":12,"column_end":23},"name":"timeout_mut","qualname":"<Request>::timeout_mut","value":"pub fn timeout_mut(&mut Self) -> &mut Option<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the timeout.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the timeout.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13941260,"byte_end":13941303,"line_start":110,"line_end":110,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13941308,"byte_end":13941317,"line_start":111,"line_end":111,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13941467,"byte_end":13941474,"line_start":118,"line_end":118,"column_start":12,"column_end":19},"name":"version","qualname":"<Request>::version","value":"pub fn version(&Self) -> Version","parent":null,"children":[],"decl_id":null,"docs":" Get the http version.\n","sig":null,"attributes":[{"value":"/ Get the http version.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13941416,"byte_end":13941441,"line_start":116,"line_end":116,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13941446,"byte_end":13941455,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13941601,"byte_end":13941612,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"version_mut","qualname":"<Request>::version_mut","value":"pub fn version_mut(&mut Self) -> &mut Version","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the http version.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the http version.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13941527,"byte_end":13941575,"line_start":122,"line_end":122,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13941580,"byte_end":13941589,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13941823,"byte_end":13941832,"line_start":131,"line_end":131,"column_start":12,"column_end":21},"name":"try_clone","qualname":"<Request>::try_clone","value":"pub fn try_clone(&Self) -> Option<Request>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to clone the request.","sig":null,"attributes":[{"value":"/ Attempt to clone the request.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13941679,"byte_end":13941712,"line_start":128,"line_end":128,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13941717,"byte_end":13941720,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if the request can not be cloned, i.e. if the body is a stream.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13941725,"byte_end":13941811,"line_start":130,"line_end":130,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13943159,"byte_end":13943165,"line_start":183,"line_end":183,"column_start":12,"column_end":18},"name":"header","qualname":"<RequestBuilder>::header","value":"pub fn header<K, V>(Self, K, V) -> RequestBuilder where\nHeaderName: TryFrom<K>, <HeaderName as TryFrom<K>>::Error: Into<http::Error>,\nHeaderValue: TryFrom<V>, <HeaderValue as TryFrom<V>>::Error: Into<http::Error>","parent":null,"children":[],"decl_id":null,"docs":" Add a `Header` to this Request.\n","sig":null,"attributes":[{"value":"/ Add a `Header` to this Request.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13943112,"byte_end":13943147,"line_start":182,"line_end":182,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13944706,"byte_end":13944713,"line_start":223,"line_end":223,"column_start":12,"column_end":19},"name":"headers","qualname":"<RequestBuilder>::headers","value":"pub fn headers(Self, crate::header::HeaderMap) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Add a set of Headers to the existing ones on this Request.","sig":null,"attributes":[{"value":"/ Add a set of Headers to the existing ones on this Request.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13944566,"byte_end":13944628,"line_start":220,"line_end":220,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13944633,"byte_end":13944636,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ The headers will be merged in to any already set.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13944641,"byte_end":13944694,"line_start":222,"line_end":222,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":867},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13945335,"byte_end":13945345,"line_start":244,"line_end":244,"column_start":12,"column_end":22},"name":"basic_auth","qualname":"<RequestBuilder>::basic_auth","value":"pub fn basic_auth<U, P>(Self, U, Option<P>) -> RequestBuilder where\nU: fmt::Display, P: fmt::Display","parent":null,"children":[],"decl_id":null,"docs":" Enable HTTP basic authentication.","sig":null,"attributes":[{"value":"/ Enable HTTP basic authentication.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13944931,"byte_end":13944968,"line_start":230,"line_end":230,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13944973,"byte_end":13944976,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13944981,"byte_end":13944992,"line_start":232,"line_end":232,"column_start":5,"column_end":16}},{"value":"/ # use reqwest::Error;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13944997,"byte_end":13945022,"line_start":233,"line_end":233,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13945027,"byte_end":13945030,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ # async fn run() -> Result<(), Error> {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13945035,"byte_end":13945078,"line_start":235,"line_end":235,"column_start":5,"column_end":48}},{"value":"/ let client = reqwest::Client::new();","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13945083,"byte_end":13945123,"line_start":236,"line_end":236,"column_start":5,"column_end":45}},{"value":"/ let resp = client.delete(\"http://httpbin.org/delete\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13945128,"byte_end":13945185,"line_start":237,"line_end":237,"column_start":5,"column_end":62}},{"value":"/     .basic_auth(\"admin\", Some(\"good password\"))","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13945190,"byte_end":13945241,"line_start":238,"line_end":238,"column_start":5,"column_end":56}},{"value":"/     .send()","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13945246,"byte_end":13945261,"line_start":239,"line_end":239,"column_start":5,"column_end":20}},{"value":"/     .await?;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13945266,"byte_end":13945282,"line_start":240,"line_end":240,"column_start":5,"column_end":21}},{"value":"/ # Ok(())","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13945287,"byte_end":13945299,"line_start":241,"line_end":241,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13945304,"byte_end":13945311,"line_start":242,"line_end":242,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13945316,"byte_end":13945323,"line_start":243,"line_end":243,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13946026,"byte_end":13946037,"line_start":263,"line_end":263,"column_start":12,"column_end":23},"name":"bearer_auth","qualname":"<RequestBuilder>::bearer_auth","value":"pub fn bearer_auth<T>(Self, T) -> RequestBuilder where T: fmt::Display","parent":null,"children":[],"decl_id":null,"docs":" Enable HTTP bearer authentication.\n","sig":null,"attributes":[{"value":"/ Enable HTTP bearer authentication.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13945976,"byte_end":13946014,"line_start":262,"line_end":262,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13946300,"byte_end":13946304,"line_start":272,"line_end":272,"column_start":12,"column_end":16},"name":"body","qualname":"<RequestBuilder>::body","value":"pub fn body<T: Into<Body>>(Self, T) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set the request body.\n","sig":null,"attributes":[{"value":"/ Set the request body.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13946263,"byte_end":13946288,"line_start":271,"line_end":271,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13946765,"byte_end":13946772,"line_start":284,"line_end":284,"column_start":12,"column_end":19},"name":"timeout","qualname":"<RequestBuilder>::timeout","value":"pub fn timeout(Self, Duration) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Enables a request timeout.","sig":null,"attributes":[{"value":"/ Enables a request timeout.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13946490,"byte_end":13946520,"line_start":279,"line_end":279,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13946525,"byte_end":13946528,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ The timeout is applied from when the request starts connecting until the","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13946533,"byte_end":13946609,"line_start":281,"line_end":281,"column_start":5,"column_end":81}},{"value":"/ response body has finished. It affects only this request and overrides","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13946614,"byte_end":13946688,"line_start":282,"line_end":282,"column_start":5,"column_end":79}},{"value":"/ the timeout configured using `ClientBuilder::timeout()`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13946693,"byte_end":13946753,"line_start":283,"line_end":283,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13948969,"byte_end":13948974,"line_start":347,"line_end":347,"column_start":12,"column_end":17},"name":"query","qualname":"<RequestBuilder>::query","value":"pub fn query<T: Serialize + ?Sized>(Self, &T) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Modify the query string of the URL.","sig":null,"attributes":[{"value":"/ Modify the query string of the URL.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13948079,"byte_end":13948118,"line_start":329,"line_end":329,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13948123,"byte_end":13948126,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ Modifies the URL of this request, adding the parameters provided.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13948131,"byte_end":13948200,"line_start":331,"line_end":331,"column_start":5,"column_end":74}},{"value":"/ This method appends and does not overwrite. This means that it can","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13948205,"byte_end":13948275,"line_start":332,"line_end":332,"column_start":5,"column_end":75}},{"value":"/ be called multiple times and that existing query parameters are not","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13948280,"byte_end":13948351,"line_start":333,"line_end":333,"column_start":5,"column_end":76}},{"value":"/ overwritten if the same key is used. The key will simply show up","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13948356,"byte_end":13948424,"line_start":334,"line_end":334,"column_start":5,"column_end":73}},{"value":"/ twice in the query string.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13948429,"byte_end":13948459,"line_start":335,"line_end":335,"column_start":5,"column_end":35}},{"value":"/ Calling `.query([(\"foo\", \"a\"), (\"foo\", \"b\")])` gives `\"foo=a&foo=b\"`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13948464,"byte_end":13948537,"line_start":336,"line_end":336,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13948542,"byte_end":13948545,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13948550,"byte_end":13948560,"line_start":338,"line_end":338,"column_start":5,"column_end":15}},{"value":"/ This method does not support serializing a single key-value","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13948565,"byte_end":13948628,"line_start":339,"line_end":339,"column_start":5,"column_end":68}},{"value":"/ pair. Instead of using `.query((\"key\", \"val\"))`, use a sequence, such","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13948633,"byte_end":13948706,"line_start":340,"line_end":340,"column_start":5,"column_end":78}},{"value":"/ as `.query(&[(\"key\", \"val\")])`. It's also possible to serialize structs","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13948711,"byte_end":13948786,"line_start":341,"line_end":341,"column_start":5,"column_end":80}},{"value":"/ and maps into a key-value pair.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13948791,"byte_end":13948826,"line_start":342,"line_end":342,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13948831,"byte_end":13948834,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13948839,"byte_end":13948851,"line_start":344,"line_end":344,"column_start":5,"column_end":17}},{"value":"/ This method will fail if the object you provide cannot be serialized","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13948856,"byte_end":13948928,"line_start":345,"line_end":345,"column_start":5,"column_end":77}},{"value":"/ into a query string.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13948933,"byte_end":13948957,"line_start":346,"line_end":346,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13949731,"byte_end":13949738,"line_start":370,"line_end":370,"column_start":12,"column_end":19},"name":"version","qualname":"<RequestBuilder>::version","value":"pub fn version(Self, Version) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set HTTP version\n","sig":null,"attributes":[{"value":"/ Set HTTP version","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13949699,"byte_end":13949719,"line_start":369,"line_end":369,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13949937,"byte_end":13949941,"line_start":378,"line_end":378,"column_start":12,"column_end":16},"name":"form","qualname":"<RequestBuilder>::form","value":"pub fn form<T: Serialize + ?Sized>(Self, &T) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Send a form body.\n","sig":null,"attributes":[{"value":"/ Send a form body.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13949904,"byte_end":13949925,"line_start":377,"line_end":377,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13951019,"byte_end":13951023,"line_start":410,"line_end":410,"column_start":12,"column_end":16},"name":"json","qualname":"<RequestBuilder>::json","value":"pub fn json<T: Serialize + ?Sized>(Self, &T) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Send a JSON body.","sig":null,"attributes":[{"value":"/ Send a JSON body.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13950636,"byte_end":13950657,"line_start":398,"line_end":398,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13950662,"byte_end":13950665,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ # Optional","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13950670,"byte_end":13950684,"line_start":400,"line_end":400,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13950689,"byte_end":13950692,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ This requires the optional `json` feature enabled.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13950697,"byte_end":13950751,"line_start":402,"line_end":402,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13950756,"byte_end":13950759,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13950764,"byte_end":13950776,"line_start":404,"line_end":404,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13950781,"byte_end":13950784,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ Serialization can fail if `T`'s implementation of `Serialize` decides to","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13950789,"byte_end":13950865,"line_start":406,"line_end":406,"column_start":5,"column_end":81}},{"value":"/ fail, or if `T` contains a map with non-string keys.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13950870,"byte_end":13950926,"line_start":407,"line_end":407,"column_start":5,"column_end":61}},{"value":"cfg(feature = \"json\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13950931,"byte_end":13950955,"line_start":408,"line_end":408,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13951944,"byte_end":13951962,"line_start":437,"line_end":437,"column_start":12,"column_end":30},"name":"fetch_mode_no_cors","qualname":"<RequestBuilder>::fetch_mode_no_cors","value":"pub fn fetch_mode_no_cors(Self) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Disable CORS on fetching the request.","sig":null,"attributes":[{"value":"/ Disable CORS on fetching the request.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13951646,"byte_end":13951687,"line_start":428,"line_end":428,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13951692,"byte_end":13951695,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ # WASM","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13951700,"byte_end":13951710,"line_start":430,"line_end":430,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13951715,"byte_end":13951718,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ This option is only effective with WebAssembly target.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13951723,"byte_end":13951781,"line_start":432,"line_end":432,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13951786,"byte_end":13951789,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ The [request mode][mdn] will be set to 'no-cors'.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13951794,"byte_end":13951847,"line_start":434,"line_end":434,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13951852,"byte_end":13951855,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/Request/mode","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13951860,"byte_end":13951932,"line_start":436,"line_end":436,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13952127,"byte_end":13952132,"line_start":443,"line_end":443,"column_start":12,"column_end":17},"name":"build","qualname":"<RequestBuilder>::build","value":"pub fn build(Self) -> crate::Result<Request>","parent":null,"children":[],"decl_id":null,"docs":" Build a `Request`, which can be inspected, modified and executed with\n `Client::execute()`.\n","sig":null,"attributes":[{"value":"/ Build a `Request`, which can be inspected, modified and executed with","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13952013,"byte_end":13952086,"line_start":441,"line_end":441,"column_start":5,"column_end":78}},{"value":"/ `Client::execute()`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13952091,"byte_end":13952115,"line_start":442,"line_end":442,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13952783,"byte_end":13952787,"line_start":468,"line_end":468,"column_start":12,"column_end":16},"name":"send","qualname":"<RequestBuilder>::send","value":"pub fn send(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Constructs the Request and sends it to the target URL, returning a\n future Response.","sig":null,"attributes":[{"value":"/ Constructs the Request and sends it to the target URL, returning a","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13952199,"byte_end":13952269,"line_start":447,"line_end":447,"column_start":5,"column_end":75}},{"value":"/ future Response.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13952274,"byte_end":13952294,"line_start":448,"line_end":448,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13952299,"byte_end":13952302,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13952307,"byte_end":13952319,"line_start":450,"line_end":450,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13952324,"byte_end":13952327,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ This method fails if there was an error while sending request,","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13952332,"byte_end":13952398,"line_start":452,"line_end":452,"column_start":5,"column_end":71}},{"value":"/ redirect loop was detected or redirect limit was exhausted.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13952403,"byte_end":13952466,"line_start":453,"line_end":453,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13952471,"byte_end":13952474,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13952479,"byte_end":13952492,"line_start":455,"line_end":455,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13952497,"byte_end":13952500,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13952505,"byte_end":13952518,"line_start":457,"line_end":457,"column_start":5,"column_end":18}},{"value":"/ # use reqwest::Error;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13952523,"byte_end":13952548,"line_start":458,"line_end":458,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13952553,"byte_end":13952558,"line_start":459,"line_end":459,"column_start":5,"column_end":10}},{"value":"/ # async fn run() -> Result<(), Error> {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13952563,"byte_end":13952606,"line_start":460,"line_end":460,"column_start":5,"column_end":48}},{"value":"/ let response = reqwest::Client::new()","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13952611,"byte_end":13952652,"line_start":461,"line_end":461,"column_start":5,"column_end":46}},{"value":"/     .get(\"https://hyper.rs\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13952657,"byte_end":13952689,"line_start":462,"line_end":462,"column_start":5,"column_end":37}},{"value":"/     .send()","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13952694,"byte_end":13952709,"line_start":463,"line_end":463,"column_start":5,"column_end":20}},{"value":"/     .await?;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13952714,"byte_end":13952730,"line_start":464,"line_end":464,"column_start":5,"column_end":21}},{"value":"/ # Ok(())","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13952735,"byte_end":13952747,"line_start":465,"line_end":465,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13952752,"byte_end":13952759,"line_start":466,"line_end":466,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13952764,"byte_end":13952771,"line_start":467,"line_end":467,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13953566,"byte_end":13953575,"line_start":494,"line_end":494,"column_start":12,"column_end":21},"name":"try_clone","qualname":"<RequestBuilder>::try_clone","value":"pub fn try_clone(&Self) -> Option<RequestBuilder>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to clone the RequestBuilder.","sig":null,"attributes":[{"value":"/ Attempt to clone the RequestBuilder.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13953006,"byte_end":13953046,"line_start":475,"line_end":475,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13953051,"byte_end":13953054,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if the RequestBuilder can not be cloned,","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13953059,"byte_end":13953122,"line_start":477,"line_end":477,"column_start":5,"column_end":68}},{"value":"/ i.e. if the request body is a stream.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13953127,"byte_end":13953168,"line_start":478,"line_end":478,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13953173,"byte_end":13953176,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13953181,"byte_end":13953195,"line_start":480,"line_end":480,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13953200,"byte_end":13953203,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13953208,"byte_end":13953215,"line_start":482,"line_end":482,"column_start":5,"column_end":12}},{"value":"/ # use reqwest::Error;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13953220,"byte_end":13953245,"line_start":483,"line_end":483,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13953250,"byte_end":13953255,"line_start":484,"line_end":484,"column_start":5,"column_end":10}},{"value":"/ # fn run() -> Result<(), Error> {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13953260,"byte_end":13953297,"line_start":485,"line_end":485,"column_start":5,"column_end":42}},{"value":"/ let client = reqwest::Client::new();","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13953302,"byte_end":13953342,"line_start":486,"line_end":486,"column_start":5,"column_end":45}},{"value":"/ let builder = client.post(\"http://httpbin.org/post\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13953347,"byte_end":13953403,"line_start":487,"line_end":487,"column_start":5,"column_end":61}},{"value":"/     .body(\"from a &str!\");","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13953408,"byte_end":13953438,"line_start":488,"line_end":488,"column_start":5,"column_end":35}},{"value":"/ let clone = builder.try_clone();","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13953443,"byte_end":13953479,"line_start":489,"line_end":489,"column_start":5,"column_end":41}},{"value":"/ assert!(clone.is_some());","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13953484,"byte_end":13953513,"line_start":490,"line_end":490,"column_start":5,"column_end":34}},{"value":"/ # Ok(())","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13953518,"byte_end":13953530,"line_start":491,"line_end":491,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13953535,"byte_end":13953542,"line_start":492,"line_end":492,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13953547,"byte_end":13953554,"line_start":493,"line_end":493,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":975},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13970844,"byte_end":13970852,"line_start":26,"line_end":26,"column_start":12,"column_end":20},"name":"Response","qualname":"::async_impl::response::Response","value":"Response {  }","parent":null,"children":[{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981}],"decl_id":null,"docs":" A Response to a submitted `Request`.\n","sig":null,"attributes":[{"value":"/ A Response to a submitted `Request`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13970792,"byte_end":13970832,"line_start":25,"line_end":25,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":984},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13971841,"byte_end":13971847,"line_start":64,"line_end":64,"column_start":12,"column_end":18},"name":"status","qualname":"<Response>::status","value":"pub fn status(&Self) -> StatusCode","parent":null,"children":[],"decl_id":null,"docs":" Get the `StatusCode` of this `Response`.\n","sig":null,"attributes":[{"value":"/ Get the `StatusCode` of this `Response`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13971771,"byte_end":13971815,"line_start":62,"line_end":62,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13971820,"byte_end":13971829,"line_start":63,"line_end":63,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":985},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13971974,"byte_end":13971981,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"version","qualname":"<Response>::version","value":"pub fn version(&Self) -> Version","parent":null,"children":[],"decl_id":null,"docs":" Get the HTTP `Version` of this `Response`.\n","sig":null,"attributes":[{"value":"/ Get the HTTP `Version` of this `Response`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13971902,"byte_end":13971948,"line_start":68,"line_end":68,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13971953,"byte_end":13971962,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":986},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13972101,"byte_end":13972108,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"headers","qualname":"<Response>::headers","value":"pub fn headers(&Self) -> &HeaderMap","parent":null,"children":[],"decl_id":null,"docs":" Get the `Headers` of this `Response`.\n","sig":null,"attributes":[{"value":"/ Get the `Headers` of this `Response`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13972034,"byte_end":13972075,"line_start":74,"line_end":74,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13972080,"byte_end":13972089,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":987},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13972255,"byte_end":13972266,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"headers_mut","qualname":"<Response>::headers_mut","value":"pub fn headers_mut(&mut Self) -> &mut HeaderMap","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the `Headers` of this `Response`.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the `Headers` of this `Response`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13972165,"byte_end":13972229,"line_start":80,"line_end":80,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13972234,"byte_end":13972243,"line_start":81,"line_end":81,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13972630,"byte_end":13972644,"line_start":93,"line_end":93,"column_start":12,"column_end":26},"name":"content_length","qualname":"<Response>::content_length","value":"pub fn content_length(&Self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Get the content-length of this response, if known.","sig":null,"attributes":[{"value":"/ Get the content-length of this response, if known.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13972335,"byte_end":13972389,"line_start":86,"line_end":86,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13972394,"byte_end":13972397,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Reasons it may not be known:","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13972402,"byte_end":13972434,"line_start":88,"line_end":88,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13972439,"byte_end":13972442,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ - The server didn't send a `content-length` header.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13972447,"byte_end":13972502,"line_start":90,"line_end":90,"column_start":5,"column_end":60}},{"value":"/ - The response is compressed and automatically decoded (thus changing","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13972507,"byte_end":13972580,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/   the actual decoded length).","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13972585,"byte_end":13972618,"line_start":92,"line_end":92,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":992},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13973321,"byte_end":13973324,"line_start":114,"line_end":114,"column_start":12,"column_end":15},"name":"url","qualname":"<Response>::url","value":"pub fn url(&Self) -> &Url","parent":null,"children":[],"decl_id":null,"docs":" Get the final `Url` of this `Response`.\n","sig":null,"attributes":[{"value":"/ Get the final `Url` of this `Response`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13973252,"byte_end":13973295,"line_start":112,"line_end":112,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13973300,"byte_end":13973309,"line_start":113,"line_end":113,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":993},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13973438,"byte_end":13973449,"line_start":119,"line_end":119,"column_start":12,"column_end":23},"name":"remote_addr","qualname":"<Response>::remote_addr","value":"pub fn remote_addr(&Self) -> Option<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Get the remote address used to get this `Response`.\n","sig":null,"attributes":[{"value":"/ Get the remote address used to get this `Response`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13973371,"byte_end":13973426,"line_start":118,"line_end":118,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":995},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13974281,"byte_end":13974285,"line_start":147,"line_end":147,"column_start":18,"column_end":22},"name":"text","qualname":"<Response>::text","value":"pub async fn text(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get the full response text.","sig":null,"attributes":[{"value":"/ Get the full response text.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13973612,"byte_end":13973643,"line_start":127,"line_end":127,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13973648,"byte_end":13973651,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This method decodes the response body with BOM sniffing","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13973656,"byte_end":13973715,"line_start":129,"line_end":129,"column_start":5,"column_end":64}},{"value":"/ and with malformed sequences replaced with the REPLACEMENT CHARACTER.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13973720,"byte_end":13973793,"line_start":130,"line_end":130,"column_start":5,"column_end":78}},{"value":"/ Encoding is determinated from the `charset` parameter of `Content-Type` header,","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13973798,"byte_end":13973881,"line_start":131,"line_end":131,"column_start":5,"column_end":88}},{"value":"/ and defaults to `utf-8` if not presented.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13973886,"byte_end":13973931,"line_start":132,"line_end":132,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13973936,"byte_end":13973939,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13973944,"byte_end":13973957,"line_start":134,"line_end":134,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13973962,"byte_end":13973965,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13973970,"byte_end":13973977,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # async fn run() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13973982,"byte_end":13974046,"line_start":137,"line_end":137,"column_start":5,"column_end":69}},{"value":"/ let content = reqwest::get(\"http://httpbin.org/range/26\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13974051,"byte_end":13974112,"line_start":138,"line_end":138,"column_start":5,"column_end":66}},{"value":"/     .await?","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13974117,"byte_end":13974132,"line_start":139,"line_end":139,"column_start":5,"column_end":20}},{"value":"/     .text()","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13974137,"byte_end":13974152,"line_start":140,"line_end":140,"column_start":5,"column_end":20}},{"value":"/     .await?;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13974157,"byte_end":13974173,"line_start":141,"line_end":141,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13974178,"byte_end":13974181,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ println!(\"text: {:?}\", content);","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13974186,"byte_end":13974222,"line_start":143,"line_end":143,"column_start":5,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13974227,"byte_end":13974239,"line_start":144,"line_end":144,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13974244,"byte_end":13974251,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13974256,"byte_end":13974263,"line_start":146,"line_end":146,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13975324,"byte_end":13975341,"line_start":174,"line_end":174,"column_start":18,"column_end":35},"name":"text_with_charset","qualname":"<Response>::text_with_charset","value":"pub async fn text_with_charset<'_>(Self, &'_ str) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get the full response text given a specific encoding.","sig":null,"attributes":[{"value":"/ Get the full response text given a specific encoding.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13974376,"byte_end":13974433,"line_start":151,"line_end":151,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13974438,"byte_end":13974441,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This method decodes the response body with BOM sniffing","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13974446,"byte_end":13974505,"line_start":153,"line_end":153,"column_start":5,"column_end":64}},{"value":"/ and with malformed sequences replaced with the REPLACEMENT CHARACTER.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13974510,"byte_end":13974583,"line_start":154,"line_end":154,"column_start":5,"column_end":78}},{"value":"/ You can provide a default encoding for decoding the raw message, while the","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13974588,"byte_end":13974666,"line_start":155,"line_end":155,"column_start":5,"column_end":83}},{"value":"/ `charset` parameter of `Content-Type` header is still prioritized. For more information","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13974671,"byte_end":13974762,"line_start":156,"line_end":156,"column_start":5,"column_end":96}},{"value":"/ about the possible encoding name, please go to [`encoding_rs`] docs.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13974767,"byte_end":13974839,"line_start":157,"line_end":157,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13974844,"byte_end":13974847,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ [`encoding_rs`]: https://docs.rs/encoding_rs/0.8/encoding_rs/#relationship-with-windows-code-pages","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13974852,"byte_end":13974954,"line_start":159,"line_end":159,"column_start":5,"column_end":107}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13974959,"byte_end":13974962,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13974967,"byte_end":13974980,"line_start":161,"line_end":161,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13974985,"byte_end":13974988,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13974993,"byte_end":13975000,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ # async fn run() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13975005,"byte_end":13975069,"line_start":164,"line_end":164,"column_start":5,"column_end":69}},{"value":"/ let content = reqwest::get(\"http://httpbin.org/range/26\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13975074,"byte_end":13975135,"line_start":165,"line_end":165,"column_start":5,"column_end":66}},{"value":"/     .await?","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13975140,"byte_end":13975155,"line_start":166,"line_end":166,"column_start":5,"column_end":20}},{"value":"/     .text_with_charset(\"utf-8\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13975160,"byte_end":13975195,"line_start":167,"line_end":167,"column_start":5,"column_end":40}},{"value":"/     .await?;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13975200,"byte_end":13975216,"line_start":168,"line_end":168,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13975221,"byte_end":13975224,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ println!(\"text: {:?}\", content);","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13975229,"byte_end":13975265,"line_start":170,"line_end":170,"column_start":5,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13975270,"byte_end":13975282,"line_start":171,"line_end":171,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13975287,"byte_end":13975294,"line_start":172,"line_end":172,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13975299,"byte_end":13975306,"line_start":173,"line_end":173,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1005},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13977477,"byte_end":13977481,"line_start":242,"line_end":242,"column_start":18,"column_end":22},"name":"json","qualname":"<Response>::json","value":"pub async fn json<T: DeserializeOwned>(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Try to deserialize the response body as JSON.","sig":null,"attributes":[{"value":"/ Try to deserialize the response body as JSON.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13976258,"byte_end":13976307,"line_start":199,"line_end":199,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13976312,"byte_end":13976315,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ # Optional","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13976320,"byte_end":13976334,"line_start":201,"line_end":201,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13976339,"byte_end":13976342,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This requires the optional `json` feature enabled.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13976347,"byte_end":13976401,"line_start":203,"line_end":203,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13976406,"byte_end":13976409,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13976414,"byte_end":13976428,"line_start":205,"line_end":205,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13976433,"byte_end":13976436,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13976441,"byte_end":13976448,"line_start":207,"line_end":207,"column_start":5,"column_end":12}},{"value":"/ # extern crate reqwest;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13976453,"byte_end":13976480,"line_start":208,"line_end":208,"column_start":5,"column_end":32}},{"value":"/ # extern crate serde;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13976485,"byte_end":13976510,"line_start":209,"line_end":209,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13976515,"byte_end":13976520,"line_start":210,"line_end":210,"column_start":5,"column_end":10}},{"value":"/ # use reqwest::Error;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13976525,"byte_end":13976550,"line_start":211,"line_end":211,"column_start":5,"column_end":30}},{"value":"/ # use serde::Deserialize;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13976555,"byte_end":13976584,"line_start":212,"line_end":212,"column_start":5,"column_end":34}},{"value":"/ #","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13976589,"byte_end":13976594,"line_start":213,"line_end":213,"column_start":5,"column_end":10}},{"value":"/ // This `derive` requires the `serde` dependency.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13976599,"byte_end":13976652,"line_start":214,"line_end":214,"column_start":5,"column_end":58}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13976657,"byte_end":13976683,"line_start":215,"line_end":215,"column_start":5,"column_end":31}},{"value":"/ struct Ip {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13976688,"byte_end":13976703,"line_start":216,"line_end":216,"column_start":5,"column_end":20}},{"value":"/     origin: String,","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13976708,"byte_end":13976731,"line_start":217,"line_end":217,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13976736,"byte_end":13976741,"line_start":218,"line_end":218,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13976746,"byte_end":13976749,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # async fn run() -> Result<(), Error> {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13976754,"byte_end":13976797,"line_start":220,"line_end":220,"column_start":5,"column_end":48}},{"value":"/ let ip = reqwest::get(\"http://httpbin.org/ip\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13976802,"byte_end":13976852,"line_start":221,"line_end":221,"column_start":5,"column_end":55}},{"value":"/     .await?","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13976857,"byte_end":13976872,"line_start":222,"line_end":222,"column_start":5,"column_end":20}},{"value":"/     .json::<Ip>()","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13976877,"byte_end":13976898,"line_start":223,"line_end":223,"column_start":5,"column_end":26}},{"value":"/     .await?;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13976903,"byte_end":13976919,"line_start":224,"line_end":224,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13976924,"byte_end":13976927,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ println!(\"ip: {}\", ip.origin);","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13976932,"byte_end":13976966,"line_start":226,"line_end":226,"column_start":5,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13976971,"byte_end":13976983,"line_start":227,"line_end":227,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13976988,"byte_end":13976995,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13977000,"byte_end":13977005,"line_start":229,"line_end":229,"column_start":5,"column_end":10}},{"value":"/ # fn main() { }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13977010,"byte_end":13977029,"line_start":230,"line_end":230,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13977034,"byte_end":13977041,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13977046,"byte_end":13977049,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13977054,"byte_end":13977066,"line_start":233,"line_end":233,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13977071,"byte_end":13977074,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ This method fails whenever the response body is not in JSON format","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13977079,"byte_end":13977149,"line_start":235,"line_end":235,"column_start":5,"column_end":75}},{"value":"/ or it cannot be properly deserialized to target type `T`. For more","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13977154,"byte_end":13977224,"line_start":236,"line_end":236,"column_start":5,"column_end":75}},{"value":"/ details please see [`serde_json::from_reader`].","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13977229,"byte_end":13977280,"line_start":237,"line_end":237,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13977285,"byte_end":13977288,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ [`serde_json::from_reader`]: https://docs.serde.rs/serde_json/fn.from_reader.html","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13977293,"byte_end":13977378,"line_start":239,"line_end":239,"column_start":5,"column_end":90}},{"value":"cfg(feature = \"json\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13977383,"byte_end":13977407,"line_start":240,"line_end":240,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13978035,"byte_end":13978040,"line_start":263,"line_end":263,"column_start":18,"column_end":23},"name":"bytes","qualname":"<Response>::bytes","value":"pub async fn bytes(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get the full response body as `Bytes`.","sig":null,"attributes":[{"value":"/ Get the full response body as `Bytes`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13977651,"byte_end":13977693,"line_start":248,"line_end":248,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13977698,"byte_end":13977701,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13977706,"byte_end":13977719,"line_start":250,"line_end":250,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13977724,"byte_end":13977727,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13977732,"byte_end":13977739,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ # async fn run() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13977744,"byte_end":13977808,"line_start":253,"line_end":253,"column_start":5,"column_end":69}},{"value":"/ let bytes = reqwest::get(\"http://httpbin.org/ip\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13977813,"byte_end":13977866,"line_start":254,"line_end":254,"column_start":5,"column_end":58}},{"value":"/     .await?","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13977871,"byte_end":13977886,"line_start":255,"line_end":255,"column_start":5,"column_end":20}},{"value":"/     .bytes()","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13977891,"byte_end":13977907,"line_start":256,"line_end":256,"column_start":5,"column_end":21}},{"value":"/     .await?;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13977912,"byte_end":13977928,"line_start":257,"line_end":257,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13977933,"byte_end":13977936,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ println!(\"bytes: {:?}\", bytes);","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13977941,"byte_end":13977976,"line_start":259,"line_end":259,"column_start":5,"column_end":40}},{"value":"/ # Ok(())","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13977981,"byte_end":13977993,"line_start":260,"line_end":260,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13977998,"byte_end":13978005,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13978010,"byte_end":13978017,"line_start":262,"line_end":262,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13978607,"byte_end":13978612,"line_start":283,"line_end":283,"column_start":18,"column_end":23},"name":"chunk","qualname":"<Response>::chunk","value":"pub async fn chunk<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Stream a chunk of the response body.","sig":null,"attributes":[{"value":"/ Stream a chunk of the response body.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13978131,"byte_end":13978171,"line_start":267,"line_end":267,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13978176,"byte_end":13978179,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ When the response body has been exhausted, this will return `None`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13978184,"byte_end":13978255,"line_start":269,"line_end":269,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13978260,"byte_end":13978263,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13978268,"byte_end":13978281,"line_start":271,"line_end":271,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13978286,"byte_end":13978289,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13978294,"byte_end":13978301,"line_start":273,"line_end":273,"column_start":5,"column_end":12}},{"value":"/ # async fn run() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13978306,"byte_end":13978370,"line_start":274,"line_end":274,"column_start":5,"column_end":69}},{"value":"/ let mut res = reqwest::get(\"https://hyper.rs\").await?;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13978375,"byte_end":13978433,"line_start":275,"line_end":275,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13978438,"byte_end":13978441,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ while let Some(chunk) = res.chunk().await? {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13978446,"byte_end":13978494,"line_start":277,"line_end":277,"column_start":5,"column_end":53}},{"value":"/     println!(\"Chunk: {:?}\", chunk);","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13978499,"byte_end":13978538,"line_start":278,"line_end":278,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13978543,"byte_end":13978548,"line_start":279,"line_end":279,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13978553,"byte_end":13978565,"line_start":280,"line_end":280,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13978570,"byte_end":13978577,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13978582,"byte_end":13978589,"line_start":282,"line_end":282,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13980272,"byte_end":13980288,"line_start":342,"line_end":342,"column_start":12,"column_end":28},"name":"error_for_status","qualname":"<Response>::error_for_status","value":"pub fn error_for_status(Self) -> crate::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Turn a response into an error if the server returned an error.","sig":null,"attributes":[{"value":"/ Turn a response into an error if the server returned an error.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13979620,"byte_end":13979686,"line_start":321,"line_end":321,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13979691,"byte_end":13979694,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13979699,"byte_end":13979712,"line_start":323,"line_end":323,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13979717,"byte_end":13979720,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13979725,"byte_end":13979732,"line_start":325,"line_end":325,"column_start":5,"column_end":12}},{"value":"/ # use reqwest::Response;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13979737,"byte_end":13979765,"line_start":326,"line_end":326,"column_start":5,"column_end":33}},{"value":"/ fn on_response(res: Response) {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13979770,"byte_end":13979805,"line_start":327,"line_end":327,"column_start":5,"column_end":40}},{"value":"/     match res.error_for_status() {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13979810,"byte_end":13979848,"line_start":328,"line_end":328,"column_start":5,"column_end":43}},{"value":"/         Ok(_res) => (),","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13979853,"byte_end":13979880,"line_start":329,"line_end":329,"column_start":5,"column_end":32}},{"value":"/         Err(err) => {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13979885,"byte_end":13979910,"line_start":330,"line_end":330,"column_start":5,"column_end":30}},{"value":"/             // asserting a 400 as an example","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13979915,"byte_end":13979963,"line_start":331,"line_end":331,"column_start":5,"column_end":53}},{"value":"/             // it could be any status between 400...599","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13979968,"byte_end":13980027,"line_start":332,"line_end":332,"column_start":5,"column_end":64}},{"value":"/             assert_eq!(","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13980032,"byte_end":13980059,"line_start":333,"line_end":333,"column_start":5,"column_end":32}},{"value":"/                 err.status(),","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13980064,"byte_end":13980097,"line_start":334,"line_end":334,"column_start":5,"column_end":38}},{"value":"/                 Some(reqwest::StatusCode::BAD_REQUEST)","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13980102,"byte_end":13980160,"line_start":335,"line_end":335,"column_start":5,"column_end":63}},{"value":"/             );","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13980165,"byte_end":13980183,"line_start":336,"line_end":336,"column_start":5,"column_end":23}},{"value":"/         }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13980188,"byte_end":13980201,"line_start":337,"line_end":337,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13980206,"byte_end":13980215,"line_start":338,"line_end":338,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13980220,"byte_end":13980225,"line_start":339,"line_end":339,"column_start":5,"column_end":10}},{"value":"/ # fn main() {}","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13980230,"byte_end":13980248,"line_start":340,"line_end":340,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13980253,"byte_end":13980260,"line_start":341,"line_end":341,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13981194,"byte_end":13981214,"line_start":371,"line_end":371,"column_start":12,"column_end":32},"name":"error_for_status_ref","qualname":"<Response>::error_for_status_ref","value":"pub fn error_for_status_ref(&Self) -> crate::Result<&Self>","parent":null,"children":[],"decl_id":null,"docs":" Turn a reference to a response into an error if the server returned an error.","sig":null,"attributes":[{"value":"/ Turn a reference to a response into an error if the server returned an error.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13980522,"byte_end":13980603,"line_start":350,"line_end":350,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13980608,"byte_end":13980611,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13980616,"byte_end":13980629,"line_start":352,"line_end":352,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13980634,"byte_end":13980637,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13980642,"byte_end":13980649,"line_start":354,"line_end":354,"column_start":5,"column_end":12}},{"value":"/ # use reqwest::Response;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13980654,"byte_end":13980682,"line_start":355,"line_end":355,"column_start":5,"column_end":33}},{"value":"/ fn on_response(res: &Response) {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13980687,"byte_end":13980723,"line_start":356,"line_end":356,"column_start":5,"column_end":41}},{"value":"/     match res.error_for_status_ref() {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13980728,"byte_end":13980770,"line_start":357,"line_end":357,"column_start":5,"column_end":47}},{"value":"/         Ok(_res) => (),","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13980775,"byte_end":13980802,"line_start":358,"line_end":358,"column_start":5,"column_end":32}},{"value":"/         Err(err) => {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13980807,"byte_end":13980832,"line_start":359,"line_end":359,"column_start":5,"column_end":30}},{"value":"/             // asserting a 400 as an example","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13980837,"byte_end":13980885,"line_start":360,"line_end":360,"column_start":5,"column_end":53}},{"value":"/             // it could be any status between 400...599","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13980890,"byte_end":13980949,"line_start":361,"line_end":361,"column_start":5,"column_end":64}},{"value":"/             assert_eq!(","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13980954,"byte_end":13980981,"line_start":362,"line_end":362,"column_start":5,"column_end":32}},{"value":"/                 err.status(),","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13980986,"byte_end":13981019,"line_start":363,"line_end":363,"column_start":5,"column_end":38}},{"value":"/                 Some(reqwest::StatusCode::BAD_REQUEST)","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13981024,"byte_end":13981082,"line_start":364,"line_end":364,"column_start":5,"column_end":63}},{"value":"/             );","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13981087,"byte_end":13981105,"line_start":365,"line_end":365,"column_start":5,"column_end":23}},{"value":"/         }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13981110,"byte_end":13981123,"line_start":366,"line_end":366,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13981128,"byte_end":13981137,"line_start":367,"line_end":367,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13981142,"byte_end":13981147,"line_start":368,"line_end":368,"column_start":5,"column_end":10}},{"value":"/ # fn main() {}","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13981152,"byte_end":13981170,"line_start":369,"line_end":369,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13981175,"byte_end":13981182,"line_start":370,"line_end":370,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1652},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14028403,"byte_end":14028408,"line_start":54,"line_end":54,"column_start":12,"column_end":17},"name":"Proxy","qualname":"::proxy::Proxy","value":"Proxy {  }","parent":null,"children":[{"krate":0,"index":1653},{"krate":0,"index":1654}],"decl_id":null,"docs":" Configuration of a proxy that a `Client` should pass requests to.","sig":null,"attributes":[{"value":"/ Configuration of a proxy that a `Client` should pass requests to.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14027164,"byte_end":14027233,"line_start":21,"line_end":21,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14027234,"byte_end":14027237,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ A `Proxy` has a couple pieces to it:","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14027238,"byte_end":14027278,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14027279,"byte_end":14027282,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ - a URL of how to talk to the proxy","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14027283,"byte_end":14027322,"line_start":25,"line_end":25,"column_start":1,"column_end":40}},{"value":"/ - rules on what `Client` requests should be directed to the proxy","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14027323,"byte_end":14027392,"line_start":26,"line_end":26,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14027393,"byte_end":14027396,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ For instance, let's look at `Proxy::http`:","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14027397,"byte_end":14027443,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14027444,"byte_end":14027447,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14027448,"byte_end":14027459,"line_start":30,"line_end":30,"column_start":1,"column_end":12}},{"value":"/ # fn run() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14027460,"byte_end":14027514,"line_start":31,"line_end":31,"column_start":1,"column_end":55}},{"value":"/ let proxy = reqwest::Proxy::http(\"https://secure.example\")?;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14027515,"byte_end":14027579,"line_start":32,"line_end":32,"column_start":1,"column_end":65}},{"value":"/ # Ok(())","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14027580,"byte_end":14027592,"line_start":33,"line_end":33,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14027593,"byte_end":14027600,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14027601,"byte_end":14027608,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14027609,"byte_end":14027612,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ This proxy will intercept all HTTP requests, and make use of the proxy","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14027613,"byte_end":14027687,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/ at `https://secure.example`. A request to `http://hyper.rs` will talk","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14027688,"byte_end":14027761,"line_start":38,"line_end":38,"column_start":1,"column_end":74}},{"value":"/ to your proxy. A request to `https://hyper.rs` will not.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14027762,"byte_end":14027822,"line_start":39,"line_end":39,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14027823,"byte_end":14027826,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Multiple `Proxy` rules can be configured for a `Client`. The `Client` will","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14027827,"byte_end":14027905,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ check each `Proxy` in the order it was added. This could mean that a","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14027906,"byte_end":14027978,"line_start":42,"line_end":42,"column_start":1,"column_end":73}},{"value":"/ `Proxy` added first with eager intercept rules, such as `Proxy::all`,","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14027979,"byte_end":14028052,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/ would prevent a `Proxy` later in the list from ever working, so take care.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14028053,"byte_end":14028131,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14028132,"byte_end":14028135,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ By enabling the `\"socks\"` feature it is possible to use a socks proxy:","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14028136,"byte_end":14028210,"line_start":46,"line_end":46,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14028211,"byte_end":14028222,"line_start":47,"line_end":47,"column_start":1,"column_end":12}},{"value":"/ # fn run() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14028223,"byte_end":14028277,"line_start":48,"line_end":48,"column_start":1,"column_end":55}},{"value":"/ let proxy = reqwest::Proxy::http(\"socks5://192.168.1.1:9000\")?;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14028278,"byte_end":14028345,"line_start":49,"line_end":49,"column_start":1,"column_end":68}},{"value":"/ # Ok(())","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14028346,"byte_end":14028358,"line_start":50,"line_end":50,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14028359,"byte_end":14028366,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14028367,"byte_end":14028374,"line_start":52,"line_end":52,"column_start":1,"column_end":8}}]},{"kind":"StructVariant","id":{"krate":0,"index":1696},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14029345,"byte_end":14029349,"line_start":88,"line_end":88,"column_start":5,"column_end":9},"name":"Http","qualname":"::proxy::ProxyScheme::Http","value":"ProxyScheme::Http { auth, host }","parent":{"krate":0,"index":1695},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1699},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14029434,"byte_end":14029439,"line_start":92,"line_end":92,"column_start":5,"column_end":10},"name":"Https","qualname":"::proxy::ProxyScheme::Https","value":"ProxyScheme::Https { auth, host }","parent":{"krate":0,"index":1695},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1695},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14029327,"byte_end":14029338,"line_start":87,"line_end":87,"column_start":10,"column_end":21},"name":"ProxyScheme","qualname":"::proxy::ProxyScheme","value":"pub enum ProxyScheme {\n    Http {\n        auth: Option<HeaderValue>,\n        host: http::uri::Authority,\n    },\n    Https {\n        auth: Option<HeaderValue>,\n        host: http::uri::Authority,\n    },\n}","parent":null,"children":[{"krate":0,"index":1696},{"krate":0,"index":1699}],"decl_id":null,"docs":" A particular scheme used for proxying requests.","sig":null,"attributes":[{"value":"/ A particular scheme used for proxying requests.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14029213,"byte_end":14029264,"line_start":83,"line_end":83,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14029265,"byte_end":14029268,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ For example, HTTP vs SOCKS5","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14029269,"byte_end":14029300,"line_start":85,"line_end":85,"column_start":1,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":1385},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14029863,"byte_end":14029878,"line_start":107,"line_end":107,"column_start":11,"column_end":26},"name":"IntoProxyScheme","qualname":"::proxy::IntoProxyScheme","value":"IntoProxyScheme","parent":null,"children":[{"krate":0,"index":1386}],"decl_id":null,"docs":" Trait used for converting into a proxy scheme. This trait supports\n parsing from a URL-like type, whilst also supporting proxy schemes\n built directly using the factory methods.\n","sig":null,"attributes":[{"value":"/ Trait used for converting into a proxy scheme. This trait supports","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14029665,"byte_end":14029735,"line_start":104,"line_end":104,"column_start":1,"column_end":71}},{"value":"/ parsing from a URL-like type, whilst also supporting proxy schemes","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14029736,"byte_end":14029806,"line_start":105,"line_end":105,"column_start":1,"column_end":71}},{"value":"/ built directly using the factory methods.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14029807,"byte_end":14029852,"line_start":106,"line_end":106,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1386},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14029888,"byte_end":14029905,"line_start":108,"line_end":108,"column_start":8,"column_end":25},"name":"into_proxy_scheme","qualname":"::proxy::IntoProxyScheme::into_proxy_scheme","value":"pub fn into_proxy_scheme(Self) -> crate::Result<ProxyScheme>","parent":{"krate":0,"index":1385},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1399},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14031449,"byte_end":14031453,"line_start":162,"line_end":162,"column_start":12,"column_end":16},"name":"http","qualname":"<Proxy>::http","value":"pub fn http<U: IntoProxyScheme>(U) -> crate::Result<Proxy>","parent":null,"children":[],"decl_id":null,"docs":" Proxy all HTTP traffic to the passed URL.","sig":null,"attributes":[{"value":"/ Proxy all HTTP traffic to the passed URL.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14031059,"byte_end":14031104,"line_start":148,"line_end":148,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14031109,"byte_end":14031112,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14031117,"byte_end":14031130,"line_start":150,"line_end":150,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14031135,"byte_end":14031138,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14031143,"byte_end":14031150,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"/ # extern crate reqwest;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14031155,"byte_end":14031182,"line_start":153,"line_end":153,"column_start":5,"column_end":32}},{"value":"/ # fn run() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14031187,"byte_end":14031241,"line_start":154,"line_end":154,"column_start":5,"column_end":59}},{"value":"/ let client = reqwest::Client::builder()","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14031246,"byte_end":14031289,"line_start":155,"line_end":155,"column_start":5,"column_end":48}},{"value":"/     .proxy(reqwest::Proxy::http(\"https://my.prox\")?)","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14031294,"byte_end":14031350,"line_start":156,"line_end":156,"column_start":5,"column_end":61}},{"value":"/     .build()?;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14031355,"byte_end":14031373,"line_start":157,"line_end":157,"column_start":5,"column_end":23}},{"value":"/ # Ok(())","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14031378,"byte_end":14031390,"line_start":158,"line_end":158,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14031395,"byte_end":14031402,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ # fn main() {}","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14031407,"byte_end":14031425,"line_start":160,"line_end":160,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14031430,"byte_end":14031437,"line_start":161,"line_end":161,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1401},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14032028,"byte_end":14032033,"line_start":182,"line_end":182,"column_start":12,"column_end":17},"name":"https","qualname":"<Proxy>::https","value":"pub fn https<U: IntoProxyScheme>(U) -> crate::Result<Proxy>","parent":null,"children":[],"decl_id":null,"docs":" Proxy all HTTPS traffic to the passed URL.","sig":null,"attributes":[{"value":"/ Proxy all HTTPS traffic to the passed URL.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14031626,"byte_end":14031672,"line_start":168,"line_end":168,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14031677,"byte_end":14031680,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14031685,"byte_end":14031698,"line_start":170,"line_end":170,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14031703,"byte_end":14031706,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14031711,"byte_end":14031718,"line_start":172,"line_end":172,"column_start":5,"column_end":12}},{"value":"/ # extern crate reqwest;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14031723,"byte_end":14031750,"line_start":173,"line_end":173,"column_start":5,"column_end":32}},{"value":"/ # fn run() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14031755,"byte_end":14031809,"line_start":174,"line_end":174,"column_start":5,"column_end":59}},{"value":"/ let client = reqwest::Client::builder()","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14031814,"byte_end":14031857,"line_start":175,"line_end":175,"column_start":5,"column_end":48}},{"value":"/     .proxy(reqwest::Proxy::https(\"https://example.prox:4545\")?)","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14031862,"byte_end":14031929,"line_start":176,"line_end":176,"column_start":5,"column_end":72}},{"value":"/     .build()?;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14031934,"byte_end":14031952,"line_start":177,"line_end":177,"column_start":5,"column_end":23}},{"value":"/ # Ok(())","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14031957,"byte_end":14031969,"line_start":178,"line_end":178,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14031974,"byte_end":14031981,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ # fn main() {}","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14031986,"byte_end":14032004,"line_start":180,"line_end":180,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14032009,"byte_end":14032016,"line_start":181,"line_end":181,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1403},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14032593,"byte_end":14032596,"line_start":202,"line_end":202,"column_start":12,"column_end":15},"name":"all","qualname":"<Proxy>::all","value":"pub fn all<U: IntoProxyScheme>(U) -> crate::Result<Proxy>","parent":null,"children":[],"decl_id":null,"docs":" Proxy **all** traffic to the passed URL.","sig":null,"attributes":[{"value":"/ Proxy **all** traffic to the passed URL.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14032207,"byte_end":14032251,"line_start":188,"line_end":188,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14032256,"byte_end":14032259,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14032264,"byte_end":14032277,"line_start":190,"line_end":190,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14032282,"byte_end":14032285,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14032290,"byte_end":14032297,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"/ # extern crate reqwest;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14032302,"byte_end":14032329,"line_start":193,"line_end":193,"column_start":5,"column_end":32}},{"value":"/ # fn run() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14032334,"byte_end":14032388,"line_start":194,"line_end":194,"column_start":5,"column_end":59}},{"value":"/ let client = reqwest::Client::builder()","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14032393,"byte_end":14032436,"line_start":195,"line_end":195,"column_start":5,"column_end":48}},{"value":"/     .proxy(reqwest::Proxy::all(\"http://pro.xy\")?)","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14032441,"byte_end":14032494,"line_start":196,"line_end":196,"column_start":5,"column_end":58}},{"value":"/     .build()?;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14032499,"byte_end":14032517,"line_start":197,"line_end":197,"column_start":5,"column_end":23}},{"value":"/ # Ok(())","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14032522,"byte_end":14032534,"line_start":198,"line_end":198,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14032539,"byte_end":14032546,"line_start":199,"line_end":199,"column_start":5,"column_end":12}},{"value":"/ # fn main() {}","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14032551,"byte_end":14032569,"line_start":200,"line_end":200,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14032574,"byte_end":14032581,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1405},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14033412,"byte_end":14033418,"line_start":228,"line_end":228,"column_start":12,"column_end":18},"name":"custom","qualname":"<Proxy>::custom","value":"pub fn custom<F, U: IntoProxyScheme>(F) -> Proxy where F: Fn(&Url) ->\nOption<U> + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Provide a custom function to determine what traffic to proxy to where.","sig":null,"attributes":[{"value":"/ Provide a custom function to determine what traffic to proxy to where.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14032768,"byte_end":14032842,"line_start":208,"line_end":208,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14032847,"byte_end":14032850,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14032855,"byte_end":14032868,"line_start":210,"line_end":210,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14032873,"byte_end":14032876,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14032881,"byte_end":14032888,"line_start":212,"line_end":212,"column_start":5,"column_end":12}},{"value":"/ # extern crate reqwest;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14032893,"byte_end":14032920,"line_start":213,"line_end":213,"column_start":5,"column_end":32}},{"value":"/ # fn run() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14032925,"byte_end":14032979,"line_start":214,"line_end":214,"column_start":5,"column_end":59}},{"value":"/ let target = reqwest::Url::parse(\"https://my.prox\")?;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14032984,"byte_end":14033041,"line_start":215,"line_end":215,"column_start":5,"column_end":62}},{"value":"/ let client = reqwest::Client::builder()","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14033046,"byte_end":14033089,"line_start":216,"line_end":216,"column_start":5,"column_end":48}},{"value":"/     .proxy(reqwest::Proxy::custom(move |url| {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14033094,"byte_end":14033144,"line_start":217,"line_end":217,"column_start":5,"column_end":55}},{"value":"/         if url.host_str() == Some(\"hyper.rs\") {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14033149,"byte_end":14033200,"line_start":218,"line_end":218,"column_start":5,"column_end":56}},{"value":"/             Some(target.clone())","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14033205,"byte_end":14033241,"line_start":219,"line_end":219,"column_start":5,"column_end":41}},{"value":"/         } else {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14033246,"byte_end":14033266,"line_start":220,"line_end":220,"column_start":5,"column_end":25}},{"value":"/             None","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14033271,"byte_end":14033291,"line_start":221,"line_end":221,"column_start":5,"column_end":25}},{"value":"/         }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14033296,"byte_end":14033309,"line_start":222,"line_end":222,"column_start":5,"column_end":18}},{"value":"/     }))","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14033314,"byte_end":14033325,"line_start":223,"line_end":223,"column_start":5,"column_end":16}},{"value":"/     .build()?;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14033330,"byte_end":14033348,"line_start":224,"line_end":224,"column_start":5,"column_end":23}},{"value":"/ # Ok(())","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14033353,"byte_end":14033365,"line_start":225,"line_end":225,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14033370,"byte_end":14033377,"line_start":226,"line_end":226,"column_start":5,"column_end":12}},{"value":"/ # fn main() {}","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14033382,"byte_end":14033400,"line_start":227,"line_end":227,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1411},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14034622,"byte_end":14034632,"line_start":270,"line_end":270,"column_start":12,"column_end":22},"name":"basic_auth","qualname":"<Proxy>::basic_auth","value":"pub fn basic_auth(Self, &str, &str) -> Proxy","parent":null,"children":[],"decl_id":null,"docs":" Set the `Proxy-Authorization` header using Basic auth.","sig":null,"attributes":[{"value":"/ Set the `Proxy-Authorization` header using Basic auth.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14034232,"byte_end":14034290,"line_start":257,"line_end":257,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14034295,"byte_end":14034298,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14034303,"byte_end":14034316,"line_start":259,"line_end":259,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14034321,"byte_end":14034324,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14034329,"byte_end":14034336,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/ # extern crate reqwest;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14034341,"byte_end":14034368,"line_start":262,"line_end":262,"column_start":5,"column_end":32}},{"value":"/ # fn run() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14034373,"byte_end":14034427,"line_start":263,"line_end":263,"column_start":5,"column_end":59}},{"value":"/ let proxy = reqwest::Proxy::https(\"http://localhost:1234\")?","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14034432,"byte_end":14034495,"line_start":264,"line_end":264,"column_start":5,"column_end":68}},{"value":"/     .basic_auth(\"Aladdin\", \"open sesame\");","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14034500,"byte_end":14034546,"line_start":265,"line_end":265,"column_start":5,"column_end":51}},{"value":"/ # Ok(())","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14034551,"byte_end":14034563,"line_start":266,"line_end":266,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14034568,"byte_end":14034575,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ # fn main() {}","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14034580,"byte_end":14034598,"line_start":268,"line_end":268,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14034603,"byte_end":14034610,"line_start":269,"line_end":269,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":1475},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"redirect","qualname":"::redirect","value":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","parent":null,"children":[{"krate":0,"index":1476},{"krate":0,"index":1479},{"krate":0,"index":1482},{"krate":0,"index":1483},{"krate":0,"index":1486},{"krate":0,"index":1489},{"krate":0,"index":1492},{"krate":0,"index":1495},{"krate":0,"index":1498},{"krate":0,"index":1501},{"krate":0,"index":1504},{"krate":0,"index":1742},{"krate":0,"index":1747},{"krate":0,"index":1750},{"krate":0,"index":1752},{"krate":0,"index":1506},{"krate":0,"index":1514},{"krate":0,"index":1516},{"krate":0,"index":1525},{"krate":0,"index":1534},{"krate":0,"index":1536},{"krate":0,"index":1754},{"krate":0,"index":1762},{"krate":0,"index":1538},{"krate":0,"index":1764},{"krate":0,"index":1766},{"krate":0,"index":1539},{"krate":0,"index":1541}],"decl_id":null,"docs":" Redirect Handling","sig":null,"attributes":[{"value":"cfg(not(target_arch = \"wasm32\"))","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":7715,"byte_end":7750,"line_start":215,"line_end":215,"column_start":9,"column_end":44}},{"value":"/ Redirect Handling","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14077688,"byte_end":14077709,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14077710,"byte_end":14077713,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ By default, a `Client` will automatically handle HTTP redirects, having a","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14077714,"byte_end":14077791,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ maximum redirect chain of 10 hops. To customize this behavior, a","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14077792,"byte_end":14077860,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"/ `redirect::Policy` can be used with a `ClientBuilder`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14077861,"byte_end":14077919,"line_start":5,"line_end":5,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":1504},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14078593,"byte_end":14078599,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"name":"Policy","qualname":"::redirect::Policy","value":"Policy {  }","parent":null,"children":[{"krate":0,"index":1505}],"decl_id":null,"docs":" A type that controls the policy on how to handle the following of redirects.","sig":null,"attributes":[{"value":"/ A type that controls the policy on how to handle the following of redirects.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14078106,"byte_end":14078186,"line_start":15,"line_end":15,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14078187,"byte_end":14078190,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The default value will catch redirect loops, and has a maximum of 10","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14078191,"byte_end":14078263,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ redirects it will follow in a chain before returning an error.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14078264,"byte_end":14078330,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14078331,"byte_end":14078334,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ - `limited` can be used have the same as the default behavior, but adjust","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14078335,"byte_end":14078412,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/   the allowed maximum redirect hops in a chain.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14078413,"byte_end":14078464,"line_start":21,"line_end":21,"column_start":1,"column_end":52}},{"value":"/ - `none` can be used to disable all redirect behavior.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14078465,"byte_end":14078523,"line_start":22,"line_end":22,"column_start":1,"column_end":59}},{"value":"/ - `custom` can be used to create a customized policy.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14078524,"byte_end":14078581,"line_start":23,"line_end":23,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":1742},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14078755,"byte_end":14078762,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"Attempt","qualname":"::redirect::Attempt","value":"Attempt {  }","parent":null,"children":[{"krate":0,"index":1744},{"krate":0,"index":1745},{"krate":0,"index":1746}],"decl_id":null,"docs":" A type that holds information on the next request and previous requests\n in redirect chain.\n","sig":null,"attributes":[{"value":"/ A type that holds information on the next request and previous requests","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14078628,"byte_end":14078703,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ in redirect chain.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14078704,"byte_end":14078726,"line_start":29,"line_end":29,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1750},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14078931,"byte_end":14078937,"line_start":39,"line_end":39,"column_start":12,"column_end":18},"name":"Action","qualname":"::redirect::Action","value":"Action {  }","parent":null,"children":[{"krate":0,"index":1751}],"decl_id":null,"docs":" An action to perform when a redirect status code is found.\n","sig":null,"attributes":[{"value":"/ An action to perform when a redirect status code is found.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14078840,"byte_end":14078902,"line_start":37,"line_end":37,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1507},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14079120,"byte_end":14079127,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"limited","qualname":"<Policy>::limited","value":"pub fn limited(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `Policy` with a maximum number of redirects.","sig":null,"attributes":[{"value":"/ Create a `Policy` with a maximum number of redirects.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14078984,"byte_end":14079041,"line_start":44,"line_end":44,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14079046,"byte_end":14079049,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ An `Error` will be returned if the max is reached.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14079054,"byte_end":14079108,"line_start":46,"line_end":46,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1508},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14079297,"byte_end":14079301,"line_start":54,"line_end":54,"column_start":12,"column_end":16},"name":"none","qualname":"<Policy>::none","value":"pub fn none() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `Policy` that does not follow any redirect.\n","sig":null,"attributes":[{"value":"/ Create a `Policy` that does not follow any redirect.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14079229,"byte_end":14079285,"line_start":53,"line_end":53,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1509},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14080650,"byte_end":14080656,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"custom","qualname":"<Policy>::custom","value":"pub fn custom<T>(T) -> Self where T: Fn(Attempt) -> Action + Send + Sync +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Create a custom `Policy` using the passed function.","sig":null,"attributes":[{"value":"/ Create a custom `Policy` using the passed function.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14079387,"byte_end":14079442,"line_start":60,"line_end":60,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14079447,"byte_end":14079450,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14079455,"byte_end":14079465,"line_start":62,"line_end":62,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14079470,"byte_end":14079473,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ The default `Policy` handles a maximum loop","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14079478,"byte_end":14079525,"line_start":64,"line_end":64,"column_start":5,"column_end":52}},{"value":"/ chain, but the custom variant does not do that for you automatically.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14079530,"byte_end":14079603,"line_start":65,"line_end":65,"column_start":5,"column_end":78}},{"value":"/ The custom policy should have some way of handling those.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14079608,"byte_end":14079669,"line_start":66,"line_end":66,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14079674,"byte_end":14079677,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Information on the next request and previous requests can be found","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14079682,"byte_end":14079752,"line_start":68,"line_end":68,"column_start":5,"column_end":75}},{"value":"/ on the [`Attempt`] argument passed to the closure.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14079757,"byte_end":14079811,"line_start":69,"line_end":69,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14079816,"byte_end":14079819,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Actions can be conveniently created from methods on the","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14079824,"byte_end":14079883,"line_start":71,"line_end":71,"column_start":5,"column_end":64}},{"value":"/ [`Attempt`].","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14079888,"byte_end":14079904,"line_start":72,"line_end":72,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14079909,"byte_end":14079912,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14079917,"byte_end":14079930,"line_start":74,"line_end":74,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14079935,"byte_end":14079938,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14079943,"byte_end":14079954,"line_start":76,"line_end":76,"column_start":5,"column_end":16}},{"value":"/ # use reqwest::{Error, redirect};","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14079959,"byte_end":14079996,"line_start":77,"line_end":77,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14080001,"byte_end":14080006,"line_start":78,"line_end":78,"column_start":5,"column_end":10}},{"value":"/ # fn run() -> Result<(), Error> {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14080011,"byte_end":14080048,"line_start":79,"line_end":79,"column_start":5,"column_end":42}},{"value":"/ let custom = redirect::Policy::custom(|attempt| {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14080053,"byte_end":14080106,"line_start":80,"line_end":80,"column_start":5,"column_end":58}},{"value":"/     if attempt.previous().len() > 5 {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14080111,"byte_end":14080152,"line_start":81,"line_end":81,"column_start":5,"column_end":46}},{"value":"/         attempt.error(\"too many redirects\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14080157,"byte_end":14080204,"line_start":82,"line_end":82,"column_start":5,"column_end":52}},{"value":"/     } else if attempt.url().host_str() == Some(\"example.domain\") {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14080209,"byte_end":14080279,"line_start":83,"line_end":83,"column_start":5,"column_end":75}},{"value":"/         // prevent redirects to 'example.domain'","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14080284,"byte_end":14080336,"line_start":84,"line_end":84,"column_start":5,"column_end":57}},{"value":"/         attempt.stop()","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14080341,"byte_end":14080367,"line_start":85,"line_end":85,"column_start":5,"column_end":31}},{"value":"/     } else {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14080372,"byte_end":14080388,"line_start":86,"line_end":86,"column_start":5,"column_end":21}},{"value":"/         attempt.follow()","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14080393,"byte_end":14080421,"line_start":87,"line_end":87,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14080426,"byte_end":14080435,"line_start":88,"line_end":88,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14080440,"byte_end":14080447,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/ let client = reqwest::Client::builder()","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14080452,"byte_end":14080495,"line_start":90,"line_end":90,"column_start":5,"column_end":48}},{"value":"/     .redirect(custom)","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14080500,"byte_end":14080525,"line_start":91,"line_end":91,"column_start":5,"column_end":30}},{"value":"/     .build()?;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14080530,"byte_end":14080548,"line_start":92,"line_end":92,"column_start":5,"column_end":23}},{"value":"/ # Ok(())","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14080553,"byte_end":14080565,"line_start":93,"line_end":93,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14080570,"byte_end":14080577,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14080582,"byte_end":14080589,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14080594,"byte_end":14080597,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ [`Attempt`]: struct.Attempt.html","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14080602,"byte_end":14080638,"line_start":97,"line_end":97,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1511},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14081468,"byte_end":14081476,"line_start":127,"line_end":127,"column_start":12,"column_end":20},"name":"redirect","qualname":"<Policy>::redirect","value":"pub fn redirect(&Self, Attempt) -> Action","parent":null,"children":[],"decl_id":null,"docs":" Apply this policy to a given [`Attempt`] to produce a [`Action`].","sig":null,"attributes":[{"value":"/ Apply this policy to a given [`Attempt`] to produce a [`Action`].","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14080846,"byte_end":14080915,"line_start":107,"line_end":107,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14080920,"byte_end":14080923,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14080928,"byte_end":14080938,"line_start":109,"line_end":109,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14080943,"byte_end":14080946,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ This method can be used together with `Policy::custom()`","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14080951,"byte_end":14081011,"line_start":111,"line_end":111,"column_start":5,"column_end":65}},{"value":"/ to construct one `Policy` that wraps another.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14081016,"byte_end":14081065,"line_start":112,"line_end":112,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14081070,"byte_end":14081073,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14081078,"byte_end":14081091,"line_start":114,"line_end":114,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14081096,"byte_end":14081099,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14081104,"byte_end":14081115,"line_start":116,"line_end":116,"column_start":5,"column_end":16}},{"value":"/ # use reqwest::{Error, redirect};","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14081120,"byte_end":14081157,"line_start":117,"line_end":117,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14081162,"byte_end":14081167,"line_start":118,"line_end":118,"column_start":5,"column_end":10}},{"value":"/ # fn run() -> Result<(), Error> {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14081172,"byte_end":14081209,"line_start":119,"line_end":119,"column_start":5,"column_end":42}},{"value":"/ let custom = redirect::Policy::custom(|attempt| {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14081214,"byte_end":14081267,"line_start":120,"line_end":120,"column_start":5,"column_end":58}},{"value":"/     eprintln!(\"{}, Location: {:?}\", attempt.status(), attempt.url());","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14081272,"byte_end":14081345,"line_start":121,"line_end":121,"column_start":5,"column_end":78}},{"value":"/     redirect::Policy::default().redirect(attempt)","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14081350,"byte_end":14081403,"line_start":122,"line_end":122,"column_start":5,"column_end":58}},{"value":"/ });","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14081408,"byte_end":14081415,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ # Ok(())","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14081420,"byte_end":14081432,"line_start":124,"line_end":124,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14081437,"byte_end":14081444,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14081449,"byte_end":14081456,"line_start":126,"line_end":126,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1518},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14082432,"byte_end":14082438,"line_start":164,"line_end":164,"column_start":12,"column_end":18},"name":"status","qualname":"<Attempt>::status","value":"pub fn status(&Self) -> StatusCode","parent":null,"children":[],"decl_id":null,"docs":" Get the type of redirect.\n","sig":null,"attributes":[{"value":"/ Get the type of redirect.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14082391,"byte_end":14082420,"line_start":163,"line_end":163,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1519},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14082541,"byte_end":14082544,"line_start":169,"line_end":169,"column_start":12,"column_end":15},"name":"url","qualname":"<Attempt>::url","value":"pub fn url(&Self) -> &Url","parent":null,"children":[],"decl_id":null,"docs":" Get the next URL to redirect to.\n","sig":null,"attributes":[{"value":"/ Get the next URL to redirect to.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14082493,"byte_end":14082529,"line_start":168,"line_end":168,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1520},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14082684,"byte_end":14082692,"line_start":174,"line_end":174,"column_start":12,"column_end":20},"name":"previous","qualname":"<Attempt>::previous","value":"pub fn previous(&Self) -> &[Url]","parent":null,"children":[],"decl_id":null,"docs":" Get the list of previous URLs that have already been requested in this chain.\n","sig":null,"attributes":[{"value":"/ Get the list of previous URLs that have already been requested in this chain.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14082591,"byte_end":14082672,"line_start":173,"line_end":173,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1521},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14082821,"byte_end":14082827,"line_start":178,"line_end":178,"column_start":12,"column_end":18},"name":"follow","qualname":"<Attempt>::follow","value":"pub fn follow(Self) -> Action","parent":null,"children":[],"decl_id":null,"docs":" Returns an action meaning reqwest should follow the next URL.\n","sig":null,"attributes":[{"value":"/ Returns an action meaning reqwest should follow the next URL.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14082744,"byte_end":14082809,"line_start":177,"line_end":177,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1522},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14083074,"byte_end":14083078,"line_start":187,"line_end":187,"column_start":12,"column_end":16},"name":"stop","qualname":"<Attempt>::stop","value":"pub fn stop(Self) -> Action","parent":null,"children":[],"decl_id":null,"docs":" Returns an action meaning reqwest should not follow the next URL.","sig":null,"attributes":[{"value":"/ Returns an action meaning reqwest should not follow the next URL.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14082923,"byte_end":14082992,"line_start":184,"line_end":184,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14082997,"byte_end":14083000,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The 30x response will be returned as the `Ok` result.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14083005,"byte_end":14083062,"line_start":186,"line_end":186,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1523},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14083322,"byte_end":14083327,"line_start":196,"line_end":196,"column_start":12,"column_end":17},"name":"error","qualname":"<Attempt>::error","value":"pub fn error<E: Into<Box<dyn StdError + Send + Sync>>>(Self, E) -> Action","parent":null,"children":[],"decl_id":null,"docs":" Returns an action failing the redirect with an error.","sig":null,"attributes":[{"value":"/ Returns an action failing the redirect with an error.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14083172,"byte_end":14083229,"line_start":193,"line_end":193,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14083234,"byte_end":14083237,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ The `Error` will be returned for the result of the sent request.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14083242,"byte_end":14083310,"line_start":195,"line_end":195,"column_start":5,"column_end":73}}]},{"kind":"Mod","id":{"krate":0,"index":1542},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tls","qualname":"::tls","value":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","parent":null,"children":[{"krate":0,"index":1543},{"krate":0,"index":1768},{"krate":0,"index":1770},{"krate":0,"index":1772},{"krate":0,"index":1774},{"krate":0,"index":1776},{"krate":0,"index":1777},{"krate":0,"index":1546},{"krate":0,"index":1550},{"krate":0,"index":1551},{"krate":0,"index":1553},{"krate":0,"index":1779},{"krate":0,"index":1782},{"krate":0,"index":1784},{"krate":0,"index":1786},{"krate":0,"index":1787},{"krate":0,"index":1788},{"krate":0,"index":1791},{"krate":0,"index":1792},{"krate":0,"index":1794},{"krate":0,"index":1796},{"krate":0,"index":1798},{"krate":0,"index":1807},{"krate":0,"index":1809},{"krate":0,"index":1811},{"krate":0,"index":1812},{"krate":0,"index":1813},{"krate":0,"index":1815},{"krate":0,"index":1816},{"krate":0,"index":1818},{"krate":0,"index":1820},{"krate":0,"index":1555},{"krate":0,"index":1561},{"krate":0,"index":1564},{"krate":0,"index":1566}],"decl_id":null,"docs":" TLS configuration","sig":null,"attributes":[{"value":"cfg(not(target_arch = \"wasm32\"))","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":7715,"byte_end":7750,"line_start":215,"line_end":215,"column_start":9,"column_end":44}},{"value":"cfg(feature = \"__tls\")","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":10120,"byte_end":10145,"line_start":319,"line_end":319,"column_start":5,"column_end":30}},{"value":"/ TLS configuration","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14087206,"byte_end":14087227,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14087228,"byte_end":14087231,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ By default, a `Client` will make use of system-native transport layer","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14087232,"byte_end":14087305,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ security to connect to HTTPS destinations. This means schannel on Windows,","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14087306,"byte_end":14087384,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ Security-Framework on macOS, and OpenSSL on Linux.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14087385,"byte_end":14087439,"line_start":5,"line_end":5,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14087440,"byte_end":14087443,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ - Additional X509 certificates can be configured on a `ClientBuilder` with the","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14087444,"byte_end":14087526,"line_start":7,"line_end":7,"column_start":1,"column_end":83}},{"value":"/   [`Certificate`](Certificate) type.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14087527,"byte_end":14087567,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"/ - Client certificates can be add to a `ClientBuilder` with the","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14087568,"byte_end":14087634,"line_start":9,"line_end":9,"column_start":1,"column_end":67}},{"value":"/   [`Identity`][Identity] type.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14087635,"byte_end":14087669,"line_start":10,"line_end":10,"column_start":1,"column_end":35}},{"value":"/ - Various parts of TLS can also be configured or even disabled on the","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14087670,"byte_end":14087743,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/   `ClientBuilder`.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14087744,"byte_end":14087766,"line_start":12,"line_end":12,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1768},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14088077,"byte_end":14088088,"line_start":23,"line_end":23,"column_start":12,"column_end":23},"name":"Certificate","qualname":"::tls::Certificate","value":"Certificate {  }","parent":null,"children":[{"krate":0,"index":1769}],"decl_id":null,"docs":" Represents a server X509 certificate.\n","sig":null,"attributes":[{"value":"/ Represents a server X509 certificate.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14088007,"byte_end":14088048,"line_start":21,"line_end":21,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1772},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14088424,"byte_end":14088432,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"Identity","qualname":"::tls::Identity","value":"Identity {  }","parent":null,"children":[{"krate":0,"index":1773}],"decl_id":null,"docs":" Represents a private key and X509 cert as a client certificate.\n","sig":null,"attributes":[{"value":"/ Represents a private key and X509 cert as a client certificate.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14088328,"byte_end":14088395,"line_start":37,"line_end":37,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1547},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14089276,"byte_end":14089284,"line_start":72,"line_end":72,"column_start":12,"column_end":20},"name":"from_der","qualname":"<Certificate>::from_der","value":"pub fn from_der(&[u8]) -> crate::Result<Certificate>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Certificate` from a binary DER encoded certificate","sig":null,"attributes":[{"value":"/ Create a `Certificate` from a binary DER encoded certificate","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14088808,"byte_end":14088872,"line_start":56,"line_end":56,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14088877,"byte_end":14088880,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14088885,"byte_end":14088899,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14088904,"byte_end":14088907,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14088912,"byte_end":14088919,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"/ # use std::fs::File;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14088924,"byte_end":14088948,"line_start":61,"line_end":61,"column_start":5,"column_end":29}},{"value":"/ # use std::io::Read;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14088953,"byte_end":14088977,"line_start":62,"line_end":62,"column_start":5,"column_end":29}},{"value":"/ # fn cert() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14088982,"byte_end":14089037,"line_start":63,"line_end":63,"column_start":5,"column_end":60}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14089042,"byte_end":14089071,"line_start":64,"line_end":64,"column_start":5,"column_end":34}},{"value":"/ File::open(\"my_cert.der\")?","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14089076,"byte_end":14089106,"line_start":65,"line_end":65,"column_start":5,"column_end":35}},{"value":"/     .read_to_end(&mut buf)?;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14089111,"byte_end":14089143,"line_start":66,"line_end":66,"column_start":5,"column_end":37}},{"value":"/ let cert = reqwest::Certificate::from_der(&buf)?;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14089148,"byte_end":14089201,"line_start":67,"line_end":67,"column_start":5,"column_end":58}},{"value":"/ # drop(cert);","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14089206,"byte_end":14089223,"line_start":68,"line_end":68,"column_start":5,"column_end":22}},{"value":"/ # Ok(())","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14089228,"byte_end":14089240,"line_start":69,"line_end":69,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14089245,"byte_end":14089252,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14089257,"byte_end":14089264,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1548},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14090074,"byte_end":14090082,"line_start":97,"line_end":97,"column_start":12,"column_end":20},"name":"from_pem","qualname":"<Certificate>::from_pem","value":"pub fn from_pem(&[u8]) -> crate::Result<Certificate>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Certificate` from a PEM encoded certificate","sig":null,"attributes":[{"value":"/ Create a `Certificate` from a PEM encoded certificate","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14089613,"byte_end":14089670,"line_start":81,"line_end":81,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14089675,"byte_end":14089678,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14089683,"byte_end":14089697,"line_start":83,"line_end":83,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14089702,"byte_end":14089705,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14089710,"byte_end":14089717,"line_start":85,"line_end":85,"column_start":5,"column_end":12}},{"value":"/ # use std::fs::File;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14089722,"byte_end":14089746,"line_start":86,"line_end":86,"column_start":5,"column_end":29}},{"value":"/ # use std::io::Read;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14089751,"byte_end":14089775,"line_start":87,"line_end":87,"column_start":5,"column_end":29}},{"value":"/ # fn cert() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14089780,"byte_end":14089835,"line_start":88,"line_end":88,"column_start":5,"column_end":60}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14089840,"byte_end":14089869,"line_start":89,"line_end":89,"column_start":5,"column_end":34}},{"value":"/ File::open(\"my_cert.pem\")?","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14089874,"byte_end":14089904,"line_start":90,"line_end":90,"column_start":5,"column_end":35}},{"value":"/     .read_to_end(&mut buf)?;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14089909,"byte_end":14089941,"line_start":91,"line_end":91,"column_start":5,"column_end":37}},{"value":"/ let cert = reqwest::Certificate::from_pem(&buf)?;","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14089946,"byte_end":14089999,"line_start":92,"line_end":92,"column_start":5,"column_end":58}},{"value":"/ # drop(cert);","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14090004,"byte_end":14090021,"line_start":93,"line_end":93,"column_start":5,"column_end":22}},{"value":"/ # Ok(())","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14090026,"byte_end":14090038,"line_start":94,"line_end":94,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14090043,"byte_end":14090050,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14090055,"byte_end":14090062,"line_start":96,"line_end":96,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1779},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14097107,"byte_end":14097114,"line_start":301,"line_end":301,"column_start":12,"column_end":19},"name":"Version","qualname":"::tls::Version","value":"","parent":null,"children":[],"decl_id":null,"docs":" A TLS protocol version.\n","sig":null,"attributes":[{"value":"/ A TLS protocol version.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14097006,"byte_end":14097033,"line_start":299,"line_end":299,"column_start":1,"column_end":28}}]},{"kind":"Const","id":{"krate":0,"index":1556},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14097473,"byte_end":14097480,"line_start":316,"line_end":316,"column_start":15,"column_end":22},"name":"TLS_1_0","qualname":"::tls::Version::TLS_1_0","value":"Version","parent":{"krate":0,"index":1555},"children":[],"decl_id":null,"docs":" Version 1.0 of the TLS protocol.\n","sig":null,"attributes":[{"value":"/ Version 1.0 of the TLS protocol.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14097422,"byte_end":14097458,"line_start":315,"line_end":315,"column_start":5,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":1557},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14097578,"byte_end":14097585,"line_start":318,"line_end":318,"column_start":15,"column_end":22},"name":"TLS_1_1","qualname":"::tls::Version::TLS_1_1","value":"Version","parent":{"krate":0,"index":1555},"children":[],"decl_id":null,"docs":" Version 1.1 of the TLS protocol.\n","sig":null,"attributes":[{"value":"/ Version 1.1 of the TLS protocol.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14097527,"byte_end":14097563,"line_start":317,"line_end":317,"column_start":5,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":1558},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14097683,"byte_end":14097690,"line_start":320,"line_end":320,"column_start":15,"column_end":22},"name":"TLS_1_2","qualname":"::tls::Version::TLS_1_2","value":"Version","parent":{"krate":0,"index":1555},"children":[],"decl_id":null,"docs":" Version 1.2 of the TLS protocol.\n","sig":null,"attributes":[{"value":"/ Version 1.2 of the TLS protocol.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14097632,"byte_end":14097668,"line_start":319,"line_end":319,"column_start":5,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":1559},"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14097788,"byte_end":14097795,"line_start":322,"line_end":322,"column_start":15,"column_end":22},"name":"TLS_1_3","qualname":"::tls::Version::TLS_1_3","value":"Version","parent":{"krate":0,"index":1555},"children":[],"decl_id":null,"docs":" Version 1.3 of the TLS protocol.\n","sig":null,"attributes":[{"value":"/ Version 1.3 of the TLS protocol.","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14097737,"byte_end":14097773,"line_start":321,"line_end":321,"column_start":5,"column_end":41}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":10900,"byte_end":10905,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":14067,"byte_end":14072,"line_start":142,"line_end":142,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":14508,"byte_end":14513,"line_start":159,"line_end":159,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":14650,"byte_end":14656,"line_start":163,"line_end":163,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":15870,"byte_end":15875,"line_start":200,"line_end":200,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":17961,"byte_end":17969,"line_start":290,"line_end":290,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":18101,"byte_end":18109,"line_start":296,"line_end":296,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/into_url.rs","byte_start":19870,"byte_end":19873,"line_start":9,"line_end":9,"column_start":18,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/into_url.rs","byte_start":19894,"byte_end":19900,"line_start":10,"line_end":10,"column_start":18,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/into_url.rs","byte_start":20239,"byte_end":20242,"line_start":22,"line_end":22,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/into_url.rs","byte_start":20911,"byte_end":20917,"line_start":56,"line_end":56,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/response.rs","byte_start":22104,"byte_end":22111,"line_start":15,"line_end":15,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs","byte_start":13850758,"byte_end":13850762,"line_start":47,"line_end":47,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs","byte_start":13854037,"byte_end":13854041,"line_start":168,"line_end":168,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs","byte_start":13854287,"byte_end":13854291,"line_start":180,"line_end":180,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs","byte_start":13854406,"byte_end":13854410,"line_start":187,"line_end":187,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs","byte_start":13854536,"byte_end":13854540,"line_start":194,"line_end":194,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs","byte_start":13854674,"byte_end":13854678,"line_start":201,"line_end":201,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs","byte_start":13854798,"byte_end":13854802,"line_start":208,"line_end":208,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs","byte_start":13855077,"byte_end":13855081,"line_start":223,"line_end":223,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs","byte_start":13855242,"byte_end":13855252,"line_start":231,"line_end":231,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs","byte_start":13857107,"byte_end":13857117,"line_start":290,"line_end":290,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs","byte_start":13857348,"byte_end":13857358,"line_start":300,"line_end":300,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs","byte_start":13858023,"byte_end":13858032,"line_start":328,"line_end":328,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13862731,"byte_end":13862744,"line_start":122,"line_end":122,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13862808,"byte_end":13862821,"line_start":128,"line_end":128,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":568},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":590},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":598},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13903203,"byte_end":13903209,"line_start":1246,"line_end":1246,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13903273,"byte_end":13903279,"line_start":1252,"line_end":1252,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":616},{"krate":0,"index":618},{"krate":0,"index":620},{"krate":0,"index":622},{"krate":0,"index":624},{"krate":0,"index":626},{"krate":0,"index":629},{"krate":0,"index":631},{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13910112,"byte_end":13910118,"line_start":1471,"line_end":1471,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13910331,"byte_end":13910344,"line_start":1479,"line_end":1479,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":636}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13910550,"byte_end":13910556,"line_start":1487,"line_end":1487,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13913336,"byte_end":13913345,"line_start":1590,"line_end":1590,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13914747,"byte_end":13914761,"line_start":1656,"line_end":1656,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13916629,"byte_end":13916636,"line_start":1722,"line_end":1722,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":666},{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13916900,"byte_end":13916907,"line_start":1734,"line_end":1734,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":669},{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13917374,"byte_end":13917388,"line_start":1748,"line_end":1748,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":672},{"krate":0,"index":673}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13924292,"byte_end":13924299,"line_start":1910,"line_end":1910,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":678}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs","byte_start":13928156,"byte_end":13928163,"line_start":81,"line_end":81,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":733}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs","byte_start":13928282,"byte_end":13928289,"line_start":87,"line_end":87,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":735},{"krate":0,"index":736}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs","byte_start":13931994,"byte_end":13932001,"line_start":211,"line_end":211,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":738},{"krate":0,"index":739}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs","byte_start":13934123,"byte_end":13934130,"line_start":257,"line_end":257,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs","byte_start":13934893,"byte_end":13934900,"line_start":285,"line_end":285,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":747},{"krate":0,"index":748}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs","byte_start":13936555,"byte_end":13936563,"line_start":331,"line_end":331,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":753},{"krate":0,"index":754}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs","byte_start":13937001,"byte_end":13937008,"line_start":345,"line_end":345,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs","byte_start":13938456,"byte_end":13938463,"line_start":407,"line_end":407,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13939835,"byte_end":13939842,"line_start":42,"line_end":42,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13942630,"byte_end":13942644,"line_start":165,"line_end":165,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":858},{"krate":0,"index":860},{"krate":0,"index":863},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":870},{"krate":0,"index":872},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":880},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":886}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13953880,"byte_end":13953887,"line_start":506,"line_end":506,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":890}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13954052,"byte_end":13954066,"line_start":512,"line_end":512,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13955627,"byte_end":13955634,"line_start":559,"line_end":559,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":903},{"krate":0,"index":904}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13956225,"byte_end":13956236,"line_start":586,"line_end":586,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":906},{"krate":0,"index":907}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13971106,"byte_end":13971114,"line_start":37,"line_end":37,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":995},{"krate":0,"index":998},{"krate":0,"index":1005},{"krate":0,"index":1009},{"krate":0,"index":1012},{"krate":0,"index":1015},{"krate":0,"index":1016}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13981836,"byte_end":13981844,"line_start":392,"line_end":392,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1018}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13982149,"byte_end":13982157,"line_start":402,"line_end":402,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1021}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13982899,"byte_end":13982903,"line_start":424,"line_end":424,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1024}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":13984873,"byte_end":13984886,"line_start":44,"line_end":44,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1129},{"krate":0,"index":1130}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":13987207,"byte_end":13987220,"line_start":104,"line_end":104,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1135},{"krate":0,"index":1136},{"krate":0,"index":1137}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":13990172,"byte_end":13990181,"line_start":187,"line_end":187,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1139},{"krate":0,"index":1141},{"krate":0,"index":1143},{"krate":0,"index":1144},{"krate":0,"index":1145},{"krate":0,"index":1148},{"krate":0,"index":1152}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":14003298,"byte_end":14003307,"line_start":550,"line_end":550,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1160},{"krate":0,"index":1161},{"krate":0,"index":1162},{"krate":0,"index":1163},{"krate":0,"index":1164}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":14004289,"byte_end":14004290,"line_start":583,"line_end":583,"column_start":92,"column_end":93},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":14004760,"byte_end":14004764,"line_start":599,"line_end":599,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1170}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":14004886,"byte_end":14004890,"line_start":605,"line_end":605,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1172}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":14005144,"byte_end":14005148,"line_start":616,"line_end":616,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1176},{"krate":0,"index":1177},{"krate":0,"index":1178}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":14008640,"byte_end":14008653,"line_start":745,"line_end":745,"column_start":73,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":1237}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":14009409,"byte_end":14009422,"line_start":766,"line_end":766,"column_start":59,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":1240}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":14009761,"byte_end":14009774,"line_start":777,"line_end":777,"column_start":60,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":1243},{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1247}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":14015366,"byte_end":14015372,"line_start":969,"line_end":969,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1261},{"krate":0,"index":1262}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":14015874,"byte_end":14015895,"line_start":992,"line_end":992,"column_start":56,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":1267},{"krate":0,"index":1268}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":14016544,"byte_end":14016568,"line_start":1016,"line_end":1016,"column_start":23,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1272}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":14016829,"byte_end":14016853,"line_start":1025,"line_end":1025,"column_start":40,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":14018396,"byte_end":14018403,"line_start":1073,"line_end":1073,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1321}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":14018961,"byte_end":14018968,"line_start":1092,"line_end":1092,"column_start":73,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":1329}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":14019127,"byte_end":14019134,"line_start":1098,"line_end":1098,"column_start":59,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":1332}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":14019753,"byte_end":14019760,"line_start":1115,"line_end":1115,"column_start":60,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1335},{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1338},{"krate":0,"index":1339}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":14021150,"byte_end":14021156,"line_start":1160,"line_end":1160,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1345}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14029983,"byte_end":14029984,"line_start":111,"line_end":111,"column_start":38,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1389}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14030939,"byte_end":14030950,"line_start":141,"line_end":141,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1397}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14031047,"byte_end":14031052,"line_start":147,"line_end":147,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1399},{"krate":0,"index":1401},{"krate":0,"index":1403},{"krate":0,"index":1405},{"krate":0,"index":1409},{"krate":0,"index":1410},{"krate":0,"index":1411},{"krate":0,"index":1412},{"krate":0,"index":1413},{"krate":0,"index":1416},{"krate":0,"index":1419}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14037782,"byte_end":14037787,"line_start":359,"line_end":359,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1422}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14037987,"byte_end":14037994,"line_start":368,"line_end":368,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1424},{"krate":0,"index":1426}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14040687,"byte_end":14040696,"line_start":432,"line_end":432,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1428}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14041176,"byte_end":14041189,"line_start":452,"line_end":452,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1430}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14042359,"byte_end":14042370,"line_start":479,"line_end":479,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1432},{"krate":0,"index":1433},{"krate":0,"index":1434},{"krate":0,"index":1437},{"krate":0,"index":1440},{"krate":0,"index":1441}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14047439,"byte_end":14047450,"line_start":636,"line_end":636,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1446}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14048286,"byte_end":14048295,"line_start":666,"line_end":666,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1450}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14049043,"byte_end":14049049,"line_start":688,"line_end":688,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1452}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14049558,"byte_end":14049564,"line_start":706,"line_end":706,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1457}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14050263,"byte_end":14050266,"line_start":730,"line_end":730,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1464},{"krate":0,"index":1465},{"krate":0,"index":1466}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14078971,"byte_end":14078977,"line_start":43,"line_end":43,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1507},{"krate":0,"index":1508},{"krate":0,"index":1509},{"krate":0,"index":1511},{"krate":0,"index":1512},{"krate":0,"index":1513}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14082252,"byte_end":14082258,"line_start":155,"line_end":155,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1515}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14082373,"byte_end":14082380,"line_start":162,"line_end":162,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1518},{"krate":0,"index":1519},{"krate":0,"index":1520},{"krate":0,"index":1521},{"krate":0,"index":1522},{"krate":0,"index":1523}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14083623,"byte_end":14083629,"line_start":209,"line_end":209,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1535}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14083780,"byte_end":14083790,"line_start":215,"line_end":215,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1537}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14084816,"byte_end":14084832,"line_start":251,"line_end":251,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1540}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14084967,"byte_end":14084983,"line_start":257,"line_end":257,"column_start":19,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14088790,"byte_end":14088801,"line_start":55,"line_end":55,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1547},{"krate":0,"index":1548},{"krate":0,"index":1549}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14091544,"byte_end":14091552,"line_start":140,"line_end":140,"column_start":6,"column_end":14},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14096734,"byte_end":14096745,"line_start":287,"line_end":287,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1552}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14096883,"byte_end":14096891,"line_start":293,"line_end":293,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1554}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14097408,"byte_end":14097415,"line_start":314,"line_end":314,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1556},{"krate":0,"index":1557},{"krate":0,"index":1558},{"krate":0,"index":1559},{"krate":0,"index":1560}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14099276,"byte_end":14099286,"line_start":361,"line_end":361,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1565}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14099982,"byte_end":14099992,"line_start":378,"line_end":378,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1567}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":10106,"byte_end":10114,"line_start":318,"line_end":318,"column_start":13,"column_end":21},"ref_id":{"krate":0,"index":1475}},{"kind":"Mod","span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs","byte_start":10158,"byte_end":10161,"line_start":320,"line_end":320,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":1542}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":10900,"byte_end":10905,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":40},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":14067,"byte_end":14072,"line_start":142,"line_end":142,"column_start":21,"column_end":26},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":40},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":14508,"byte_end":14513,"line_start":159,"line_end":159,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":40},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":14650,"byte_end":14656,"line_start":163,"line_end":163,"column_start":31,"column_end":37},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":15870,"byte_end":15875,"line_start":200,"line_end":200,"column_start":19,"column_end":24},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":40},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":17961,"byte_end":17969,"line_start":290,"line_end":290,"column_start":23,"column_end":31},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":170},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs","byte_start":18101,"byte_end":18109,"line_start":296,"line_end":296,"column_start":19,"column_end":27},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":170},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/into_url.rs","byte_start":19835,"byte_end":19848,"line_start":7,"line_end":7,"column_start":20,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":104},"to":{"krate":0,"index":97}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/into_url.rs","byte_start":19870,"byte_end":19873,"line_start":9,"line_end":9,"column_start":18,"column_end":21},"kind":{"Impl":{"id":7}},"from":{"krate":24,"index":908},"to":{"krate":0,"index":97}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/into_url.rs","byte_start":19894,"byte_end":19900,"line_start":10,"line_end":10,"column_start":18,"column_end":24},"kind":{"Impl":{"id":8}},"from":{"krate":5,"index":7617},"to":{"krate":0,"index":97}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/into_url.rs","byte_start":20239,"byte_end":20242,"line_start":22,"line_end":22,"column_start":24,"column_end":27},"kind":{"Impl":{"id":9}},"from":{"krate":24,"index":908},"to":{"krate":0,"index":104}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/into_url.rs","byte_start":20911,"byte_end":20917,"line_start":56,"line_end":56,"column_start":28,"column_end":34},"kind":{"Impl":{"id":10}},"from":{"krate":5,"index":7617},"to":{"krate":0,"index":104}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/response.rs","byte_start":22104,"byte_end":22111,"line_start":15,"line_end":15,"column_start":45,"column_end":52},"kind":{"Impl":{"id":11}},"from":{"krate":20,"index":3089},"to":{"krate":0,"index":126}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs","byte_start":13850758,"byte_end":13850762,"line_start":47,"line_end":47,"column_start":6,"column_end":10},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":270},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs","byte_start":13854037,"byte_end":13854041,"line_start":168,"line_end":168,"column_start":28,"column_end":32},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":270},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs","byte_start":13854287,"byte_end":13854291,"line_start":180,"line_end":180,"column_start":22,"column_end":26},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":270},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs","byte_start":13854406,"byte_end":13854410,"line_start":187,"line_end":187,"column_start":24,"column_end":28},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":270},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs","byte_start":13854536,"byte_end":13854540,"line_start":194,"line_end":194,"column_start":30,"column_end":34},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":270},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs","byte_start":13854674,"byte_end":13854678,"line_start":201,"line_end":201,"column_start":23,"column_end":27},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":270},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs","byte_start":13854798,"byte_end":13854802,"line_start":208,"line_end":208,"column_start":29,"column_end":33},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":270},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs","byte_start":13855077,"byte_end":13855081,"line_start":223,"line_end":223,"column_start":21,"column_end":25},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":270},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs","byte_start":13855242,"byte_end":13855252,"line_start":231,"line_end":231,"column_start":19,"column_end":29},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":272},"to":{"krate":37,"index":406}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs","byte_start":13857107,"byte_end":13857117,"line_start":290,"line_end":290,"column_start":17,"column_end":27},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":272},"to":{"krate":34,"index":96}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs","byte_start":13857348,"byte_end":13857358,"line_start":300,"line_end":300,"column_start":28,"column_end":38},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":2003},"to":{"krate":37,"index":406}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs","byte_start":13858023,"byte_end":13858032,"line_start":328,"line_end":328,"column_start":19,"column_end":28},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":282},"to":{"krate":37,"index":406}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13862731,"byte_end":13862744,"line_start":122,"line_end":122,"column_start":18,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":518},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13862808,"byte_end":13862821,"line_start":128,"line_end":128,"column_start":6,"column_end":19},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":518},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13903203,"byte_end":13903209,"line_start":1246,"line_end":1246,"column_start":18,"column_end":24},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1599},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13903273,"byte_end":13903279,"line_start":1252,"line_end":1252,"column_start":6,"column_end":12},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1599},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13910112,"byte_end":13910118,"line_start":1471,"line_end":1471,"column_start":21,"column_end":27},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1599},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13910331,"byte_end":13910344,"line_start":1479,"line_end":1479,"column_start":21,"column_end":34},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":518},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13910550,"byte_end":13910556,"line_start":1487,"line_end":1487,"column_start":6,"column_end":12},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":527},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13913336,"byte_end":13913345,"line_start":1590,"line_end":1590,"column_start":6,"column_end":15},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":639},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13914747,"byte_end":13914761,"line_start":1656,"line_end":1656,"column_start":6,"column_end":20},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1921},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13916629,"byte_end":13916636,"line_start":1722,"line_end":1722,"column_start":6,"column_end":13},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1978},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13916900,"byte_end":13916907,"line_start":1734,"line_end":1734,"column_start":17,"column_end":24},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1978},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13917374,"byte_end":13917388,"line_start":1748,"line_end":1748,"column_start":17,"column_end":31},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1921},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs","byte_start":13924292,"byte_end":13924299,"line_start":1910,"line_end":1910,"column_start":21,"column_end":28},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1978},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs","byte_start":13928156,"byte_end":13928163,"line_start":81,"line_end":81,"column_start":21,"column_end":28},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":718},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs","byte_start":13928282,"byte_end":13928289,"line_start":87,"line_end":87,"column_start":6,"column_end":13},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":718},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs","byte_start":13931994,"byte_end":13932001,"line_start":211,"line_end":211,"column_start":17,"column_end":24},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":718},"to":{"krate":34,"index":96}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs","byte_start":13934123,"byte_end":13934130,"line_start":257,"line_end":257,"column_start":19,"column_end":26},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":718},"to":{"krate":37,"index":406}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs","byte_start":13934893,"byte_end":13934900,"line_start":285,"line_end":285,"column_start":17,"column_end":24},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":724},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs","byte_start":13936555,"byte_end":13936563,"line_start":331,"line_end":331,"column_start":17,"column_end":25},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":728},"to":{"krate":34,"index":96}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs","byte_start":13937001,"byte_end":13937008,"line_start":345,"line_end":345,"column_start":6,"column_end":13},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1603},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs","byte_start":13938456,"byte_end":13938463,"line_start":407,"line_end":407,"column_start":18,"column_end":25},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1603},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13939835,"byte_end":13939842,"line_start":42,"line_end":42,"column_start":6,"column_end":13},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":831},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13942630,"byte_end":13942644,"line_start":165,"line_end":165,"column_start":6,"column_end":20},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":838},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13953880,"byte_end":13953887,"line_start":506,"line_end":506,"column_start":21,"column_end":28},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":831},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13954052,"byte_end":13954066,"line_start":512,"line_end":512,"column_start":21,"column_end":35},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":838},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13955627,"byte_end":13955634,"line_start":559,"line_end":559,"column_start":37,"column_end":44},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":831},"to":{"krate":2,"index":2932}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs","byte_start":13956225,"byte_end":13956236,"line_start":586,"line_end":586,"column_start":27,"column_end":38},"kind":{"Impl":{"id":50}},"from":{"krate":20,"index":1358},"to":{"krate":2,"index":2932}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13971106,"byte_end":13971114,"line_start":37,"line_end":37,"column_start":6,"column_end":14},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":975},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13981836,"byte_end":13981844,"line_start":392,"line_end":392,"column_start":21,"column_end":29},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":975},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13982149,"byte_end":13982157,"line_start":402,"line_end":402,"column_start":49,"column_end":57},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":975},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs","byte_start":13982899,"byte_end":13982903,"line_start":424,"line_end":424,"column_start":25,"column_end":29},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":270},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":13984873,"byte_end":13984886,"line_start":44,"line_end":44,"column_start":6,"column_end":19},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1609},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":13987207,"byte_end":13987220,"line_start":104,"line_end":104,"column_start":23,"column_end":36},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1609},"to":{"krate":51,"index":13}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":13990172,"byte_end":13990181,"line_start":187,"line_end":187,"column_start":6,"column_end":15},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1623},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":14003298,"byte_end":14003307,"line_start":550,"line_end":550,"column_start":23,"column_end":32},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1623},"to":{"krate":51,"index":13}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":14004125,"byte_end":14004134,"line_start":579,"line_end":579,"column_start":5,"column_end":14},"kind":"SuperTrait","from":{"krate":39,"index":199},"to":{"krate":0,"index":1165}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":14004137,"byte_end":14004147,"line_start":579,"line_end":579,"column_start":17,"column_end":27},"kind":"SuperTrait","from":{"krate":39,"index":278},"to":{"krate":0,"index":1165}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":14004150,"byte_end":14004160,"line_start":579,"line_end":579,"column_start":30,"column_end":40},"kind":"SuperTrait","from":{"krate":47,"index":3271},"to":{"krate":0,"index":1165}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":14004163,"byte_end":14004167,"line_start":579,"line_end":579,"column_start":43,"column_end":47},"kind":"SuperTrait","from":{"krate":2,"index":3019},"to":{"krate":0,"index":1165}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":14004170,"byte_end":14004174,"line_start":579,"line_end":579,"column_start":50,"column_end":54},"kind":"SuperTrait","from":{"krate":2,"index":3031},"to":{"krate":0,"index":1165}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":14004177,"byte_end":14004182,"line_start":579,"line_end":579,"column_start":57,"column_end":62},"kind":"SuperTrait","from":{"krate":2,"index":3060},"to":{"krate":0,"index":1165}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":14004289,"byte_end":14004290,"line_start":583,"line_end":583,"column_start":92,"column_end":93},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1167},"to":{"krate":0,"index":1165}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":14004760,"byte_end":14004764,"line_start":599,"line_end":599,"column_start":21,"column_end":25},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1892},"to":{"krate":47,"index":3271}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":14004886,"byte_end":14004890,"line_start":605,"line_end":605,"column_start":20,"column_end":24},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1892},"to":{"krate":39,"index":199}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":14005144,"byte_end":14005148,"line_start":616,"line_end":616,"column_start":21,"column_end":25},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1892},"to":{"krate":39,"index":278}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":14008640,"byte_end":14008653,"line_start":745,"line_end":745,"column_start":73,"column_end":86},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1859},"to":{"krate":47,"index":3271}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":14009409,"byte_end":14009422,"line_start":766,"line_end":766,"column_start":59,"column_end":72},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1859},"to":{"krate":39,"index":199}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":14009761,"byte_end":14009774,"line_start":777,"line_end":777,"column_start":60,"column_end":73},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1859},"to":{"krate":39,"index":278}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":14015366,"byte_end":14015372,"line_start":969,"line_end":969,"column_start":29,"column_end":35},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1249},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":14015874,"byte_end":14015895,"line_start":992,"line_end":992,"column_start":56,"column_end":77},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1826},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":14016544,"byte_end":14016568,"line_start":1016,"line_end":1016,"column_start":23,"column_end":47},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1639},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":14016829,"byte_end":14016853,"line_start":1025,"line_end":1025,"column_start":40,"column_end":64},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1639},"to":{"krate":51,"index":13}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":14018396,"byte_end":14018403,"line_start":1073,"line_end":1073,"column_start":10,"column_end":17},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":14018961,"byte_end":14018968,"line_start":1092,"line_end":1092,"column_start":73,"column_end":80},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1323},"to":{"krate":47,"index":3271}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":14019127,"byte_end":14019134,"line_start":1098,"line_end":1098,"column_start":59,"column_end":66},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1323},"to":{"krate":39,"index":199}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":14019753,"byte_end":14019760,"line_start":1115,"line_end":1115,"column_start":60,"column_end":67},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1323},"to":{"krate":39,"index":278}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs","byte_start":14021150,"byte_end":14021156,"line_start":1160,"line_end":1160,"column_start":25,"column_end":31},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1340},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14029983,"byte_end":14029984,"line_start":111,"line_end":111,"column_start":38,"column_end":39},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1388},"to":{"krate":0,"index":1385}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14030939,"byte_end":14030950,"line_start":141,"line_end":141,"column_start":26,"column_end":37},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1695},"to":{"krate":0,"index":1385}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14031047,"byte_end":14031052,"line_start":147,"line_end":147,"column_start":6,"column_end":11},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1652},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14037782,"byte_end":14037787,"line_start":359,"line_end":359,"column_start":21,"column_end":26},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1652},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14037987,"byte_end":14037994,"line_start":368,"line_end":368,"column_start":6,"column_end":13},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14040687,"byte_end":14040696,"line_start":432,"line_end":432,"column_start":6,"column_end":15},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1668},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14041176,"byte_end":14041189,"line_start":452,"line_end":452,"column_start":6,"column_end":19},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1677},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14042359,"byte_end":14042370,"line_start":479,"line_end":479,"column_start":6,"column_end":17},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1695},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14047439,"byte_end":14047450,"line_start":636,"line_end":636,"column_start":21,"column_end":32},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1695},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14048286,"byte_end":14048295,"line_start":666,"line_end":666,"column_start":6,"column_end":15},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1704},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14049043,"byte_end":14049049,"line_start":688,"line_end":688,"column_start":6,"column_end":12},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1724},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14049558,"byte_end":14049564,"line_start":706,"line_end":706,"column_start":21,"column_end":27},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1724},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs","byte_start":14050263,"byte_end":14050266,"line_start":730,"line_end":730,"column_start":14,"column_end":17},"kind":{"Impl":{"id":87}},"from":{"krate":20,"index":3218},"to":{"krate":0,"index":1459}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14078971,"byte_end":14078977,"line_start":43,"line_end":43,"column_start":6,"column_end":12},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1504},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14082252,"byte_end":14082258,"line_start":155,"line_end":155,"column_start":18,"column_end":24},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1504},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14082373,"byte_end":14082380,"line_start":162,"line_end":162,"column_start":10,"column_end":17},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1742},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14083623,"byte_end":14083629,"line_start":209,"line_end":209,"column_start":21,"column_end":27},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1504},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14083780,"byte_end":14083790,"line_start":215,"line_end":215,"column_start":21,"column_end":31},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1525},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14084816,"byte_end":14084832,"line_start":251,"line_end":251,"column_start":23,"column_end":39},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1764},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs","byte_start":14084967,"byte_end":14084983,"line_start":257,"line_end":257,"column_start":19,"column_end":35},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1764},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14088790,"byte_end":14088801,"line_start":55,"line_end":55,"column_start":6,"column_end":17},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14091544,"byte_end":14091552,"line_start":140,"line_end":140,"column_start":6,"column_end":14},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1772},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14096734,"byte_end":14096745,"line_start":287,"line_end":287,"column_start":21,"column_end":32},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1768},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14096883,"byte_end":14096891,"line_start":293,"line_end":293,"column_start":21,"column_end":29},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1772},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14097408,"byte_end":14097415,"line_start":314,"line_end":314,"column_start":6,"column_end":13},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1779},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14099276,"byte_end":14099286,"line_start":361,"line_end":361,"column_start":21,"column_end":31},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1561},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/shorida/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs","byte_start":14099982,"byte_end":14099992,"line_start":378,"line_end":378,"column_start":18,"column_end":28},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1561},"to":{"krate":2,"index":2997}}]}